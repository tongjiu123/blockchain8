{"id":"abab3740a0ddf1bc42923da80f793ff5","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\nimport {Arrays} from \"../Arrays.sol\";\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n * - Set can be cleared (all elements removed) in O(n).\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function _clear(Set storage set) private {\n        uint256 len = _length(set);\n        for (uint256 i = 0; i < len; ++i) {\n            delete set._positions[set._values[i]];\n        }\n        Arrays.unsafeSetLength(set._values, 0);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(Bytes32Set storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(AddressSet storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(UintSet storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/BaselineRevocation.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title BaselineRevocation\n * @dev A simple, baseline smart contract for managing certificate revocations.\n * This contract uses a basic mapping to store the revocation status of each certificate.\n * It serves as a performance and cost baseline to compare against more advanced\n * revocation mechanisms (e.g., those using cryptographic accumulators).\n */\ncontract BaselineRevocation {\n    // Mapping from a certificate ID to its revocation status.\n    // `true` means the certificate is revoked.\n    mapping(bytes32 => bool) public revoked;\n\n    address public owner;\n\n    event CertificateRevoked(bytes32 indexed certificateId);\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Revokes a certificate.\n     * Only the owner of the contract can call this function.\n     * @param certificateId The unique identifier of the certificate to revoke.\n     */\n    function revoke(bytes32 certificateId) external {\n        require(msg.sender == owner, \"Only owner can revoke.\");\n        require(!revoked[certificateId], \"Certificate already revoked.\");\n        \n        revoked[certificateId] = true;\n        emit CertificateRevoked(certificateId);\n    }\n\n    /**\n     * @dev Checks if a certificate is revoked.\n     * @param certificateId The unique identifier of the certificate to check.\n     * @return bool Returns true if the certificate is revoked, false otherwise.\n     */\n    function isRevoked(bytes32 certificateId) external view returns (bool) {\n        return revoked[certificateId];\n    }\n}\n"},"contracts/Certificate.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\n/**\n * @title Certificate\n * @dev This contract manages the lifecycle of academic certificates using a hybrid storage model.\n * It stores a hash of the certificate data on-chain, while the full data is stored off-chain (e.g., IPFS).\n * This approach significantly reduces gas costs and improves scalability.\n */\ncontract Certificate is Ownable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    // --- Events ---\n    event CertificateIssued(bytes32 indexed certificateHash, address indexed institution, uint256 timestamp);\n    event CertificateRevoked(bytes32 indexed certificateHash, address indexed institution, uint256 timestamp);\n    event InstitutionAdded(address indexed institution);\n    event InstitutionRemoved(address indexed institution);\n\n    // --- State Variables ---\n\n    // Represents the status of a certificate.\n    enum Status { Unissued, Issued, Revoked }\n\n    // Struct to hold certificate details.\n    struct CertificateDetails {\n        Status status;\n        address issuingInstitution;\n        uint256 timestamp;\n    }\n\n    // Mapping from certificate hash to its details.\n    mapping(bytes32 => CertificateDetails) private _certificates;\n\n    // A set of addresses for authorized educational institutions.\n    EnumerableSet.AddressSet private _institutions;\n\n    // --- Modifiers ---\n\n    /**\n     * @dev Throws if called by any account that is not an authorized institution.\n     */\n    modifier onlyInstitution() {\n        require(_institutions.contains(msg.sender), \"Caller is not an authorized institution\");\n        _;\n    }\n\n    // --- Constructor ---\n\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    // --- Institution Management Functions (Owner only) ---\n\n    /**\n     * @dev Adds a new institution to the set of authorized issuers.\n     * @param institutionAddress The address of the institution to add.\n     */\n    function addInstitution(address institutionAddress) external onlyOwner {\n        require(institutionAddress != address(0), \"Invalid address\");\n        require(_institutions.add(institutionAddress), \"Institution already exists\");\n        emit InstitutionAdded(institutionAddress);\n    }\n\n    /**\n     * @dev Removes an institution from the set of authorized issuers.\n     * @param institutionAddress The address of the institution to remove.\n     */\n    function removeInstitution(address institutionAddress) external onlyOwner {\n        require(_institutions.remove(institutionAddress), \"Institution does not exist\");\n        emit InstitutionRemoved(institutionAddress);\n    }\n\n    // --- Certificate Lifecycle Functions (Institution only) ---\n\n    /**\n     * @dev Issues a new certificate by storing its hash.\n     * @param certificateHash The keccak256 hash of the off-chain certificate data.\n     */\n    function issueCertificate(bytes32 certificateHash) external onlyInstitution {\n        require(_certificates[certificateHash].status == Status.Unissued, \"Certificate already exists\");\n\n        _certificates[certificateHash] = CertificateDetails({\n            status: Status.Issued,\n            issuingInstitution: msg.sender,\n            timestamp: block.timestamp\n        });\n\n        emit CertificateIssued(certificateHash, msg.sender, block.timestamp);\n    }\n\n    /**\n     * @dev Revokes an existing certificate.\n     * @param certificateHash The hash of the certificate to revoke.\n     */\n    function revokeCertificate(bytes32 certificateHash) external onlyInstitution {\n        CertificateDetails storage cert = _certificates[certificateHash];\n        require(cert.status == Status.Issued, \"Certificate not in issued state\");\n        // Optional: require(cert.issuingInstitution == msg.sender, \"Only the issuing institution can revoke\");\n\n        cert.status = Status.Revoked;\n        emit CertificateRevoked(certificateHash, msg.sender, block.timestamp);\n    }\n\n    // --- Public View Functions ---\n\n    /**\n     * @dev Verifies the status of a certificate.\n     * @param certificateHash The hash of the certificate to verify.\n     * @return The status, issuing institution, and timestamp of the certificate.\n     */\n    function getCertificateStatus(bytes32 certificateHash) external view returns (Status, address, uint256) {\n        CertificateDetails storage cert = _certificates[certificateHash];\n        return (cert.status, cert.issuingInstitution, cert.timestamp);\n    }\n\n    /**\n     * @dev Checks if an address is an authorized institution.\n     * @param institutionAddress The address to check.\n     * @return True if the address is an institution, false otherwise.\n     */\n    function isInstitution(address institutionAddress) external view returns (bool) {\n        return _institutions.contains(institutionAddress);\n    }\n\n    /**\n     * @dev Returns the number of authorized institutions.\n     */\n    function getInstitutionCount() external view returns (uint256) {\n        return _institutions.length();\n    }\n\n    /**\n     * @dev Returns an institution at a specific index.\n     */\n    function getInstitutionAtIndex(uint256 index) external view returns (address) {\n        return _institutions.at(index);\n    }\n}\n"},"contracts/CertificateOnChain.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title CertificateOnChain\n * @dev A baseline contract for comparison, storing all certificate data directly on-chain.\n * This contract is intentionally designed to be less efficient to highlight the benefits\n * of the hybrid storage model in the main `Certificate` contract.\n */\ncontract CertificateOnChain is Ownable {\n\n    // --- Events ---\n    event CertificateIssued(uint256 indexed certificateId, address indexed institution, string studentName);\n\n    // --- State Variables ---\n\n    struct CertificateData {\n        string studentName;\n        string degreeType;\n        string institutionName;\n        uint256 issueTimestamp;\n        address issuingInstitution;\n        bool isIssued;\n    }\n\n    // Using an array to store certificate data to simulate a simple on-chain list.\n    CertificateData[] public certificates;\n\n    // Mapping from an ID to its index in the array for quick lookup, though not used in this simple version.\n    mapping(uint256 => uint256) private certificateIndex;\n\n    // --- Constructor ---\n\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    // --- Certificate Issuance Function ---\n\n    /**\n     * @dev Issues a new certificate by storing all its data on-chain.\n     * This function will consume a significant amount of gas, especially with longer strings.\n     * @param studentName The name of the student.\n     * @param degreeType The type of degree awarded.\n     * @param institutionName The name of the issuing institution.\n     */\n    function issueCertificate(\n        string calldata studentName,\n        string calldata degreeType,\n        string calldata institutionName\n    ) external onlyOwner {\n        uint256 certificateId = certificates.length;\n\n        certificates.push(CertificateData({\n            studentName: studentName,\n            degreeType: degreeType,\n            institutionName: institutionName,\n            issueTimestamp: block.timestamp,\n            issuingInstitution: msg.sender,\n            isIssued: true\n        }));\n\n        certificateIndex[certificateId] = certificateId; // Simple index mapping\n\n        emit CertificateIssued(certificateId, msg.sender, studentName);\n    }\n\n    // --- Public View Functions ---\n\n    /**\n     * @dev Retrieves the full data of a certificate.\n     * @param certificateId The ID of the certificate to retrieve.\n     * @return The full certificate data.\n     */\n    function getCertificateData(uint256 certificateId) external view returns (CertificateData memory) {\n        require(certificateId < certificates.length, \"Certificate ID out of bounds\");\n        return certificates[certificateId];\n    }\n\n    /**\n     * @dev Returns the total number of certificates issued.\n     */\n    function getCertificateCount() external view returns (uint256) {\n        return certificates.length;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1087],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1088,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1087,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1087],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[1025],"Comparators":[1057],"Math":[3014],"SlotDerivation":[1269],"StorageSlot":[1393]},"id":1026,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1026,"sourceUnit":1058,"src":"209:46:1","symbolAliases":[{"foreign":{"id":150,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"217:11:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1026,"sourceUnit":1270,"src":"256:52:1","symbolAliases":[{"foreign":{"id":152,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"264:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1026,"sourceUnit":1394,"src":"309:46:1","symbolAliases":[{"foreign":{"id":154,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"317:11:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1026,"sourceUnit":3015,"src":"356:37:1","symbolAliases":[{"foreign":{"id":156,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"364:4:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"395:63:1","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":1025,"linearizedBaseContracts":[1025],"name":"Arrays","nameLocation":"467:6:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":161,"libraryName":{"id":159,"name":"SlotDerivation","nameLocations":["486:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":1269,"src":"486:14:1"},"nodeType":"UsingForDirective","src":"480:33:1","typeName":{"id":160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":164,"libraryName":{"id":162,"name":"StorageSlot","nameLocations":["524:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":1393,"src":"524:11:1"},"nodeType":"UsingForDirective","src":"518:30:1","typeName":{"id":163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":196,"nodeType":"Block","src":"1628:83:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":186,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"1656:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":185,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"1649:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":189,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"1669:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":188,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"1664:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":191,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"1677:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":184,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"1638:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":193,"nodeType":"ExpressionStatement","src":"1638:44:1"},{"expression":{"id":194,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"1699:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":183,"id":195,"nodeType":"Return","src":"1692:12:1"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"554:915:1","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":197,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:1","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"array","nameLocation":"1514:5:1","nodeType":"VariableDeclaration","scope":197,"src":"1497:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":167,"nodeType":"ArrayTypeName","src":"1497:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"comp","nameLocation":"1576:4:1","nodeType":"VariableDeclaration","scope":197,"src":"1529:51:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":177,"nodeType":"FunctionTypeName","parameterTypes":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"1538:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"1547:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:1"},"returnParameterTypes":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"1570:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:1"},"src":"1529:51:1","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:1"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"1610:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":181,"nodeType":"ArrayTypeName","src":"1610:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:1"},"scope":1025,"src":"1474:237:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":215,"nodeType":"Block","src":"1894:66:1","statements":[{"expression":{"arguments":[{"id":208,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1909:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":209,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"1916:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$1057_$","typeString":"type(library Comparators)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:1","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":1042,"src":"1916:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":207,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[197,216,248,269,301,322],"referencedDeclaration":197,"src":"1904:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":212,"nodeType":"ExpressionStatement","src":"1904:27:1"},{"expression":{"id":213,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1948:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":206,"id":214,"nodeType":"Return","src":"1941:12:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"1717:93:1","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":216,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"array","nameLocation":"1846:5:1","nodeType":"VariableDeclaration","scope":216,"src":"1829:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":200,"nodeType":"ArrayTypeName","src":"1829:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:1"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"1876:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":204,"nodeType":"ArrayTypeName","src":"1876:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:1"},"scope":1025,"src":"1815:145:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":247,"nodeType":"Block","src":"3040:97:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":238,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"3075:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":237,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[473,485],"referencedDeclaration":473,"src":"3055:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":241,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3102:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":240,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[511,537],"referencedDeclaration":511,"src":"3083:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":236,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[197,216,248,269,301,322],"referencedDeclaration":197,"src":"3050:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":244,"nodeType":"ExpressionStatement","src":"3050:58:1"},{"expression":{"id":245,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"3125:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":235,"id":246,"nodeType":"Return","src":"3118:12:1"}]},"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"1966:915:1","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":248,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:1","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"array","nameLocation":"2926:5:1","nodeType":"VariableDeclaration","scope":248,"src":"2909:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":219,"nodeType":"ArrayTypeName","src":"2909:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"comp","nameLocation":"2988:4:1","nodeType":"VariableDeclaration","scope":248,"src":"2941:51:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":229,"nodeType":"FunctionTypeName","parameterTypes":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":229,"src":"2950:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":229,"src":"2959:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:1"},"returnParameterTypes":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":229,"src":"2982:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":226,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:1"},"src":"2941:51:1","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:1"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":248,"src":"3022:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":233,"nodeType":"ArrayTypeName","src":"3022:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:1"},"scope":1025,"src":"2886:251:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":268,"nodeType":"Block","src":"3320:87:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":260,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"3355:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":259,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[473,485],"referencedDeclaration":473,"src":"3335:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":262,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"3363:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$1057_$","typeString":"type(library Comparators)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:1","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":1042,"src":"3363:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":258,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[197,216,248,269,301,322],"referencedDeclaration":197,"src":"3330:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":265,"nodeType":"ExpressionStatement","src":"3330:48:1"},{"expression":{"id":266,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"3395:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":257,"id":267,"nodeType":"Return","src":"3388:12:1"}]},"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"3143:93:1","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":269,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:1","nodeType":"FunctionDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"array","nameLocation":"3272:5:1","nodeType":"VariableDeclaration","scope":269,"src":"3255:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":251,"nodeType":"ArrayTypeName","src":"3255:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:1"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"3302:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":255,"nodeType":"ArrayTypeName","src":"3302:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:1"},"scope":1025,"src":"3241:166:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":300,"nodeType":"Block","src":"4487:97:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":291,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"4522:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":290,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[473,485],"referencedDeclaration":485,"src":"4502:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":294,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4549:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":293,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[511,537],"referencedDeclaration":537,"src":"4530:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":289,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[197,216,248,269,301,322],"referencedDeclaration":197,"src":"4497:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":297,"nodeType":"ExpressionStatement","src":"4497:58:1"},{"expression":{"id":298,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"4572:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":288,"id":299,"nodeType":"Return","src":"4565:12:1"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"3413:915:1","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":301,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"array","nameLocation":"4373:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4356:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":272,"nodeType":"ArrayTypeName","src":"4356:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"comp","nameLocation":"4435:4:1","nodeType":"VariableDeclaration","scope":301,"src":"4388:51:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":282,"nodeType":"FunctionTypeName","parameterTypes":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":282,"src":"4397:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":282,"src":"4406:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:1"},"returnParameterTypes":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":282,"src":"4429:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":279,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:1"},"src":"4388:51:1","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:1"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":301,"src":"4469:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":286,"nodeType":"ArrayTypeName","src":"4469:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:1"},"scope":1025,"src":"4333:251:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":321,"nodeType":"Block","src":"4767:87:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":313,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4802:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":312,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[473,485],"referencedDeclaration":485,"src":"4782:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":315,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4810:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$1057_$","typeString":"type(library Comparators)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:1","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":1042,"src":"4810:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":311,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[197,216,248,269,301,322],"referencedDeclaration":197,"src":"4777:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":318,"nodeType":"ExpressionStatement","src":"4777:48:1"},{"expression":{"id":319,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4842:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":310,"id":320,"nodeType":"Return","src":"4835:12:1"}]},"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"4590:93:1","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":322,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:1","nodeType":"FunctionDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"array","nameLocation":"4719:5:1","nodeType":"VariableDeclaration","scope":322,"src":"4702:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":304,"nodeType":"ArrayTypeName","src":"4702:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:1"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":322,"src":"4749:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":308,"nodeType":"ArrayTypeName","src":"4749:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:1"},"scope":1025,"src":"4688:166:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":409,"nodeType":"Block","src":"5470:889:1","statements":[{"id":408,"nodeType":"UncheckedBlock","src":"5480:873:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":340,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"5508:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":341,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5514:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":346,"nodeType":"IfStatement","src":"5504:31:1","trueBody":{"functionReturnParameters":339,"id":345,"nodeType":"Return","src":"5528:7:1"}},{"assignments":[348],"declarations":[{"constant":false,"id":348,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:1","nodeType":"VariableDeclaration","scope":408,"src":"5591:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":352,"initialValue":{"arguments":[{"id":350,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5614:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":349,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5607:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:1"},{"assignments":[354],"declarations":[{"constant":false,"id":354,"mutability":"mutable","name":"pos","nameLocation":"5715:3:1","nodeType":"VariableDeclaration","scope":408,"src":"5707:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":356,"initialValue":{"id":355,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5721:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:1"},{"body":{"id":387,"nodeType":"Block","src":"5795:331:1","statements":[{"condition":{"arguments":[{"arguments":[{"id":372,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5829:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":371,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5822:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":374,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"5834:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":370,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5817:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"5813:299:1","trueBody":{"id":385,"nodeType":"Block","src":"5842:270:1","statements":[{"expression":{"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":376,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"6046:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":379,"nodeType":"ExpressionStatement","src":"6046:11:1"},{"expression":{"arguments":[{"id":381,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"6085:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":382,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"6090:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":380,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6079:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"ExpressionStatement","src":"6079:14:1"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":363,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5773:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":364,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"5778:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":388,"initializationExpression":{"assignments":[358],"declarations":[{"constant":false,"id":358,"mutability":"mutable","name":"it","nameLocation":"5754:2:1","nodeType":"VariableDeclaration","scope":388,"src":"5746:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":362,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5759:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:1"},"loopExpression":{"expression":{"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":366,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5783:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":369,"nodeType":"ExpressionStatement","src":"5783:10:1"},"nodeType":"ForStatement","src":"5741:385:1"},{"expression":{"arguments":[{"id":390,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"6146:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":391,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"6153:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":389,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6140:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"ExpressionStatement","src":"6140:17:1"},{"expression":{"arguments":[{"id":395,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"6207:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":396,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"6214:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":397,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"6219:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":394,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"6196:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":399,"nodeType":"ExpressionStatement","src":"6196:28:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":401,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"6284:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":404,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6296:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":405,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"6301:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":400,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"6273:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"6273:33:1"}]}]},"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"4860:491:1","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":410,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:1","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"begin","nameLocation":"5384:5:1","nodeType":"VariableDeclaration","scope":410,"src":"5376:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"end","nameLocation":"5399:3:1","nodeType":"VariableDeclaration","scope":410,"src":"5391:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"comp","nameLocation":"5451:4:1","nodeType":"VariableDeclaration","scope":410,"src":"5404:51:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":336,"nodeType":"FunctionTypeName","parameterTypes":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":336,"src":"5413:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":336,"src":"5422:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:1"},"returnParameterTypes":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":336,"src":"5445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":333,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:1"},"src":"5404:51:1","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:1"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"5470:0:1"},"scope":1025,"src":"5356:1003:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":420,"nodeType":"Block","src":"6532:88:1","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:1","statements":[{"nodeType":"YulAssignment","src":"6581:23:1","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:1"},"nodeType":"YulFunctionCall","src":"6588:16:1"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":414,"isOffset":false,"isSlot":false,"src":"6592:5:1","valueSize":1},{"declaration":417,"isOffset":false,"isSlot":false,"src":"6581:3:1","valueSize":1}],"flags":["memory-safe"],"id":419,"nodeType":"InlineAssembly","src":"6542:72:1"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"6365:87:1","text":" @dev Pointer to the memory location of the first element of `array`."},"id":421,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:1","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"array","nameLocation":"6490:5:1","nodeType":"VariableDeclaration","scope":421,"src":"6473:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":413,"nodeType":"ArrayTypeName","src":"6473:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:1"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:1","nodeType":"VariableDeclaration","scope":421,"src":"6519:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:1"},"scope":1025,"src":"6457:163:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":440,"nodeType":"Block","src":"6892:93:1","statements":[{"id":439,"nodeType":"UncheckedBlock","src":"6902:77:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":431,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6940:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":430,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"6933:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":433,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6949:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:1","memberName":"length","nodeType":"MemberAccess","src":"6949:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":429,"id":438,"nodeType":"Return","src":"6926:42:1"}]}]},"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"6626:188:1","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":441,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:1","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"array","nameLocation":"6850:5:1","nodeType":"VariableDeclaration","scope":441,"src":"6833:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":424,"nodeType":"ArrayTypeName","src":"6833:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:1"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:1","nodeType":"VariableDeclaration","scope":441,"src":"6879:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:1"},"scope":1025,"src":"6819:166:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":450,"nodeType":"Block","src":"7136:68:1","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:1","statements":[{"nodeType":"YulAssignment","src":"7169:19:1","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:1"},"nodeType":"YulFunctionCall","src":"7178:10:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":444,"isOffset":false,"isSlot":false,"src":"7184:3:1","valueSize":1},{"declaration":447,"isOffset":false,"isSlot":false,"src":"7169:5:1","valueSize":1}],"id":449,"nodeType":"InlineAssembly","src":"7146:52:1"}]},"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"6991:74:1","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":451,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:1","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:1","nodeType":"VariableDeclaration","scope":451,"src":"7086:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:1"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"value","nameLocation":"7129:5:1","nodeType":"VariableDeclaration","scope":451,"src":"7121:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:1"},"scope":1025,"src":"7070:134:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":460,"nodeType":"Block","src":"7348:178:1","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:1","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:1","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:1"},"nodeType":"YulFunctionCall","src":"7395:11:1"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:1","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:1"},"nodeType":"YulFunctionCall","src":"7433:11:1"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:1","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:1"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:1"},"nodeType":"YulFunctionCall","src":"7457:20:1"},"nodeType":"YulExpressionStatement","src":"7457:20:1"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:1"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:1"},"nodeType":"YulFunctionCall","src":"7490:20:1"},"nodeType":"YulExpressionStatement","src":"7490:20:1"}]},"evmVersion":"paris","externalReferences":[{"declaration":454,"isOffset":false,"isSlot":false,"src":"7401:4:1","valueSize":1},{"declaration":454,"isOffset":false,"isSlot":false,"src":"7464:4:1","valueSize":1},{"declaration":456,"isOffset":false,"isSlot":false,"src":"7439:4:1","valueSize":1},{"declaration":456,"isOffset":false,"isSlot":false,"src":"7497:4:1","valueSize":1}],"id":459,"nodeType":"InlineAssembly","src":"7358:162:1"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"7210:77:1","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":461,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:1","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:1","nodeType":"VariableDeclaration","scope":461,"src":"7307:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:1","nodeType":"VariableDeclaration","scope":461,"src":"7321:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:1"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[],"src":"7348:0:1"},"scope":1025,"src":"7292:234:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":472,"nodeType":"Block","src":"7713:64:1","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:1","statements":[{"nodeType":"YulAssignment","src":"7746:15:1","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:1"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":465,"isOffset":false,"isSlot":false,"src":"7756:5:1","valueSize":1},{"declaration":469,"isOffset":false,"isSlot":false,"src":"7746:6:1","valueSize":1}],"id":471,"nodeType":"InlineAssembly","src":"7723:48:1"}]},"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"7532:76:1","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":473,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:1","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"input","nameLocation":"7659:5:1","nodeType":"VariableDeclaration","scope":473,"src":"7642:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":464,"nodeType":"ArrayTypeName","src":"7642:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:1"},"returnParameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"output","nameLocation":"7705:6:1","nodeType":"VariableDeclaration","scope":473,"src":"7688:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ArrayTypeName","src":"7688:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:1"},"scope":1025,"src":"7613:164:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":484,"nodeType":"Block","src":"7964:64:1","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:1","statements":[{"nodeType":"YulAssignment","src":"7997:15:1","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:1"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":477,"isOffset":false,"isSlot":false,"src":"8007:5:1","valueSize":1},{"declaration":481,"isOffset":false,"isSlot":false,"src":"7997:6:1","valueSize":1}],"id":483,"nodeType":"InlineAssembly","src":"7974:48:1"}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"7783:76:1","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":485,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:1","nodeType":"FunctionDefinition","parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"input","nameLocation":"7910:5:1","nodeType":"VariableDeclaration","scope":485,"src":"7893:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":476,"nodeType":"ArrayTypeName","src":"7893:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:1"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"output","nameLocation":"7956:6:1","nodeType":"VariableDeclaration","scope":485,"src":"7939:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":480,"nodeType":"ArrayTypeName","src":"7939:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:1"},"scope":1025,"src":"7864:164:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":510,"nodeType":"Block","src":"8290:64:1","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:1","statements":[{"nodeType":"YulAssignment","src":"8323:15:1","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:1"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":496,"isOffset":false,"isSlot":false,"src":"8333:5:1","valueSize":1},{"declaration":507,"isOffset":false,"isSlot":false,"src":"8323:6:1","valueSize":1}],"id":509,"nodeType":"InlineAssembly","src":"8300:48:1"}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"8034:78:1","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":511,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"input","nameLocation":"8201:5:1","nodeType":"VariableDeclaration","scope":511,"src":"8154:52:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":495,"nodeType":"FunctionTypeName","parameterTypes":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":495,"src":"8163:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":495,"src":"8172:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:1"},"returnParameterTypes":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":495,"src":"8195:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":492,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:1"},"src":"8154:52:1","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:1"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"output","nameLocation":"8282:6:1","nodeType":"VariableDeclaration","scope":511,"src":"8235:53:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":506,"nodeType":"FunctionTypeName","parameterTypes":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":506,"src":"8244:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":506,"src":"8253:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:1"},"returnParameterTypes":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":506,"src":"8276:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":503,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:1"},"src":"8235:53:1","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:1"},"scope":1025,"src":"8117:237:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":536,"nodeType":"Block","src":"8616:64:1","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:1","statements":[{"nodeType":"YulAssignment","src":"8649:15:1","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:1"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":522,"isOffset":false,"isSlot":false,"src":"8659:5:1","valueSize":1},{"declaration":533,"isOffset":false,"isSlot":false,"src":"8649:6:1","valueSize":1}],"id":535,"nodeType":"InlineAssembly","src":"8626:48:1"}]},"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"8360:78:1","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":537,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:1","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"input","nameLocation":"8527:5:1","nodeType":"VariableDeclaration","scope":537,"src":"8480:52:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":521,"nodeType":"FunctionTypeName","parameterTypes":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":521,"src":"8489:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":521,"src":"8498:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:1"},"returnParameterTypes":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":521,"src":"8521:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":518,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:1"},"src":"8480:52:1","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:1"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"output","nameLocation":"8608:6:1","nodeType":"VariableDeclaration","scope":537,"src":"8561:53:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":532,"nodeType":"FunctionTypeName","parameterTypes":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":532,"src":"8570:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":532,"src":"8579:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:1"},"returnParameterTypes":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":532,"src":"8602:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":529,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:1"},"src":"8561:53:1","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:1"},"scope":1025,"src":"8443:237:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":619,"nodeType":"Block","src":"9405:834:1","statements":[{"assignments":[549],"declarations":[{"constant":false,"id":549,"mutability":"mutable","name":"low","nameLocation":"9423:3:1","nodeType":"VariableDeclaration","scope":619,"src":"9415:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":551,"initialValue":{"hexValue":"30","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:1"},{"assignments":[553],"declarations":[{"constant":false,"id":553,"mutability":"mutable","name":"high","nameLocation":"9448:4:1","nodeType":"VariableDeclaration","scope":619,"src":"9440:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":556,"initialValue":{"expression":{"id":554,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"9455:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:1","memberName":"length","nodeType":"MemberAccess","src":"9455:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"9482:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":563,"nodeType":"IfStatement","src":"9478:48:1","trueBody":{"id":562,"nodeType":"Block","src":"9493:33:1","statements":[{"expression":{"hexValue":"30","id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":547,"id":561,"nodeType":"Return","src":"9507:8:1"}]}},{"body":{"id":595,"nodeType":"Block","src":"9555:423:1","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"mid","nameLocation":"9577:3:1","nodeType":"VariableDeclaration","scope":595,"src":"9569:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":574,"initialValue":{"arguments":[{"id":571,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"9596:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":572,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"9601:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":569,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"9583:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3014_$","typeString":"type(library Math)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:1","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"9583:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":576,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"9844:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":577,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"9851:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":575,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[900,926,952],"referencedDeclaration":952,"src":"9831:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1284_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1284_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:1","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"9831:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":580,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"9864:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":593,"nodeType":"Block","src":"9922:46:1","statements":[{"expression":{"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":587,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"9940:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":588,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"9946:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":592,"nodeType":"ExpressionStatement","src":"9940:13:1"}]},"id":594,"nodeType":"IfStatement","src":"9827:141:1","trueBody":{"id":586,"nodeType":"Block","src":"9873:43:1","statements":[{"expression":{"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":582,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"9891:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":583,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"9898:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":585,"nodeType":"ExpressionStatement","src":"9891:10:1"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"9543:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":565,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"9549:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":596,"nodeType":"WhileStatement","src":"9536:442:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10095:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":601,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"10119:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":602,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10126:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":600,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[900,926,952],"referencedDeclaration":952,"src":"10106:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1284_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1284_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:1","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"10106:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":607,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"10144:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":617,"nodeType":"Block","src":"10198:35:1","statements":[{"expression":{"id":615,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10219:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":547,"id":616,"nodeType":"Return","src":"10212:10:1"}]},"id":618,"nodeType":"IfStatement","src":"10091:142:1","trueBody":{"id":614,"nodeType":"Block","src":"10153:39:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":610,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10174:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":547,"id":613,"nodeType":"Return","src":"10167:14:1"}]}}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"8686:616:1","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":620,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:1","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"array","nameLocation":"9349:5:1","nodeType":"VariableDeclaration","scope":620,"src":"9331:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":540,"nodeType":"ArrayTypeName","src":"9331:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"element","nameLocation":"9364:7:1","nodeType":"VariableDeclaration","scope":620,"src":"9356:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:1"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":620,"src":"9396:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:1"},"scope":1025,"src":"9307:932:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":683,"nodeType":"Block","src":"10756:709:1","statements":[{"assignments":[632],"declarations":[{"constant":false,"id":632,"mutability":"mutable","name":"low","nameLocation":"10774:3:1","nodeType":"VariableDeclaration","scope":683,"src":"10766:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":634,"initialValue":{"hexValue":"30","id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:1"},{"assignments":[636],"declarations":[{"constant":false,"id":636,"mutability":"mutable","name":"high","nameLocation":"10799:4:1","nodeType":"VariableDeclaration","scope":683,"src":"10791:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":639,"initialValue":{"expression":{"id":637,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"10806:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:1","memberName":"length","nodeType":"MemberAccess","src":"10806:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"10833:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":646,"nodeType":"IfStatement","src":"10829:48:1","trueBody":{"id":645,"nodeType":"Block","src":"10844:33:1","statements":[{"expression":{"hexValue":"30","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":630,"id":644,"nodeType":"Return","src":"10858:8:1"}]}},{"body":{"id":679,"nodeType":"Block","src":"10906:532:1","statements":[{"assignments":[651],"declarations":[{"constant":false,"id":651,"mutability":"mutable","name":"mid","nameLocation":"10928:3:1","nodeType":"VariableDeclaration","scope":679,"src":"10920:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":657,"initialValue":{"arguments":[{"id":654,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"10947:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":655,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"10952:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":652,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"10934:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3014_$","typeString":"type(library Math)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:1","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"10934:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":659,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"11195:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":660,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"11202:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":658,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[900,926,952],"referencedDeclaration":952,"src":"11182:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1284_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1284_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:1","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"11182:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":663,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"11215:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":677,"nodeType":"Block","src":"11385:43:1","statements":[{"expression":{"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":673,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11403:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":674,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"11410:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":676,"nodeType":"ExpressionStatement","src":"11403:10:1"}]},"id":678,"nodeType":"IfStatement","src":"11178:250:1","trueBody":{"id":672,"nodeType":"Block","src":"11224:155:1","statements":[{"id":671,"nodeType":"UncheckedBlock","src":"11301:64:1","statements":[{"expression":{"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":665,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"11333:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":666,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"11339:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":670,"nodeType":"ExpressionStatement","src":"11333:13:1"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"10894:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":648,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"10900:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"nodeType":"WhileStatement","src":"10887:551:1"},{"expression":{"id":681,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"11455:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":630,"id":682,"nodeType":"Return","src":"11448:10:1"}]},"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"10245:412:1","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":684,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:1","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"array","nameLocation":"10700:5:1","nodeType":"VariableDeclaration","scope":684,"src":"10682:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":623,"nodeType":"ArrayTypeName","src":"10682:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"element","nameLocation":"10715:7:1","nodeType":"VariableDeclaration","scope":684,"src":"10707:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:1"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":684,"src":"10747:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:1"},"scope":1025,"src":"10662:803:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"11982:709:1","statements":[{"assignments":[696],"declarations":[{"constant":false,"id":696,"mutability":"mutable","name":"low","nameLocation":"12000:3:1","nodeType":"VariableDeclaration","scope":747,"src":"11992:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":698,"initialValue":{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:1"},{"assignments":[700],"declarations":[{"constant":false,"id":700,"mutability":"mutable","name":"high","nameLocation":"12025:4:1","nodeType":"VariableDeclaration","scope":747,"src":"12017:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":703,"initialValue":{"expression":{"id":701,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"12032:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:1","memberName":"length","nodeType":"MemberAccess","src":"12032:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"12059:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":710,"nodeType":"IfStatement","src":"12055:48:1","trueBody":{"id":709,"nodeType":"Block","src":"12070:33:1","statements":[{"expression":{"hexValue":"30","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":694,"id":708,"nodeType":"Return","src":"12084:8:1"}]}},{"body":{"id":743,"nodeType":"Block","src":"12132:532:1","statements":[{"assignments":[715],"declarations":[{"constant":false,"id":715,"mutability":"mutable","name":"mid","nameLocation":"12154:3:1","nodeType":"VariableDeclaration","scope":743,"src":"12146:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":721,"initialValue":{"arguments":[{"id":718,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"12173:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":719,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"12178:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":716,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"12160:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3014_$","typeString":"type(library Math)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:1","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"12160:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":723,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"12421:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":724,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"12428:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":722,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[900,926,952],"referencedDeclaration":952,"src":"12408:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1284_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1284_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:1","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"12408:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":727,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"12441:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":741,"nodeType":"Block","src":"12499:155:1","statements":[{"id":740,"nodeType":"UncheckedBlock","src":"12576:64:1","statements":[{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":734,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"12608:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":735,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"12614:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"12608:13:1"}]}]},"id":742,"nodeType":"IfStatement","src":"12404:250:1","trueBody":{"id":733,"nodeType":"Block","src":"12450:43:1","statements":[{"expression":{"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":729,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"12468:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":730,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"12475:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":732,"nodeType":"ExpressionStatement","src":"12468:10:1"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":711,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"12120:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":712,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"12126:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":744,"nodeType":"WhileStatement","src":"12113:551:1"},{"expression":{"id":745,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"12681:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":694,"id":746,"nodeType":"Return","src":"12674:10:1"}]},"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"11471:412:1","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:1","nodeType":"FunctionDefinition","parameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"array","nameLocation":"11926:5:1","nodeType":"VariableDeclaration","scope":748,"src":"11908:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":687,"nodeType":"ArrayTypeName","src":"11908:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":690,"mutability":"mutable","name":"element","nameLocation":"11941:7:1","nodeType":"VariableDeclaration","scope":748,"src":"11933:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":689,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:1"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"11973:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:1"},"scope":1025,"src":"11888:803:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":810,"nodeType":"Block","src":"12875:709:1","statements":[{"assignments":[760],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"low","nameLocation":"12893:3:1","nodeType":"VariableDeclaration","scope":810,"src":"12885:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":762,"initialValue":{"hexValue":"30","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:1"},{"assignments":[764],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"high","nameLocation":"12918:4:1","nodeType":"VariableDeclaration","scope":810,"src":"12910:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":767,"initialValue":{"expression":{"id":765,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"12925:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:1","memberName":"length","nodeType":"MemberAccess","src":"12925:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":768,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"12952:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":774,"nodeType":"IfStatement","src":"12948:48:1","trueBody":{"id":773,"nodeType":"Block","src":"12963:33:1","statements":[{"expression":{"hexValue":"30","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":758,"id":772,"nodeType":"Return","src":"12977:8:1"}]}},{"body":{"id":806,"nodeType":"Block","src":"13025:532:1","statements":[{"assignments":[779],"declarations":[{"constant":false,"id":779,"mutability":"mutable","name":"mid","nameLocation":"13047:3:1","nodeType":"VariableDeclaration","scope":806,"src":"13039:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":785,"initialValue":{"arguments":[{"id":782,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"13066:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":783,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"13071:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":780,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"13053:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3014_$","typeString":"type(library Math)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:1","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"13053:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":787,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"13320:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":788,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"13327:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":786,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[965,978,991],"referencedDeclaration":991,"src":"13301:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":790,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"13334:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":804,"nodeType":"Block","src":"13504:43:1","statements":[{"expression":{"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":800,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"13522:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":801,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"13529:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":803,"nodeType":"ExpressionStatement","src":"13522:10:1"}]},"id":805,"nodeType":"IfStatement","src":"13297:250:1","trueBody":{"id":799,"nodeType":"Block","src":"13343:155:1","statements":[{"id":798,"nodeType":"UncheckedBlock","src":"13420:64:1","statements":[{"expression":{"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":792,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"13452:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":793,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"13458:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":797,"nodeType":"ExpressionStatement","src":"13452:13:1"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":775,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"13013:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":776,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"13019:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":807,"nodeType":"WhileStatement","src":"13006:551:1"},{"expression":{"id":808,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"13574:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":758,"id":809,"nodeType":"Return","src":"13567:10:1"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"12697:74:1","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":811,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:1","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"array","nameLocation":"12819:5:1","nodeType":"VariableDeclaration","scope":811,"src":"12802:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":751,"nodeType":"ArrayTypeName","src":"12802:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"element","nameLocation":"12834:7:1","nodeType":"VariableDeclaration","scope":811,"src":"12826:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:1"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":811,"src":"12866:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:1"},"scope":1025,"src":"12776:808:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":873,"nodeType":"Block","src":"13768:709:1","statements":[{"assignments":[823],"declarations":[{"constant":false,"id":823,"mutability":"mutable","name":"low","nameLocation":"13786:3:1","nodeType":"VariableDeclaration","scope":873,"src":"13778:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":825,"initialValue":{"hexValue":"30","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:1"},{"assignments":[827],"declarations":[{"constant":false,"id":827,"mutability":"mutable","name":"high","nameLocation":"13811:4:1","nodeType":"VariableDeclaration","scope":873,"src":"13803:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":830,"initialValue":{"expression":{"id":828,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"13818:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:1","memberName":"length","nodeType":"MemberAccess","src":"13818:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"13845:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":837,"nodeType":"IfStatement","src":"13841:48:1","trueBody":{"id":836,"nodeType":"Block","src":"13856:33:1","statements":[{"expression":{"hexValue":"30","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":821,"id":835,"nodeType":"Return","src":"13870:8:1"}]}},{"body":{"id":869,"nodeType":"Block","src":"13918:532:1","statements":[{"assignments":[842],"declarations":[{"constant":false,"id":842,"mutability":"mutable","name":"mid","nameLocation":"13940:3:1","nodeType":"VariableDeclaration","scope":869,"src":"13932:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":848,"initialValue":{"arguments":[{"id":845,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"13959:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":846,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"13964:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":843,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"13946:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3014_$","typeString":"type(library Math)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:1","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"13946:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":850,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"14213:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":851,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"14220:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":849,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[965,978,991],"referencedDeclaration":991,"src":"14194:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":853,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"14227:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":867,"nodeType":"Block","src":"14285:155:1","statements":[{"id":866,"nodeType":"UncheckedBlock","src":"14362:64:1","statements":[{"expression":{"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":860,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"14394:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":861,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"14400:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":865,"nodeType":"ExpressionStatement","src":"14394:13:1"}]}]},"id":868,"nodeType":"IfStatement","src":"14190:250:1","trueBody":{"id":859,"nodeType":"Block","src":"14236:43:1","statements":[{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":855,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"14254:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":856,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"14261:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"14254:10:1"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":838,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"13906:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":839,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"13912:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":870,"nodeType":"WhileStatement","src":"13899:551:1"},{"expression":{"id":871,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"14467:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":821,"id":872,"nodeType":"Return","src":"14460:10:1"}]},"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"13590:74:1","text":" @dev Same as {upperBound}, but with an array in memory."},"id":874,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:1","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"array","nameLocation":"13712:5:1","nodeType":"VariableDeclaration","scope":874,"src":"13695:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":814,"nodeType":"ArrayTypeName","src":"13695:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"element","nameLocation":"13727:7:1","nodeType":"VariableDeclaration","scope":874,"src":"13719:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:1"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":874,"src":"13759:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:1"},"scope":1025,"src":"13669:808:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":899,"nodeType":"Block","src":"14793:167:1","statements":[{"assignments":[887],"declarations":[{"constant":false,"id":887,"mutability":"mutable","name":"slot","nameLocation":"14811:4:1","nodeType":"VariableDeclaration","scope":899,"src":"14803:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":888,"nodeType":"VariableDeclarationStatement","src":"14803:12:1"},{"AST":{"nodeType":"YulBlock","src":"14850:40:1","statements":[{"nodeType":"YulAssignment","src":"14864:16:1","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:1"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":878,"isOffset":false,"isSlot":true,"src":"14872:8:1","suffix":"slot","valueSize":1},{"declaration":887,"isOffset":false,"isSlot":false,"src":"14864:4:1","valueSize":1}],"flags":["memory-safe"],"id":889,"nodeType":"InlineAssembly","src":"14825:65:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":894,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"14932:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":890,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"14906:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:1","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"14906:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:1","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"14906:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:1","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"14906:45:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1275_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1275_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":885,"id":898,"nodeType":"Return","src":"14899:54:1"}]},"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"14483:191:1","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":900,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:1","nodeType":"FunctionDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"arr","nameLocation":"14719:3:1","nodeType":"VariableDeclaration","scope":900,"src":"14701:21:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":877,"nodeType":"ArrayTypeName","src":"14701:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"pos","nameLocation":"14732:3:1","nodeType":"VariableDeclaration","scope":900,"src":"14724:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:1"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":900,"src":"14760:31:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1275_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":883,"nodeType":"UserDefinedTypeName","pathNode":{"id":882,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:1","14772:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":1275,"src":"14760:23:1"},"referencedDeclaration":1275,"src":"14760:23:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1275_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:1"},"scope":1025,"src":"14679:281:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":925,"nodeType":"Block","src":"15276:167:1","statements":[{"assignments":[913],"declarations":[{"constant":false,"id":913,"mutability":"mutable","name":"slot","nameLocation":"15294:4:1","nodeType":"VariableDeclaration","scope":925,"src":"15286:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":914,"nodeType":"VariableDeclarationStatement","src":"15286:12:1"},{"AST":{"nodeType":"YulBlock","src":"15333:40:1","statements":[{"nodeType":"YulAssignment","src":"15347:16:1","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:1"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":904,"isOffset":false,"isSlot":true,"src":"15355:8:1","suffix":"slot","valueSize":1},{"declaration":913,"isOffset":false,"isSlot":false,"src":"15347:4:1","valueSize":1}],"flags":["memory-safe"],"id":915,"nodeType":"InlineAssembly","src":"15308:65:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":920,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"15415:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":916,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"15389:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:1","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"15389:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:1","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"15389:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:1","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":1326,"src":"15389:45:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1281_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1281_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":911,"id":924,"nodeType":"Return","src":"15382:54:1"}]},"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"14966:191:1","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":926,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:1","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"arr","nameLocation":"15202:3:1","nodeType":"VariableDeclaration","scope":926,"src":"15184:21:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":903,"nodeType":"ArrayTypeName","src":"15184:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"pos","nameLocation":"15215:3:1","nodeType":"VariableDeclaration","scope":926,"src":"15207:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:1"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"15243:31:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1281_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":909,"nodeType":"UserDefinedTypeName","pathNode":{"id":908,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:1","15255:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":1281,"src":"15243:23:1"},"referencedDeclaration":1281,"src":"15243:23:1","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1281_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:1"},"scope":1025,"src":"15162:281:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":951,"nodeType":"Block","src":"15759:167:1","statements":[{"assignments":[939],"declarations":[{"constant":false,"id":939,"mutability":"mutable","name":"slot","nameLocation":"15777:4:1","nodeType":"VariableDeclaration","scope":951,"src":"15769:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":940,"nodeType":"VariableDeclarationStatement","src":"15769:12:1"},{"AST":{"nodeType":"YulBlock","src":"15816:40:1","statements":[{"nodeType":"YulAssignment","src":"15830:16:1","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:1"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":930,"isOffset":false,"isSlot":true,"src":"15838:8:1","suffix":"slot","valueSize":1},{"declaration":939,"isOffset":false,"isSlot":false,"src":"15830:4:1","valueSize":1}],"flags":["memory-safe"],"id":941,"nodeType":"InlineAssembly","src":"15791:65:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":946,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"15898:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":942,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"15872:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:1","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"15872:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:1","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"15872:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:1","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":1337,"src":"15872:45:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1284_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1284_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":937,"id":950,"nodeType":"Return","src":"15865:54:1"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"15449:191:1","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":952,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:1","nodeType":"FunctionDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"arr","nameLocation":"15685:3:1","nodeType":"VariableDeclaration","scope":952,"src":"15667:21:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":929,"nodeType":"ArrayTypeName","src":"15667:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"pos","nameLocation":"15698:3:1","nodeType":"VariableDeclaration","scope":952,"src":"15690:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:1"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":952,"src":"15726:31:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1284_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":935,"nodeType":"UserDefinedTypeName","pathNode":{"id":934,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:1","15738:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":1284,"src":"15726:23:1"},"referencedDeclaration":1284,"src":"15726:23:1","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1284_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:1"},"scope":1025,"src":"15645:281:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":964,"nodeType":"Block","src":"16227:98:1","statements":[{"AST":{"nodeType":"YulBlock","src":"16246:73:1","statements":[{"nodeType":"YulAssignment","src":"16260:49:1","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16281:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"16286:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16277:3:1"},"nodeType":"YulFunctionCall","src":"16277:14:1"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16297:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"16302:4:1","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16293:3:1"},"nodeType":"YulFunctionCall","src":"16293:14:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:1"},"nodeType":"YulFunctionCall","src":"16273:35:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16267:5:1"},"nodeType":"YulFunctionCall","src":"16267:42:1"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16260:3:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":956,"isOffset":false,"isSlot":false,"src":"16281:3:1","valueSize":1},{"declaration":958,"isOffset":false,"isSlot":false,"src":"16297:3:1","valueSize":1},{"declaration":961,"isOffset":false,"isSlot":false,"src":"16260:3:1","valueSize":1}],"id":963,"nodeType":"InlineAssembly","src":"16237:82:1"}]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"15932:191:1","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":965,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:1","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"arr","nameLocation":"16173:3:1","nodeType":"VariableDeclaration","scope":965,"src":"16156:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":955,"nodeType":"ArrayTypeName","src":"16156:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"pos","nameLocation":"16186:3:1","nodeType":"VariableDeclaration","scope":965,"src":"16178:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:1"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"res","nameLocation":"16222:3:1","nodeType":"VariableDeclaration","scope":965,"src":"16214:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:1"},"scope":1025,"src":"16128:197:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":977,"nodeType":"Block","src":"16626:98:1","statements":[{"AST":{"nodeType":"YulBlock","src":"16645:73:1","statements":[{"nodeType":"YulAssignment","src":"16659:49:1","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16680:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"16685:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:1"},"nodeType":"YulFunctionCall","src":"16676:14:1"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16696:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"16701:4:1","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16692:3:1"},"nodeType":"YulFunctionCall","src":"16692:14:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:1"},"nodeType":"YulFunctionCall","src":"16672:35:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16666:5:1"},"nodeType":"YulFunctionCall","src":"16666:42:1"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16659:3:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":969,"isOffset":false,"isSlot":false,"src":"16680:3:1","valueSize":1},{"declaration":971,"isOffset":false,"isSlot":false,"src":"16696:3:1","valueSize":1},{"declaration":974,"isOffset":false,"isSlot":false,"src":"16659:3:1","valueSize":1}],"id":976,"nodeType":"InlineAssembly","src":"16636:82:1"}]},"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"16331:191:1","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:1","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"arr","nameLocation":"16572:3:1","nodeType":"VariableDeclaration","scope":978,"src":"16555:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":968,"nodeType":"ArrayTypeName","src":"16555:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"pos","nameLocation":"16585:3:1","nodeType":"VariableDeclaration","scope":978,"src":"16577:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:1"},"returnParameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"res","nameLocation":"16621:3:1","nodeType":"VariableDeclaration","scope":978,"src":"16613:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:1"},"scope":1025,"src":"16527:197:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":990,"nodeType":"Block","src":"17025:98:1","statements":[{"AST":{"nodeType":"YulBlock","src":"17044:73:1","statements":[{"nodeType":"YulAssignment","src":"17058:49:1","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17079:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"17084:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:1"},"nodeType":"YulFunctionCall","src":"17075:14:1"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17095:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"17100:4:1","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17091:3:1"},"nodeType":"YulFunctionCall","src":"17091:14:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17071:3:1"},"nodeType":"YulFunctionCall","src":"17071:35:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17065:5:1"},"nodeType":"YulFunctionCall","src":"17065:42:1"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17058:3:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":982,"isOffset":false,"isSlot":false,"src":"17079:3:1","valueSize":1},{"declaration":984,"isOffset":false,"isSlot":false,"src":"17095:3:1","valueSize":1},{"declaration":987,"isOffset":false,"isSlot":false,"src":"17058:3:1","valueSize":1}],"id":989,"nodeType":"InlineAssembly","src":"17035:82:1"}]},"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"16730:191:1","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:1","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"arr","nameLocation":"16971:3:1","nodeType":"VariableDeclaration","scope":991,"src":"16954:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ArrayTypeName","src":"16954:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"pos","nameLocation":"16984:3:1","nodeType":"VariableDeclaration","scope":991,"src":"16976:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:1"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"res","nameLocation":"17020:3:1","nodeType":"VariableDeclaration","scope":991,"src":"17012:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:1"},"scope":1025,"src":"16926:197:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1001,"nodeType":"Block","src":"17439:88:1","statements":[{"AST":{"nodeType":"YulBlock","src":"17474:47:1","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17495:10:1"},{"name":"len","nodeType":"YulIdentifier","src":"17507:3:1"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17488:6:1"},"nodeType":"YulFunctionCall","src":"17488:23:1"},"nodeType":"YulExpressionStatement","src":"17488:23:1"}]},"evmVersion":"paris","externalReferences":[{"declaration":995,"isOffset":false,"isSlot":true,"src":"17495:10:1","suffix":"slot","valueSize":1},{"declaration":997,"isOffset":false,"isSlot":false,"src":"17507:3:1","valueSize":1}],"flags":["memory-safe"],"id":1000,"nodeType":"InlineAssembly","src":"17449:72:1"}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"17129:233:1","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17376:15:1","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"array","nameLocation":"17410:5:1","nodeType":"VariableDeclaration","scope":1002,"src":"17392:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"17392:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":994,"nodeType":"ArrayTypeName","src":"17392:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"len","nameLocation":"17425:3:1","nodeType":"VariableDeclaration","scope":1002,"src":"17417:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"17417:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17391:38:1"},"returnParameters":{"id":999,"nodeType":"ParameterList","parameters":[],"src":"17439:0:1"},"scope":1025,"src":"17367:160:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1012,"nodeType":"Block","src":"17843:88:1","statements":[{"AST":{"nodeType":"YulBlock","src":"17878:47:1","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17899:10:1"},{"name":"len","nodeType":"YulIdentifier","src":"17911:3:1"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17892:6:1"},"nodeType":"YulFunctionCall","src":"17892:23:1"},"nodeType":"YulExpressionStatement","src":"17892:23:1"}]},"evmVersion":"paris","externalReferences":[{"declaration":1006,"isOffset":false,"isSlot":true,"src":"17899:10:1","suffix":"slot","valueSize":1},{"declaration":1008,"isOffset":false,"isSlot":false,"src":"17911:3:1","valueSize":1}],"flags":["memory-safe"],"id":1011,"nodeType":"InlineAssembly","src":"17853:72:1"}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"17533:233:1","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17780:15:1","nodeType":"FunctionDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"array","nameLocation":"17814:5:1","nodeType":"VariableDeclaration","scope":1013,"src":"17796:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17796:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1005,"nodeType":"ArrayTypeName","src":"17796:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"len","nameLocation":"17829:3:1","nodeType":"VariableDeclaration","scope":1013,"src":"17821:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"17821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17795:38:1"},"returnParameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"17843:0:1"},"scope":1025,"src":"17771:160:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1023,"nodeType":"Block","src":"18247:88:1","statements":[{"AST":{"nodeType":"YulBlock","src":"18282:47:1","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"18303:10:1"},{"name":"len","nodeType":"YulIdentifier","src":"18315:3:1"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18296:6:1"},"nodeType":"YulFunctionCall","src":"18296:23:1"},"nodeType":"YulExpressionStatement","src":"18296:23:1"}]},"evmVersion":"paris","externalReferences":[{"declaration":1017,"isOffset":false,"isSlot":true,"src":"18303:10:1","suffix":"slot","valueSize":1},{"declaration":1019,"isOffset":false,"isSlot":false,"src":"18315:3:1","valueSize":1}],"flags":["memory-safe"],"id":1022,"nodeType":"InlineAssembly","src":"18257:72:1"}]},"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"17937:233:1","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":1024,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18184:15:1","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"array","nameLocation":"18218:5:1","nodeType":"VariableDeclaration","scope":1024,"src":"18200:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"18200:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1016,"nodeType":"ArrayTypeName","src":"18200:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"len","nameLocation":"18233:3:1","nodeType":"VariableDeclaration","scope":1024,"src":"18225:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"18225:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18199:38:1"},"returnParameters":{"id":1021,"nodeType":"ParameterList","parameters":[],"src":"18247:0:1"},"scope":1025,"src":"18175:160:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1026,"src":"459:17878:1","usedErrors":[],"usedEvents":[]}],"src":"183:18155:1"},"id":1},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[1057]},"id":1058,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1027,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"131:92:2","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":1057,"linearizedBaseContracts":[1057],"name":"Comparators","nameLocation":"232:11:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":1041,"nodeType":"Block","src":"313:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"330:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1038,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"334:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1036,"id":1040,"nodeType":"Return","src":"323:12:2"}]},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:2","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"a","nameLocation":"270:1:2","nodeType":"VariableDeclaration","scope":1042,"src":"262:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"b","nameLocation":"281:1:2","nodeType":"VariableDeclaration","scope":1042,"src":"273:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:2"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1042,"src":"307:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1034,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:2"},"scope":1057,"src":"250:92:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1055,"nodeType":"Block","src":"411:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1051,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"428:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1052,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"432:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1050,"id":1054,"nodeType":"Return","src":"421:12:2"}]},"id":1056,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:2","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"a","nameLocation":"368:1:2","nodeType":"VariableDeclaration","scope":1056,"src":"360:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"b","nameLocation":"379:1:2","nodeType":"VariableDeclaration","scope":1056,"src":"371:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:2"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"405:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1048,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:2"},"scope":1057,"src":"348:92:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1058,"src":"224:218:2","usedErrors":[],"usedEvents":[]}],"src":"105:338:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1087]},"id":1088,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1059,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"127:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1087,"linearizedBaseContracts":[1087],"name":"Context","nameLocation":"642:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":1068,"nodeType":"Block","src":"718:34:3","statements":[{"expression":{"expression":{"id":1065,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:3","memberName":"sender","nodeType":"MemberAccess","src":"735:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1064,"id":1067,"nodeType":"Return","src":"728:17:3"}]},"id":1069,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:3","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"675:2:3"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"709:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:3"},"scope":1087,"src":"656:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1077,"nodeType":"Block","src":"825:32:3","statements":[{"expression":{"expression":{"id":1074,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:3","memberName":"data","nodeType":"MemberAccess","src":"842:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1073,"id":1076,"nodeType":"Return","src":"835:15:3"}]},"id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:3","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[],"src":"775:2:3"},"returnParameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1078,"src":"809:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1071,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:3"},"scope":1087,"src":"758:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1085,"nodeType":"Block","src":"935:25:3","statements":[{"expression":{"hexValue":"30","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1082,"id":1084,"nodeType":"Return","src":"945:8:3"}]},"id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:3","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"892:2:3"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"926:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:3"},"scope":1087,"src":"863:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1088,"src":"624:338:3","usedErrors":[],"usedEvents":[]}],"src":"101:862:3"},"id":3},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1139]},"id":1140,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1089,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"125:489:4","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1139,"linearizedBaseContracts":[1139],"name":"Panic","nameLocation":"665:5:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"677:36:4","text":"@dev generic / unspecified error"},"id":1094,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:4","nodeType":"VariableDeclaration","scope":1139,"src":"718:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"764:37:4","text":"@dev used by the assert() builtin"},"id":1098,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:4","nodeType":"VariableDeclaration","scope":1139,"src":"806:39:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"851:41:4","text":"@dev arithmetic underflow or overflow"},"id":1102,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:4","nodeType":"VariableDeclaration","scope":1139,"src":"897:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:4","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"950:35:4","text":"@dev division or modulo by zero"},"id":1106,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:4","nodeType":"VariableDeclaration","scope":1139,"src":"990:49:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"1045:30:4","text":"@dev enum conversion error"},"id":1110,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:4","nodeType":"VariableDeclaration","scope":1139,"src":"1080:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:4","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"1140:36:4","text":"@dev invalid encoding in storage"},"id":1114,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:4","nodeType":"VariableDeclaration","scope":1139,"src":"1181:55:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:4","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1115,"nodeType":"StructuredDocumentation","src":"1242:24:4","text":"@dev empty array pop"},"id":1118,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:4","nodeType":"VariableDeclaration","scope":1139,"src":"1271:48:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"1325:35:4","text":"@dev array out of bounds access"},"id":1122,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:4","nodeType":"VariableDeclaration","scope":1139,"src":"1365:52:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:4","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"1423:65:4","text":"@dev resource error (too large allocation or too large array)"},"id":1126,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:4","nodeType":"VariableDeclaration","scope":1139,"src":"1493:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:4","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"1546:42:4","text":"@dev calling invalid internal function"},"id":1130,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:4","nodeType":"VariableDeclaration","scope":1139,"src":"1593:58:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:4","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1137,"nodeType":"Block","src":"1819:151:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:4","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:4"},"nodeType":"YulFunctionCall","src":"1868:24:4"},"nodeType":"YulExpressionStatement","src":"1868:24:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:4","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:4"},"nodeType":"YulFunctionCall","src":"1905:18:4"},"nodeType":"YulExpressionStatement","src":"1905:18:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:4","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:4"},"nodeType":"YulFunctionCall","src":"1936:18:4"},"nodeType":"YulExpressionStatement","src":"1936:18:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":1133,"isOffset":false,"isSlot":false,"src":"1918:4:4","valueSize":1}],"flags":["memory-safe"],"id":1136,"nodeType":"InlineAssembly","src":"1829:135:4"}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"1658:113:4","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1138,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:4","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"code","nameLocation":"1799:4:4","nodeType":"VariableDeclaration","scope":1138,"src":"1791:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:4"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"1819:0:4"},"scope":1139,"src":"1776:194:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1140,"src":"657:1315:4","usedErrors":[],"usedEvents":[]}],"src":"99:1874:4"},"id":4},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[1269]},"id":1270,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1141,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":1142,"nodeType":"StructuredDocumentation","src":"225:1373:5","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":1269,"linearizedBaseContracts":[1269],"name":"SlotDerivation","nameLocation":"1607:14:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1151,"nodeType":"Block","src":"1790:194:5","statements":[{"AST":{"nodeType":"YulBlock","src":"1825:153:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:4:5","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1870:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1881:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:5"},"nodeType":"YulFunctionCall","src":"1866:20:5"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1894:9:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1888:5:5"},"nodeType":"YulFunctionCall","src":"1888:16:5"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1856:9:5"},"nodeType":"YulFunctionCall","src":"1856:49:5"},{"kind":"number","nodeType":"YulLiteral","src":"1907:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1852:3:5"},"nodeType":"YulFunctionCall","src":"1852:57:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1839:6:5"},"nodeType":"YulFunctionCall","src":"1839:71:5"},"nodeType":"YulExpressionStatement","src":"1839:71:5"},{"nodeType":"YulAssignment","src":"1923:45:5","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1945:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1951:4:5","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1935:9:5"},"nodeType":"YulFunctionCall","src":"1935:21:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1962:4:5","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1958:3:5"},"nodeType":"YulFunctionCall","src":"1958:9:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1931:3:5"},"nodeType":"YulFunctionCall","src":"1931:37:5"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1145,"isOffset":false,"isSlot":false,"src":"1870:9:5","valueSize":1},{"declaration":1145,"isOffset":false,"isSlot":false,"src":"1894:9:5","valueSize":1},{"declaration":1148,"isOffset":false,"isSlot":false,"src":"1923:4:5","valueSize":1}],"flags":["memory-safe"],"id":1150,"nodeType":"InlineAssembly","src":"1800:178:5"}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"1628:74:5","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":1152,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:5","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:5","nodeType":"VariableDeclaration","scope":1152,"src":"1728:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1144,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:5"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"slot","nameLocation":"1784:4:5","nodeType":"VariableDeclaration","scope":1152,"src":"1776:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:5"},"scope":1269,"src":"1707:277:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1173,"nodeType":"Block","src":"2176:86:5","statements":[{"id":1172,"nodeType":"UncheckedBlock","src":"2186:70:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1166,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2233:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:5","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1168,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"2241:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:5","typeDescriptions":{}}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1161,"id":1171,"nodeType":"Return","src":"2210:35:5"}]}]},"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"1990:99:5","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:5","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"slot","nameLocation":"2118:4:5","nodeType":"VariableDeclaration","scope":1174,"src":"2110:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"pos","nameLocation":"2132:3:5","nodeType":"VariableDeclaration","scope":1174,"src":"2124:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:5"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"result","nameLocation":"2168:6:5","nodeType":"VariableDeclaration","scope":1174,"src":"2160:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:5"},"scope":1269,"src":"2094:168:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1183,"nodeType":"Block","src":"2465:127:5","statements":[{"AST":{"nodeType":"YulBlock","src":"2500:86:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2521:4:5","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2527:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2514:6:5"},"nodeType":"YulFunctionCall","src":"2514:18:5"},"nodeType":"YulExpressionStatement","src":"2514:18:5"},{"nodeType":"YulAssignment","src":"2545:31:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2565:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2571:4:5","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2555:9:5"},"nodeType":"YulFunctionCall","src":"2555:21:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2545:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1180,"isOffset":false,"isSlot":false,"src":"2545:6:5","valueSize":1},{"declaration":1177,"isOffset":false,"isSlot":false,"src":"2527:4:5","valueSize":1}],"flags":["memory-safe"],"id":1182,"nodeType":"InlineAssembly","src":"2475:111:5"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"2268:118:5","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:5","nodeType":"FunctionDefinition","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"slot","nameLocation":"2420:4:5","nodeType":"VariableDeclaration","scope":1184,"src":"2412:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:5"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"result","nameLocation":"2457:6:5","nodeType":"VariableDeclaration","scope":1184,"src":"2449:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:5"},"scope":1269,"src":"2391:201:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1195,"nodeType":"Block","src":"2770:179:5","statements":[{"AST":{"nodeType":"YulBlock","src":"2805:138:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2826:4:5","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2836:3:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2845:2:5","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2853:1:5","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2849:3:5"},"nodeType":"YulFunctionCall","src":"2849:6:5"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2841:3:5"},"nodeType":"YulFunctionCall","src":"2841:15:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2832:3:5"},"nodeType":"YulFunctionCall","src":"2832:25:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2819:6:5"},"nodeType":"YulFunctionCall","src":"2819:39:5"},"nodeType":"YulExpressionStatement","src":"2819:39:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2878:4:5","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2884:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2871:6:5"},"nodeType":"YulFunctionCall","src":"2871:18:5"},"nodeType":"YulExpressionStatement","src":"2871:18:5"},{"nodeType":"YulAssignment","src":"2902:31:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2922:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2928:4:5","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2912:9:5"},"nodeType":"YulFunctionCall","src":"2912:21:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2902:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1189,"isOffset":false,"isSlot":false,"src":"2836:3:5","valueSize":1},{"declaration":1192,"isOffset":false,"isSlot":false,"src":"2902:6:5","valueSize":1},{"declaration":1187,"isOffset":false,"isSlot":false,"src":"2884:4:5","valueSize":1}],"flags":["memory-safe"],"id":1194,"nodeType":"InlineAssembly","src":"2780:163:5"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"2598:78:5","text":" @dev Derive the location of a mapping element from the key."},"id":1196,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:5","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"slot","nameLocation":"2712:4:5","nodeType":"VariableDeclaration","scope":1196,"src":"2704:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"key","nameLocation":"2726:3:5","nodeType":"VariableDeclaration","scope":1196,"src":"2718:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:5"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"result","nameLocation":"2762:6:5","nodeType":"VariableDeclaration","scope":1196,"src":"2754:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:5"},"scope":1269,"src":"2681:268:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1207,"nodeType":"Block","src":"3124:173:5","statements":[{"AST":{"nodeType":"YulBlock","src":"3159:132:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3180:4:5","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3200:3:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3193:6:5"},"nodeType":"YulFunctionCall","src":"3193:11:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3186:6:5"},"nodeType":"YulFunctionCall","src":"3186:19:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3173:6:5"},"nodeType":"YulFunctionCall","src":"3173:33:5"},"nodeType":"YulExpressionStatement","src":"3173:33:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3226:4:5","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3232:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3219:6:5"},"nodeType":"YulFunctionCall","src":"3219:18:5"},"nodeType":"YulExpressionStatement","src":"3219:18:5"},{"nodeType":"YulAssignment","src":"3250:31:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3270:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3276:4:5","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3260:9:5"},"nodeType":"YulFunctionCall","src":"3260:21:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3250:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1201,"isOffset":false,"isSlot":false,"src":"3200:3:5","valueSize":1},{"declaration":1204,"isOffset":false,"isSlot":false,"src":"3250:6:5","valueSize":1},{"declaration":1199,"isOffset":false,"isSlot":false,"src":"3232:4:5","valueSize":1}],"flags":["memory-safe"],"id":1206,"nodeType":"InlineAssembly","src":"3134:157:5"}]},"documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"2955:78:5","text":" @dev Derive the location of a mapping element from the key."},"id":1208,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:5","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"slot","nameLocation":"3069:4:5","nodeType":"VariableDeclaration","scope":1208,"src":"3061:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"key","nameLocation":"3080:3:5","nodeType":"VariableDeclaration","scope":1208,"src":"3075:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1200,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:5"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"result","nameLocation":"3116:6:5","nodeType":"VariableDeclaration","scope":1208,"src":"3108:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:5"},"scope":1269,"src":"3038:259:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1219,"nodeType":"Block","src":"3475:157:5","statements":[{"AST":{"nodeType":"YulBlock","src":"3510:116:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3531:4:5","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3537:3:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3524:6:5"},"nodeType":"YulFunctionCall","src":"3524:17:5"},"nodeType":"YulExpressionStatement","src":"3524:17:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3561:4:5","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3567:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3554:6:5"},"nodeType":"YulFunctionCall","src":"3554:18:5"},"nodeType":"YulExpressionStatement","src":"3554:18:5"},{"nodeType":"YulAssignment","src":"3585:31:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3605:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3611:4:5","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3595:9:5"},"nodeType":"YulFunctionCall","src":"3595:21:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3585:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1213,"isOffset":false,"isSlot":false,"src":"3537:3:5","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"3585:6:5","valueSize":1},{"declaration":1211,"isOffset":false,"isSlot":false,"src":"3567:4:5","valueSize":1}],"flags":["memory-safe"],"id":1218,"nodeType":"InlineAssembly","src":"3485:141:5"}]},"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"3303:78:5","text":" @dev Derive the location of a mapping element from the key."},"id":1220,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:5","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"slot","nameLocation":"3417:4:5","nodeType":"VariableDeclaration","scope":1220,"src":"3409:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"key","nameLocation":"3431:3:5","nodeType":"VariableDeclaration","scope":1220,"src":"3423:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:5"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"result","nameLocation":"3467:6:5","nodeType":"VariableDeclaration","scope":1220,"src":"3459:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:5"},"scope":1269,"src":"3386:246:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1231,"nodeType":"Block","src":"3810:157:5","statements":[{"AST":{"nodeType":"YulBlock","src":"3845:116:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3866:4:5","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3872:3:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:5"},"nodeType":"YulFunctionCall","src":"3859:17:5"},"nodeType":"YulExpressionStatement","src":"3859:17:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3896:4:5","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3902:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3889:6:5"},"nodeType":"YulFunctionCall","src":"3889:18:5"},"nodeType":"YulExpressionStatement","src":"3889:18:5"},{"nodeType":"YulAssignment","src":"3920:31:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3940:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3946:4:5","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3930:9:5"},"nodeType":"YulFunctionCall","src":"3930:21:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3920:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1225,"isOffset":false,"isSlot":false,"src":"3872:3:5","valueSize":1},{"declaration":1228,"isOffset":false,"isSlot":false,"src":"3920:6:5","valueSize":1},{"declaration":1223,"isOffset":false,"isSlot":false,"src":"3902:4:5","valueSize":1}],"flags":["memory-safe"],"id":1230,"nodeType":"InlineAssembly","src":"3820:141:5"}]},"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"3638:78:5","text":" @dev Derive the location of a mapping element from the key."},"id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:5","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"slot","nameLocation":"3752:4:5","nodeType":"VariableDeclaration","scope":1232,"src":"3744:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"key","nameLocation":"3766:3:5","nodeType":"VariableDeclaration","scope":1232,"src":"3758:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:5"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"result","nameLocation":"3802:6:5","nodeType":"VariableDeclaration","scope":1232,"src":"3794:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:5"},"scope":1269,"src":"3721:246:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1243,"nodeType":"Block","src":"4144:157:5","statements":[{"AST":{"nodeType":"YulBlock","src":"4179:116:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4200:4:5","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4206:3:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4193:6:5"},"nodeType":"YulFunctionCall","src":"4193:17:5"},"nodeType":"YulExpressionStatement","src":"4193:17:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4230:4:5","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4236:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4223:6:5"},"nodeType":"YulFunctionCall","src":"4223:18:5"},"nodeType":"YulExpressionStatement","src":"4223:18:5"},{"nodeType":"YulAssignment","src":"4254:31:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4274:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4280:4:5","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4264:9:5"},"nodeType":"YulFunctionCall","src":"4264:21:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4254:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1237,"isOffset":false,"isSlot":false,"src":"4206:3:5","valueSize":1},{"declaration":1240,"isOffset":false,"isSlot":false,"src":"4254:6:5","valueSize":1},{"declaration":1235,"isOffset":false,"isSlot":false,"src":"4236:4:5","valueSize":1}],"flags":["memory-safe"],"id":1242,"nodeType":"InlineAssembly","src":"4154:141:5"}]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"3973:78:5","text":" @dev Derive the location of a mapping element from the key."},"id":1244,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:5","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"slot","nameLocation":"4087:4:5","nodeType":"VariableDeclaration","scope":1244,"src":"4079:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"key","nameLocation":"4100:3:5","nodeType":"VariableDeclaration","scope":1244,"src":"4093:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1236,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:5"},"returnParameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"result","nameLocation":"4136:6:5","nodeType":"VariableDeclaration","scope":1244,"src":"4128:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:5"},"scope":1269,"src":"4056:245:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1255,"nodeType":"Block","src":"4485:326:5","statements":[{"AST":{"nodeType":"YulBlock","src":"4520:285:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4534:24:5","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4554:3:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4548:5:5"},"nodeType":"YulFunctionCall","src":"4548:10:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4538:6:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4571:27:5","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4588:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"4593:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4584:3:5"},"nodeType":"YulFunctionCall","src":"4584:14:5"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4575:5:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4611:29:5","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4626:5:5"},{"name":"length","nodeType":"YulIdentifier","src":"4633:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:5"},"nodeType":"YulFunctionCall","src":"4622:18:5"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4615:3:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4653:23:5","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4672:3:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4666:5:5"},"nodeType":"YulFunctionCall","src":"4666:10:5"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4657:5:5","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4696:3:5"},{"name":"slot","nodeType":"YulIdentifier","src":"4701:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4689:6:5"},"nodeType":"YulFunctionCall","src":"4689:17:5"},"nodeType":"YulExpressionStatement","src":"4689:17:5"},{"nodeType":"YulAssignment","src":"4719:45:5","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4739:5:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4750:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"4758:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:5"},"nodeType":"YulFunctionCall","src":"4746:17:5"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4729:9:5"},"nodeType":"YulFunctionCall","src":"4729:35:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4719:6:5"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4784:3:5"},{"name":"cache","nodeType":"YulIdentifier","src":"4789:5:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4777:6:5"},"nodeType":"YulFunctionCall","src":"4777:18:5"},"nodeType":"YulExpressionStatement","src":"4777:18:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1249,"isOffset":false,"isSlot":false,"src":"4554:3:5","valueSize":1},{"declaration":1249,"isOffset":false,"isSlot":false,"src":"4588:3:5","valueSize":1},{"declaration":1252,"isOffset":false,"isSlot":false,"src":"4719:6:5","valueSize":1},{"declaration":1247,"isOffset":false,"isSlot":false,"src":"4701:4:5","valueSize":1}],"flags":["memory-safe"],"id":1254,"nodeType":"InlineAssembly","src":"4495:310:5"}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"4307:78:5","text":" @dev Derive the location of a mapping element from the key."},"id":1256,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:5","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"slot","nameLocation":"4421:4:5","nodeType":"VariableDeclaration","scope":1256,"src":"4413:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"key","nameLocation":"4441:3:5","nodeType":"VariableDeclaration","scope":1256,"src":"4427:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1248,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:5"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"result","nameLocation":"4477:6:5","nodeType":"VariableDeclaration","scope":1256,"src":"4469:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:5"},"scope":1269,"src":"4390:421:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1267,"nodeType":"Block","src":"4994:326:5","statements":[{"AST":{"nodeType":"YulBlock","src":"5029:285:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5043:24:5","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5063:3:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5057:5:5"},"nodeType":"YulFunctionCall","src":"5057:10:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5047:6:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5080:27:5","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5097:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5102:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:5"},"nodeType":"YulFunctionCall","src":"5093:14:5"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5084:5:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5120:29:5","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5135:5:5"},{"name":"length","nodeType":"YulIdentifier","src":"5142:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:5"},"nodeType":"YulFunctionCall","src":"5131:18:5"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5124:3:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5162:23:5","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5181:3:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5175:5:5"},"nodeType":"YulFunctionCall","src":"5175:10:5"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5166:5:5","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5205:3:5"},{"name":"slot","nodeType":"YulIdentifier","src":"5210:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5198:6:5"},"nodeType":"YulFunctionCall","src":"5198:17:5"},"nodeType":"YulExpressionStatement","src":"5198:17:5"},{"nodeType":"YulAssignment","src":"5228:45:5","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5248:5:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5259:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5267:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5255:3:5"},"nodeType":"YulFunctionCall","src":"5255:17:5"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5238:9:5"},"nodeType":"YulFunctionCall","src":"5238:35:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5228:6:5"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5293:3:5"},{"name":"cache","nodeType":"YulIdentifier","src":"5298:5:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5286:6:5"},"nodeType":"YulFunctionCall","src":"5286:18:5"},"nodeType":"YulExpressionStatement","src":"5286:18:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1261,"isOffset":false,"isSlot":false,"src":"5063:3:5","valueSize":1},{"declaration":1261,"isOffset":false,"isSlot":false,"src":"5097:3:5","valueSize":1},{"declaration":1264,"isOffset":false,"isSlot":false,"src":"5228:6:5","valueSize":1},{"declaration":1259,"isOffset":false,"isSlot":false,"src":"5210:4:5","valueSize":1}],"flags":["memory-safe"],"id":1266,"nodeType":"InlineAssembly","src":"5004:310:5"}]},"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"4817:78:5","text":" @dev Derive the location of a mapping element from the key."},"id":1268,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:5","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"slot","nameLocation":"4931:4:5","nodeType":"VariableDeclaration","scope":1268,"src":"4923:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"key","nameLocation":"4950:3:5","nodeType":"VariableDeclaration","scope":1268,"src":"4937:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1260,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:5"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"result","nameLocation":"4986:6:5","nodeType":"VariableDeclaration","scope":1268,"src":"4978:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:5"},"scope":1269,"src":"4900:420:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1270,"src":"1599:3723:5","usedErrors":[],"usedEvents":[]}],"src":"199:5124:5"},"id":5},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1393]},"id":1394,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1271,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"219:1187:6","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1393,"linearizedBaseContracts":[1393],"name":"StorageSlot","nameLocation":"1415:11:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1275,"members":[{"constant":false,"id":1274,"mutability":"mutable","name":"value","nameLocation":"1470:5:6","nodeType":"VariableDeclaration","scope":1275,"src":"1462:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:6","nodeType":"StructDefinition","scope":1393,"src":"1433:49:6","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1278,"members":[{"constant":false,"id":1277,"mutability":"mutable","name":"value","nameLocation":"1522:5:6","nodeType":"VariableDeclaration","scope":1278,"src":"1517:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1276,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:6","nodeType":"StructDefinition","scope":1393,"src":"1488:46:6","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1281,"members":[{"constant":false,"id":1280,"mutability":"mutable","name":"value","nameLocation":"1577:5:6","nodeType":"VariableDeclaration","scope":1281,"src":"1569:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:6","nodeType":"StructDefinition","scope":1393,"src":"1540:49:6","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1284,"members":[{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"1632:5:6","nodeType":"VariableDeclaration","scope":1284,"src":"1624:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:6","nodeType":"StructDefinition","scope":1393,"src":"1595:49:6","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1287,"members":[{"constant":false,"id":1286,"mutability":"mutable","name":"value","nameLocation":"1685:5:6","nodeType":"VariableDeclaration","scope":1287,"src":"1678:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1285,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:6","nodeType":"StructDefinition","scope":1393,"src":"1650:47:6","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1290,"members":[{"constant":false,"id":1289,"mutability":"mutable","name":"value","nameLocation":"1738:5:6","nodeType":"VariableDeclaration","scope":1290,"src":"1731:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1288,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:6","nodeType":"StructDefinition","scope":1393,"src":"1703:47:6","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1293,"members":[{"constant":false,"id":1292,"mutability":"mutable","name":"value","nameLocation":"1789:5:6","nodeType":"VariableDeclaration","scope":1293,"src":"1783:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1291,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:6","nodeType":"StructDefinition","scope":1393,"src":"1756:45:6","visibility":"public"},{"body":{"id":1303,"nodeType":"Block","src":"1983:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:6","statements":[{"nodeType":"YulAssignment","src":"2032:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1300,"isOffset":false,"isSlot":true,"src":"2032:6:6","suffix":"slot","valueSize":1},{"declaration":1296,"isOffset":false,"isSlot":false,"src":"2042:4:6","valueSize":1}],"flags":["memory-safe"],"id":1302,"nodeType":"InlineAssembly","src":"1993:63:6"}]},"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"1807:87:6","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1304,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:6","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"slot","nameLocation":"1931:4:6","nodeType":"VariableDeclaration","scope":1304,"src":"1923:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:6"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"r","nameLocation":"1980:1:6","nodeType":"VariableDeclaration","scope":1304,"src":"1960:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1275_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1299,"nodeType":"UserDefinedTypeName","pathNode":{"id":1298,"name":"AddressSlot","nameLocations":["1960:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1275,"src":"1960:11:6"},"referencedDeclaration":1275,"src":"1960:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1275_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:6"},"scope":1393,"src":"1899:163:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"2243:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:6","statements":[{"nodeType":"YulAssignment","src":"2292:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1311,"isOffset":false,"isSlot":true,"src":"2292:6:6","suffix":"slot","valueSize":1},{"declaration":1307,"isOffset":false,"isSlot":false,"src":"2302:4:6","valueSize":1}],"flags":["memory-safe"],"id":1313,"nodeType":"InlineAssembly","src":"2253:63:6"}]},"documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"2068:86:6","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:6","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"slot","nameLocation":"2191:4:6","nodeType":"VariableDeclaration","scope":1315,"src":"2183:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:6"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"r","nameLocation":"2240:1:6","nodeType":"VariableDeclaration","scope":1315,"src":"2220:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1278_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1310,"nodeType":"UserDefinedTypeName","pathNode":{"id":1309,"name":"BooleanSlot","nameLocations":["2220:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1278,"src":"2220:11:6"},"referencedDeclaration":1278,"src":"2220:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1278_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:6"},"scope":1393,"src":"2159:163:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1325,"nodeType":"Block","src":"2503:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:6","statements":[{"nodeType":"YulAssignment","src":"2552:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1322,"isOffset":false,"isSlot":true,"src":"2552:6:6","suffix":"slot","valueSize":1},{"declaration":1318,"isOffset":false,"isSlot":false,"src":"2562:4:6","valueSize":1}],"flags":["memory-safe"],"id":1324,"nodeType":"InlineAssembly","src":"2513:63:6"}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"2328:86:6","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:6","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"slot","nameLocation":"2451:4:6","nodeType":"VariableDeclaration","scope":1326,"src":"2443:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:6"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"r","nameLocation":"2500:1:6","nodeType":"VariableDeclaration","scope":1326,"src":"2480:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1281_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1321,"nodeType":"UserDefinedTypeName","pathNode":{"id":1320,"name":"Bytes32Slot","nameLocations":["2480:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1281,"src":"2480:11:6"},"referencedDeclaration":1281,"src":"2480:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1281_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:6"},"scope":1393,"src":"2419:163:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1336,"nodeType":"Block","src":"2763:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:6","statements":[{"nodeType":"YulAssignment","src":"2812:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1333,"isOffset":false,"isSlot":true,"src":"2812:6:6","suffix":"slot","valueSize":1},{"declaration":1329,"isOffset":false,"isSlot":false,"src":"2822:4:6","valueSize":1}],"flags":["memory-safe"],"id":1335,"nodeType":"InlineAssembly","src":"2773:63:6"}]},"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"2588:86:6","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:6","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"slot","nameLocation":"2711:4:6","nodeType":"VariableDeclaration","scope":1337,"src":"2703:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:6"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"r","nameLocation":"2760:1:6","nodeType":"VariableDeclaration","scope":1337,"src":"2740:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1284_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1332,"nodeType":"UserDefinedTypeName","pathNode":{"id":1331,"name":"Uint256Slot","nameLocations":["2740:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1284,"src":"2740:11:6"},"referencedDeclaration":1284,"src":"2740:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1284_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:6"},"scope":1393,"src":"2679:163:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1347,"nodeType":"Block","src":"3020:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:6","statements":[{"nodeType":"YulAssignment","src":"3069:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1344,"isOffset":false,"isSlot":true,"src":"3069:6:6","suffix":"slot","valueSize":1},{"declaration":1340,"isOffset":false,"isSlot":false,"src":"3079:4:6","valueSize":1}],"flags":["memory-safe"],"id":1346,"nodeType":"InlineAssembly","src":"3030:63:6"}]},"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"2848:85:6","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1348,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:6","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"slot","nameLocation":"2969:4:6","nodeType":"VariableDeclaration","scope":1348,"src":"2961:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:6"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"r","nameLocation":"3017:1:6","nodeType":"VariableDeclaration","scope":1348,"src":"2998:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1287_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1343,"nodeType":"UserDefinedTypeName","pathNode":{"id":1342,"name":"Int256Slot","nameLocations":["2998:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1287,"src":"2998:10:6"},"referencedDeclaration":1287,"src":"2998:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1287_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:6"},"scope":1393,"src":"2938:161:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1358,"nodeType":"Block","src":"3277:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:6","statements":[{"nodeType":"YulAssignment","src":"3326:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1355,"isOffset":false,"isSlot":true,"src":"3326:6:6","suffix":"slot","valueSize":1},{"declaration":1351,"isOffset":false,"isSlot":false,"src":"3336:4:6","valueSize":1}],"flags":["memory-safe"],"id":1357,"nodeType":"InlineAssembly","src":"3287:63:6"}]},"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"3105:85:6","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1359,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:6","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"slot","nameLocation":"3226:4:6","nodeType":"VariableDeclaration","scope":1359,"src":"3218:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:6"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"r","nameLocation":"3274:1:6","nodeType":"VariableDeclaration","scope":1359,"src":"3255:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1290_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1354,"nodeType":"UserDefinedTypeName","pathNode":{"id":1353,"name":"StringSlot","nameLocations":["3255:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1290,"src":"3255:10:6"},"referencedDeclaration":1290,"src":"3255:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1290_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:6"},"scope":1393,"src":"3195:161:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1369,"nodeType":"Block","src":"3558:85:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:6","statements":[{"nodeType":"YulAssignment","src":"3607:20:6","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1366,"isOffset":false,"isSlot":true,"src":"3607:6:6","suffix":"slot","valueSize":1},{"declaration":1362,"isOffset":false,"isSlot":true,"src":"3617:10:6","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1368,"nodeType":"InlineAssembly","src":"3568:69:6"}]},"documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"3362:101:6","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1370,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:6","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"store","nameLocation":"3506:5:6","nodeType":"VariableDeclaration","scope":1370,"src":"3491:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1361,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:6"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"r","nameLocation":"3555:1:6","nodeType":"VariableDeclaration","scope":1370,"src":"3536:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1290_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1365,"nodeType":"UserDefinedTypeName","pathNode":{"id":1364,"name":"StringSlot","nameLocations":["3536:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1290,"src":"3536:10:6"},"referencedDeclaration":1290,"src":"3536:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1290_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:6"},"scope":1393,"src":"3468:175:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1380,"nodeType":"Block","src":"3818:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:6","statements":[{"nodeType":"YulAssignment","src":"3867:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1377,"isOffset":false,"isSlot":true,"src":"3867:6:6","suffix":"slot","valueSize":1},{"declaration":1373,"isOffset":false,"isSlot":false,"src":"3877:4:6","valueSize":1}],"flags":["memory-safe"],"id":1379,"nodeType":"InlineAssembly","src":"3828:63:6"}]},"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"3649:84:6","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:6","nodeType":"FunctionDefinition","parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"slot","nameLocation":"3768:4:6","nodeType":"VariableDeclaration","scope":1381,"src":"3760:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:6"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"r","nameLocation":"3815:1:6","nodeType":"VariableDeclaration","scope":1381,"src":"3797:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1293_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1376,"nodeType":"UserDefinedTypeName","pathNode":{"id":1375,"name":"BytesSlot","nameLocations":["3797:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"3797:9:6"},"referencedDeclaration":1293,"src":"3797:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1293_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:6"},"scope":1393,"src":"3738:159:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1391,"nodeType":"Block","src":"4094:85:6","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:6","statements":[{"nodeType":"YulAssignment","src":"4143:20:6","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1388,"isOffset":false,"isSlot":true,"src":"4143:6:6","suffix":"slot","valueSize":1},{"declaration":1384,"isOffset":false,"isSlot":true,"src":"4153:10:6","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1390,"nodeType":"InlineAssembly","src":"4104:69:6"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"3903:99:6","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1392,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:6","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"store","nameLocation":"4043:5:6","nodeType":"VariableDeclaration","scope":1392,"src":"4029:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1383,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:6"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"r","nameLocation":"4091:1:6","nodeType":"VariableDeclaration","scope":1392,"src":"4073:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1293_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1387,"nodeType":"UserDefinedTypeName","pathNode":{"id":1386,"name":"BytesSlot","nameLocations":["4073:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"4073:9:6"},"referencedDeclaration":1293,"src":"4073:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1293_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:6"},"scope":1393,"src":"4007:172:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1394,"src":"1407:2774:6","usedErrors":[],"usedEvents":[]}],"src":"193:3989:6"},"id":6},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3014],"Panic":[1139],"SafeCast":[4779]},"id":3015,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1395,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":1397,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3015,"sourceUnit":1140,"src":"129:35:7","symbolAliases":[{"foreign":{"id":1396,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"137:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":1399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3015,"sourceUnit":4780,"src":"165:40:7","symbolAliases":[{"foreign":{"id":1398,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"173:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"207:73:7","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3014,"linearizedBaseContracts":[3014],"name":"Math","nameLocation":"289:4:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1405,"members":[{"id":1401,"name":"Floor","nameLocation":"324:5:7","nodeType":"EnumValue","src":"324:5:7"},{"id":1402,"name":"Ceil","nameLocation":"367:4:7","nodeType":"EnumValue","src":"367:4:7"},{"id":1403,"name":"Trunc","nameLocation":"409:5:7","nodeType":"EnumValue","src":"409:5:7"},{"id":1404,"name":"Expand","nameLocation":"439:6:7","nodeType":"EnumValue","src":"439:6:7"}],"name":"Rounding","nameLocation":"305:8:7","nodeType":"EnumDefinition","src":"300:169:7"},{"body":{"id":1418,"nodeType":"Block","src":"731:112:7","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:7","statements":[{"nodeType":"YulAssignment","src":"780:16:7","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:7"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:7"},"nodeType":"YulFunctionCall","src":"787:9:7"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:7"}]},{"nodeType":"YulAssignment","src":"809:18:7","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:7"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:7"},"nodeType":"YulFunctionCall","src":"817:10:7"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1408,"isOffset":false,"isSlot":false,"src":"791:1:7","valueSize":1},{"declaration":1408,"isOffset":false,"isSlot":false,"src":"825:1:7","valueSize":1},{"declaration":1410,"isOffset":false,"isSlot":false,"src":"794:1:7","valueSize":1},{"declaration":1413,"isOffset":false,"isSlot":false,"src":"809:4:7","valueSize":1},{"declaration":1415,"isOffset":false,"isSlot":false,"src":"780:3:7","valueSize":1},{"declaration":1415,"isOffset":false,"isSlot":false,"src":"820:3:7","valueSize":1}],"flags":["memory-safe"],"id":1417,"nodeType":"InlineAssembly","src":"741:96:7"}]},"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"475:163:7","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":1419,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:7","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"a","nameLocation":"667:1:7","nodeType":"VariableDeclaration","scope":1419,"src":"659:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"b","nameLocation":"678:1:7","nodeType":"VariableDeclaration","scope":1419,"src":"670:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:7"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"high","nameLocation":"712:4:7","nodeType":"VariableDeclaration","scope":1419,"src":"704:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1415,"mutability":"mutable","name":"low","nameLocation":"726:3:7","nodeType":"VariableDeclaration","scope":1419,"src":"718:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1414,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:7"},"scope":3014,"src":"643:200:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1432,"nodeType":"Block","src":"1115:462:7","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:7","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:7","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:7"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:7"},"nodeType":"YulFunctionCall","src":"1474:6:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:7"},"nodeType":"YulFunctionCall","src":"1461:20:7"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:7","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:7","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:7"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:7"},"nodeType":"YulFunctionCall","src":"1501:9:7"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:7"}]},{"nodeType":"YulAssignment","src":"1523:38:7","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:7"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:7"},"nodeType":"YulFunctionCall","src":"1535:12:7"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:7"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:7"},"nodeType":"YulFunctionCall","src":"1549:11:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:7"},"nodeType":"YulFunctionCall","src":"1531:30:7"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1422,"isOffset":false,"isSlot":false,"src":"1468:1:7","valueSize":1},{"declaration":1422,"isOffset":false,"isSlot":false,"src":"1505:1:7","valueSize":1},{"declaration":1424,"isOffset":false,"isSlot":false,"src":"1471:1:7","valueSize":1},{"declaration":1424,"isOffset":false,"isSlot":false,"src":"1508:1:7","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"1523:4:7","valueSize":1},{"declaration":1429,"isOffset":false,"isSlot":false,"src":"1494:3:7","valueSize":1},{"declaration":1429,"isOffset":false,"isSlot":false,"src":"1543:3:7","valueSize":1},{"declaration":1429,"isOffset":false,"isSlot":false,"src":"1556:3:7","valueSize":1}],"flags":["memory-safe"],"id":1431,"nodeType":"InlineAssembly","src":"1412:159:7"}]},"documentation":{"id":1420,"nodeType":"StructuredDocumentation","src":"849:173:7","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:7","nodeType":"FunctionDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"a","nameLocation":"1051:1:7","nodeType":"VariableDeclaration","scope":1433,"src":"1043:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"b","nameLocation":"1062:1:7","nodeType":"VariableDeclaration","scope":1433,"src":"1054:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:7"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"high","nameLocation":"1096:4:7","nodeType":"VariableDeclaration","scope":1433,"src":"1088:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"low","nameLocation":"1110:3:7","nodeType":"VariableDeclaration","scope":1433,"src":"1102:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:7"},"scope":3014,"src":"1027:550:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1467,"nodeType":"Block","src":"1784:149:7","statements":[{"id":1466,"nodeType":"UncheckedBlock","src":"1794:133:7","statements":[{"assignments":[1446],"declarations":[{"constant":false,"id":1446,"mutability":"mutable","name":"c","nameLocation":"1826:1:7","nodeType":"VariableDeclaration","scope":1466,"src":"1818:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1450,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"1830:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1448,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"1834:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:7"},{"expression":{"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1451,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"1849:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1452,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"1859:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"1864:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1456,"nodeType":"ExpressionStatement","src":"1849:16:7"},{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"1879:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1458,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"1888:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1461,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"1908:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1459,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"1892:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"1892:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1465,"nodeType":"ExpressionStatement","src":"1879:37:7"}]}]},"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"1583:105:7","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":1468,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:7","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"a","nameLocation":"1717:1:7","nodeType":"VariableDeclaration","scope":1468,"src":"1709:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"b","nameLocation":"1728:1:7","nodeType":"VariableDeclaration","scope":1468,"src":"1720:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:7"},"returnParameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"success","nameLocation":"1759:7:7","nodeType":"VariableDeclaration","scope":1468,"src":"1754:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1440,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"result","nameLocation":"1776:6:7","nodeType":"VariableDeclaration","scope":1468,"src":"1768:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:7"},"scope":3014,"src":"1693:240:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1502,"nodeType":"Block","src":"2143:149:7","statements":[{"id":1501,"nodeType":"UncheckedBlock","src":"2153:133:7","statements":[{"assignments":[1481],"declarations":[{"constant":false,"id":1481,"mutability":"mutable","name":"c","nameLocation":"2185:1:7","nodeType":"VariableDeclaration","scope":1501,"src":"2177:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1485,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2189:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"2193:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:7"},{"expression":{"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1486,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2208:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1487,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2218:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2223:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1491,"nodeType":"ExpressionStatement","src":"2208:16:7"},{"expression":{"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"2238:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2247:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1496,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2267:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1494,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"2251:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"2251:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1500,"nodeType":"ExpressionStatement","src":"2238:37:7"}]}]},"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"1939:108:7","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:7","nodeType":"FunctionDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"a","nameLocation":"2076:1:7","nodeType":"VariableDeclaration","scope":1503,"src":"2068:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1473,"mutability":"mutable","name":"b","nameLocation":"2087:1:7","nodeType":"VariableDeclaration","scope":1503,"src":"2079:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:7"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"success","nameLocation":"2118:7:7","nodeType":"VariableDeclaration","scope":1503,"src":"2113:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1475,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"result","nameLocation":"2135:6:7","nodeType":"VariableDeclaration","scope":1503,"src":"2127:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:7"},"scope":3014,"src":"2052:240:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1532,"nodeType":"Block","src":"2505:391:7","statements":[{"id":1531,"nodeType":"UncheckedBlock","src":"2515:375:7","statements":[{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"c","nameLocation":"2547:1:7","nodeType":"VariableDeclaration","scope":1531,"src":"2539:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1520,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2551:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1518,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"2555:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:7"},{"AST":{"nodeType":"YulBlock","src":"2595:188:7","statements":[{"nodeType":"YulAssignment","src":"2727:42:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:7"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:7"},"nodeType":"YulFunctionCall","src":"2744:9:7"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:7"},"nodeType":"YulFunctionCall","src":"2741:16:7"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:7"},"nodeType":"YulFunctionCall","src":"2759:9:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:7"},"nodeType":"YulFunctionCall","src":"2738:31:7"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1506,"isOffset":false,"isSlot":false,"src":"2751:1:7","valueSize":1},{"declaration":1506,"isOffset":false,"isSlot":false,"src":"2766:1:7","valueSize":1},{"declaration":1508,"isOffset":false,"isSlot":false,"src":"2755:1:7","valueSize":1},{"declaration":1516,"isOffset":false,"isSlot":false,"src":"2748:1:7","valueSize":1},{"declaration":1511,"isOffset":false,"isSlot":false,"src":"2727:7:7","valueSize":1}],"flags":["memory-safe"],"id":1521,"nodeType":"InlineAssembly","src":"2570:213:7"},{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2842:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1523,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2851:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1526,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"2871:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1524,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"2855:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"2855:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1530,"nodeType":"ExpressionStatement","src":"2842:37:7"}]}]},"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"2298:111:7","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":1533,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:7","nodeType":"FunctionDefinition","parameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"a","nameLocation":"2438:1:7","nodeType":"VariableDeclaration","scope":1533,"src":"2430:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"b","nameLocation":"2449:1:7","nodeType":"VariableDeclaration","scope":1533,"src":"2441:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:7"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"success","nameLocation":"2480:7:7","nodeType":"VariableDeclaration","scope":1533,"src":"2475:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1510,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"result","nameLocation":"2497:6:7","nodeType":"VariableDeclaration","scope":1533,"src":"2489:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:7"},"scope":3014,"src":"2414:482:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1553,"nodeType":"Block","src":"3111:231:7","statements":[{"id":1552,"nodeType":"UncheckedBlock","src":"3121:215:7","statements":[{"expression":{"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1545,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"3145:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1546,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"3155:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1550,"nodeType":"ExpressionStatement","src":"3145:15:7"},{"AST":{"nodeType":"YulBlock","src":"3199:127:7","statements":[{"nodeType":"YulAssignment","src":"3293:19:7","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:7"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:7"},"nodeType":"YulFunctionCall","src":"3303:9:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1536,"isOffset":false,"isSlot":false,"src":"3307:1:7","valueSize":1},{"declaration":1538,"isOffset":false,"isSlot":false,"src":"3310:1:7","valueSize":1},{"declaration":1543,"isOffset":false,"isSlot":false,"src":"3293:6:7","valueSize":1}],"flags":["memory-safe"],"id":1551,"nodeType":"InlineAssembly","src":"3174:152:7"}]}]},"documentation":{"id":1534,"nodeType":"StructuredDocumentation","src":"2902:113:7","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1554,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:7","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"a","nameLocation":"3044:1:7","nodeType":"VariableDeclaration","scope":1554,"src":"3036:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1538,"mutability":"mutable","name":"b","nameLocation":"3055:1:7","nodeType":"VariableDeclaration","scope":1554,"src":"3047:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:7"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"success","nameLocation":"3086:7:7","nodeType":"VariableDeclaration","scope":1554,"src":"3081:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1540,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"result","nameLocation":"3103:6:7","nodeType":"VariableDeclaration","scope":1554,"src":"3095:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:7"},"scope":3014,"src":"3020:322:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"3567:231:7","statements":[{"id":1573,"nodeType":"UncheckedBlock","src":"3577:215:7","statements":[{"expression":{"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1566,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"3601:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"3611:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1571,"nodeType":"ExpressionStatement","src":"3601:15:7"},{"AST":{"nodeType":"YulBlock","src":"3655:127:7","statements":[{"nodeType":"YulAssignment","src":"3749:19:7","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:7"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:7"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:7"},"nodeType":"YulFunctionCall","src":"3759:9:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1557,"isOffset":false,"isSlot":false,"src":"3763:1:7","valueSize":1},{"declaration":1559,"isOffset":false,"isSlot":false,"src":"3766:1:7","valueSize":1},{"declaration":1564,"isOffset":false,"isSlot":false,"src":"3749:6:7","valueSize":1}],"flags":["memory-safe"],"id":1572,"nodeType":"InlineAssembly","src":"3630:152:7"}]}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"3348:123:7","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:7","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"a","nameLocation":"3500:1:7","nodeType":"VariableDeclaration","scope":1575,"src":"3492:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"b","nameLocation":"3511:1:7","nodeType":"VariableDeclaration","scope":1575,"src":"3503:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:7"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"success","nameLocation":"3542:7:7","nodeType":"VariableDeclaration","scope":1575,"src":"3537:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1561,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"result","nameLocation":"3559:6:7","nodeType":"VariableDeclaration","scope":1575,"src":"3551:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:7"},"scope":3014,"src":"3476:322:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1604,"nodeType":"Block","src":"3989:122:7","statements":[{"assignments":[1586,1588],"declarations":[{"constant":false,"id":1586,"mutability":"mutable","name":"success","nameLocation":"4005:7:7","nodeType":"VariableDeclaration","scope":1604,"src":"4000:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1585,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"result","nameLocation":"4022:6:7","nodeType":"VariableDeclaration","scope":1604,"src":"4014:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1593,"initialValue":{"arguments":[{"id":1590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"4039:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"4042:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1589,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"4032:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:7"},{"expression":{"arguments":[{"id":1595,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"4069:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"4078:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1597,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:7","memberName":"max","nodeType":"MemberAccess","src":"4086:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1594,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"4061:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1584,"id":1603,"nodeType":"Return","src":"4054:50:7"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"3804:103:7","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:7","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"a","nameLocation":"3943:1:7","nodeType":"VariableDeclaration","scope":1605,"src":"3935:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"b","nameLocation":"3954:1:7","nodeType":"VariableDeclaration","scope":1605,"src":"3946:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:7"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"3980:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:7"},"scope":3014,"src":"3912:199:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1624,"nodeType":"Block","src":"4294:73:7","statements":[{"assignments":[null,1616],"declarations":[null,{"constant":false,"id":1616,"mutability":"mutable","name":"result","nameLocation":"4315:6:7","nodeType":"VariableDeclaration","scope":1624,"src":"4307:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1621,"initialValue":{"arguments":[{"id":1618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"4332:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1619,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"4335:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1617,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"4325:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:7"},{"expression":{"id":1622,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"4354:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1614,"id":1623,"nodeType":"Return","src":"4347:13:7"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"4117:95:7","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":1625,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:7","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"a","nameLocation":"4248:1:7","nodeType":"VariableDeclaration","scope":1625,"src":"4240:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"b","nameLocation":"4259:1:7","nodeType":"VariableDeclaration","scope":1625,"src":"4251:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:7"},"returnParameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1625,"src":"4285:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:7"},"scope":3014,"src":"4217:150:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1654,"nodeType":"Block","src":"4564:122:7","statements":[{"assignments":[1636,1638],"declarations":[{"constant":false,"id":1636,"mutability":"mutable","name":"success","nameLocation":"4580:7:7","nodeType":"VariableDeclaration","scope":1654,"src":"4575:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1635,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"result","nameLocation":"4597:6:7","nodeType":"VariableDeclaration","scope":1654,"src":"4589:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1643,"initialValue":{"arguments":[{"id":1640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"4614:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"4617:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1639,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4607:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:7"},{"expression":{"arguments":[{"id":1645,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"4644:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"4653:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1647,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:7","memberName":"max","nodeType":"MemberAccess","src":"4661:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1644,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"4636:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1634,"id":1653,"nodeType":"Return","src":"4629:50:7"}]},"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"4373:109:7","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:7","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"a","nameLocation":"4518:1:7","nodeType":"VariableDeclaration","scope":1655,"src":"4510:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"b","nameLocation":"4529:1:7","nodeType":"VariableDeclaration","scope":1655,"src":"4521:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:7"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1655,"src":"4555:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:7"},"scope":3014,"src":"4487:199:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1681,"nodeType":"Block","src":"5158:207:7","statements":[{"id":1680,"nodeType":"UncheckedBlock","src":"5168:191:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5306:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"5312:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1669,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5316:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1674,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"5337:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1672,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"5321:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"5321:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1666,"id":1679,"nodeType":"Return","src":"5299:49:7"}]}]},"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"4692:374:7","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:7","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"condition","nameLocation":"5093:9:7","nodeType":"VariableDeclaration","scope":1682,"src":"5088:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1657,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"a","nameLocation":"5112:1:7","nodeType":"VariableDeclaration","scope":1682,"src":"5104:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"b","nameLocation":"5123:1:7","nodeType":"VariableDeclaration","scope":1682,"src":"5115:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:7"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1682,"src":"5149:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:7"},"scope":3014,"src":"5071:294:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1700,"nodeType":"Block","src":"5502:44:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1693,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"5527:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1694,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"5531:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1696,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"5534:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1697,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"5537:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1692,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"5519:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1691,"id":1699,"nodeType":"Return","src":"5512:27:7"}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"5371:59:7","text":" @dev Returns the largest of two numbers."},"id":1701,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:7","nodeType":"FunctionDefinition","parameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"a","nameLocation":"5456:1:7","nodeType":"VariableDeclaration","scope":1701,"src":"5448:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1687,"mutability":"mutable","name":"b","nameLocation":"5467:1:7","nodeType":"VariableDeclaration","scope":1701,"src":"5459:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1686,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:7"},"returnParameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1701,"src":"5493:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:7"},"scope":3014,"src":"5435:111:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1719,"nodeType":"Block","src":"5684:44:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"5709:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1713,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"5713:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1715,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"5716:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1716,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"5719:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1711,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"5701:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1710,"id":1718,"nodeType":"Return","src":"5694:27:7"}]},"documentation":{"id":1702,"nodeType":"StructuredDocumentation","src":"5552:60:7","text":" @dev Returns the smallest of two numbers."},"id":1720,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:7","nodeType":"FunctionDefinition","parameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"a","nameLocation":"5638:1:7","nodeType":"VariableDeclaration","scope":1720,"src":"5630:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"b","nameLocation":"5649:1:7","nodeType":"VariableDeclaration","scope":1720,"src":"5641:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:7"},"returnParameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1720,"src":"5675:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:7"},"scope":3014,"src":"5617:111:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"5912:82:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"5967:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1731,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"5971:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"5977:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"5981:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1729,"id":1741,"nodeType":"Return","src":"5959:28:7"}]},"documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"5734:102:7","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:7","nodeType":"FunctionDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"a","nameLocation":"5866:1:7","nodeType":"VariableDeclaration","scope":1743,"src":"5858:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1725,"mutability":"mutable","name":"b","nameLocation":"5877:1:7","nodeType":"VariableDeclaration","scope":1743,"src":"5869:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:7"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1743,"src":"5903:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:7"},"scope":3014,"src":"5841:153:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1783,"nodeType":"Block","src":"6286:633:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1753,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"6300:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1764,"nodeType":"IfStatement","src":"6296:150:7","trueBody":{"id":1763,"nodeType":"Block","src":"6308:138:7","statements":[{"expression":{"arguments":[{"expression":{"id":1759,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6412:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1139_$","typeString":"type(library Panic)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"6412:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1756,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6400:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1139_$","typeString":"type(library Panic)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1138,"src":"6400:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1762,"nodeType":"ExpressionStatement","src":"6400:35:7"}]}},{"id":1782,"nodeType":"UncheckedBlock","src":"6829:84:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6876:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1765,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"6860:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"6860:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6887:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1775,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"6896:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1752,"id":1781,"nodeType":"Return","src":"6853:49:7"}]}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"6000:210:7","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1784,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:7","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"a","nameLocation":"6240:1:7","nodeType":"VariableDeclaration","scope":1784,"src":"6232:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"b","nameLocation":"6251:1:7","nodeType":"VariableDeclaration","scope":1784,"src":"6243:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:7"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1784,"src":"6277:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:7"},"scope":3014,"src":"6215:704:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1919,"nodeType":"Block","src":"7340:3585:7","statements":[{"id":1918,"nodeType":"UncheckedBlock","src":"7350:3569:7","statements":[{"assignments":[1797,1799],"declarations":[{"constant":false,"id":1797,"mutability":"mutable","name":"high","nameLocation":"7383:4:7","nodeType":"VariableDeclaration","scope":1918,"src":"7375:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"low","nameLocation":"7397:3:7","nodeType":"VariableDeclaration","scope":1918,"src":"7389:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1804,"initialValue":{"arguments":[{"id":1801,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"7411:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1802,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"7414:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1800,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"7404:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1805,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"7498:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1813,"nodeType":"IfStatement","src":"7494:365:7","trueBody":{"id":1812,"nodeType":"Block","src":"7509:350:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1808,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"7827:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1809,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"7833:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1795,"id":1811,"nodeType":"Return","src":"7820:24:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1814,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"7969:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1815,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"7984:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1832,"nodeType":"IfStatement","src":"7965:142:7","trueBody":{"id":1831,"nodeType":"Block","src":"7990:117:7","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1821,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"8028:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1824,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"8046:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1139_$","typeString":"type(library Panic)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"8046:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1826,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"8070:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1139_$","typeString":"type(library Panic)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:7","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1102,"src":"8070:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1820,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"8020:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1817,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"8008:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1139_$","typeString":"type(library Panic)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1138,"src":"8008:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"ExpressionStatement","src":"8008:84:7"}]}},{"assignments":[1834],"declarations":[{"constant":false,"id":1834,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:7","nodeType":"VariableDeclaration","scope":1918,"src":"8359:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1835,"nodeType":"VariableDeclarationStatement","src":"8359:17:7"},{"AST":{"nodeType":"YulBlock","src":"8415:283:7","statements":[{"nodeType":"YulAssignment","src":"8484:38:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:7"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:7"},"nodeType":"YulFunctionCall","src":"8497:25:7"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:7"}]},{"nodeType":"YulAssignment","src":"8604:37:7","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:7"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:7"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:7"},"nodeType":"YulFunctionCall","src":"8622:18:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:7"},"nodeType":"YulFunctionCall","src":"8612:29:7"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:7"}]},{"nodeType":"YulAssignment","src":"8658:26:7","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:7"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:7"},"nodeType":"YulFunctionCall","src":"8665:19:7"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1791,"isOffset":false,"isSlot":false,"src":"8510:11:7","valueSize":1},{"declaration":1797,"isOffset":false,"isSlot":false,"src":"8604:4:7","valueSize":1},{"declaration":1797,"isOffset":false,"isSlot":false,"src":"8616:4:7","valueSize":1},{"declaration":1799,"isOffset":false,"isSlot":false,"src":"8636:3:7","valueSize":1},{"declaration":1799,"isOffset":false,"isSlot":false,"src":"8658:3:7","valueSize":1},{"declaration":1799,"isOffset":false,"isSlot":false,"src":"8669:3:7","valueSize":1},{"declaration":1834,"isOffset":false,"isSlot":false,"src":"8484:9:7","valueSize":1},{"declaration":1834,"isOffset":false,"isSlot":false,"src":"8625:9:7","valueSize":1},{"declaration":1834,"isOffset":false,"isSlot":false,"src":"8674:9:7","valueSize":1},{"declaration":1787,"isOffset":false,"isSlot":false,"src":"8504:1:7","valueSize":1},{"declaration":1789,"isOffset":false,"isSlot":false,"src":"8507:1:7","valueSize":1}],"flags":["memory-safe"],"id":1836,"nodeType":"InlineAssembly","src":"8390:308:7"},{"assignments":[1838],"declarations":[{"constant":false,"id":1838,"mutability":"mutable","name":"twos","nameLocation":"8910:4:7","nodeType":"VariableDeclaration","scope":1918,"src":"8902:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1845,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1839,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"8917:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1841,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"8936:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1843,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:7"},{"AST":{"nodeType":"YulBlock","src":"8987:359:7","statements":[{"nodeType":"YulAssignment","src":"9052:37:7","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:7"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:7"},"nodeType":"YulFunctionCall","src":"9067:22:7"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:7"}]},{"nodeType":"YulAssignment","src":"9153:21:7","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:7"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:7"},"nodeType":"YulFunctionCall","src":"9160:14:7"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:7"}]},{"nodeType":"YulAssignment","src":"9293:39:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:7","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:7"},"nodeType":"YulFunctionCall","src":"9309:12:7"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:7"},"nodeType":"YulFunctionCall","src":"9305:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:7"},"nodeType":"YulFunctionCall","src":"9301:31:7"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1791,"isOffset":false,"isSlot":false,"src":"9052:11:7","valueSize":1},{"declaration":1791,"isOffset":false,"isSlot":false,"src":"9071:11:7","valueSize":1},{"declaration":1799,"isOffset":false,"isSlot":false,"src":"9153:3:7","valueSize":1},{"declaration":1799,"isOffset":false,"isSlot":false,"src":"9164:3:7","valueSize":1},{"declaration":1838,"isOffset":false,"isSlot":false,"src":"9084:4:7","valueSize":1},{"declaration":1838,"isOffset":false,"isSlot":false,"src":"9169:4:7","valueSize":1},{"declaration":1838,"isOffset":false,"isSlot":false,"src":"9293:4:7","valueSize":1},{"declaration":1838,"isOffset":false,"isSlot":false,"src":"9316:4:7","valueSize":1},{"declaration":1838,"isOffset":false,"isSlot":false,"src":"9323:4:7","valueSize":1}],"flags":["memory-safe"],"id":1846,"nodeType":"InlineAssembly","src":"8962:384:7"},{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1847,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"9409:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1848,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"9416:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1849,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"9423:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ExpressionStatement","src":"9409:18:7"},{"assignments":[1854],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:7","nodeType":"VariableDeclaration","scope":1918,"src":"9762:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1861,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1856,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"9785:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:7"},{"expression":{"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1862,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10018:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1864,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"10033:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1865,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10047:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"nodeType":"ExpressionStatement","src":"10018:36:7"},{"expression":{"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1870,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10088:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1872,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"10103:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1873,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10117:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1877,"nodeType":"ExpressionStatement","src":"10088:36:7"},{"expression":{"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1878,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10160:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"10175:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1881,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10189:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1885,"nodeType":"ExpressionStatement","src":"10160:36:7"},{"expression":{"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1886,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10231:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"10246:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1889,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10260:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1893,"nodeType":"ExpressionStatement","src":"10231:36:7"},{"expression":{"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1894,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10304:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1896,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"10319:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1897,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10333:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1901,"nodeType":"ExpressionStatement","src":"10304:36:7"},{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1902,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10378:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1904,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"10393:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1905,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10407:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1909,"nodeType":"ExpressionStatement","src":"10378:36:7"},{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"10859:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"10868:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1912,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"10874:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ExpressionStatement","src":"10859:22:7"},{"expression":{"id":1916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"10902:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1795,"id":1917,"nodeType":"Return","src":"10895:13:7"}]}]},"documentation":{"id":1785,"nodeType":"StructuredDocumentation","src":"6925:312:7","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:7","nodeType":"FunctionDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"x","nameLocation":"7266:1:7","nodeType":"VariableDeclaration","scope":1920,"src":"7258:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"y","nameLocation":"7277:1:7","nodeType":"VariableDeclaration","scope":1920,"src":"7269:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1791,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:7","nodeType":"VariableDeclaration","scope":1920,"src":"7280:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:7"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"result","nameLocation":"7332:6:7","nodeType":"VariableDeclaration","scope":1920,"src":"7324:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:7"},"scope":3014,"src":"7242:3683:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"11164:128:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1936,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11188:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1937,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"11191:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1938,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"11194:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1935,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1920,1957],"referencedDeclaration":1920,"src":"11181:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1943,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"11242:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}],"id":1942,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"11225:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1946,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11262:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1947,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"11265:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1948,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"11268:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1945,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:7","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1940,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"11209:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"11209:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1934,"id":1955,"nodeType":"Return","src":"11174:111:7"}]},"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"10931:118:7","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:7","nodeType":"FunctionDefinition","parameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"x","nameLocation":"11078:1:7","nodeType":"VariableDeclaration","scope":1957,"src":"11070:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"y","nameLocation":"11089:1:7","nodeType":"VariableDeclaration","scope":1957,"src":"11081:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:7","nodeType":"VariableDeclaration","scope":1957,"src":"11092:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1926,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1930,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:7","nodeType":"VariableDeclaration","scope":1957,"src":"11113:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"},"typeName":{"id":1929,"nodeType":"UserDefinedTypeName","pathNode":{"id":1928,"name":"Rounding","nameLocations":["11113:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1405,"src":"11113:8:7"},"referencedDeclaration":1405,"src":"11113:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:7"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1957,"src":"11155:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:7"},"scope":3014,"src":"11054:238:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"11500:245:7","statements":[{"id":2005,"nodeType":"UncheckedBlock","src":"11510:229:7","statements":[{"assignments":[1970,1972],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"high","nameLocation":"11543:4:7","nodeType":"VariableDeclaration","scope":2005,"src":"11535:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"low","nameLocation":"11557:3:7","nodeType":"VariableDeclaration","scope":2005,"src":"11549:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1977,"initialValue":{"arguments":[{"id":1974,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"11571:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1975,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"11574:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1973,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11564:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1978,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"11594:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1980,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"11607:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1991,"nodeType":"IfStatement","src":"11590:86:7","trueBody":{"id":1990,"nodeType":"Block","src":"11610:66:7","statements":[{"expression":{"arguments":[{"expression":{"id":1986,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11640:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1139_$","typeString":"type(library Panic)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:7","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1102,"src":"11640:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1983,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11628:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1139_$","typeString":"type(library Panic)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1138,"src":"11628:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1989,"nodeType":"ExpressionStatement","src":"11628:33:7"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"11697:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1994,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"11712:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":1996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"11719:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2000,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"11726:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1968,"id":2004,"nodeType":"Return","src":"11689:39:7"}]}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"11298:111:7","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:7","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"x","nameLocation":"11438:1:7","nodeType":"VariableDeclaration","scope":2007,"src":"11430:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"y","nameLocation":"11449:1:7","nodeType":"VariableDeclaration","scope":2007,"src":"11441:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"n","nameLocation":"11458:1:7","nodeType":"VariableDeclaration","scope":2007,"src":"11452:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1963,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:7"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"result","nameLocation":"11492:6:7","nodeType":"VariableDeclaration","scope":2007,"src":"11484:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:7"},"scope":3014,"src":"11414:331:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2045,"nodeType":"Block","src":"11963:113:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2023,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"11987:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2024,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"11990:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2025,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"11993:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2022,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[2007,2046],"referencedDeclaration":2007,"src":"11980:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2030,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"12031:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}],"id":2029,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"12014:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2033,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"12051:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2034,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"12054:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2036,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"12062:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2032,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:7","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2027,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"11998:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"11998:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2021,"id":2044,"nodeType":"Return","src":"11973:96:7"}]},"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"11751:109:7","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":2046,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:7","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"x","nameLocation":"11889:1:7","nodeType":"VariableDeclaration","scope":2046,"src":"11881:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"y","nameLocation":"11900:1:7","nodeType":"VariableDeclaration","scope":2046,"src":"11892:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"n","nameLocation":"11909:1:7","nodeType":"VariableDeclaration","scope":2046,"src":"11903:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2013,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:7","nodeType":"VariableDeclaration","scope":2046,"src":"11912:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"},"typeName":{"id":2016,"nodeType":"UserDefinedTypeName","pathNode":{"id":2015,"name":"Rounding","nameLocations":["11912:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1405,"src":"11912:8:7"},"referencedDeclaration":1405,"src":"11912:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:7"},"returnParameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2046,"src":"11954:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:7"},"scope":3014,"src":"11865:211:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2142,"nodeType":"Block","src":"12710:1849:7","statements":[{"id":2141,"nodeType":"UncheckedBlock","src":"12720:1833:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"12748:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2061,"nodeType":"IfStatement","src":"12744:20:7","trueBody":{"expression":{"hexValue":"30","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2055,"id":2060,"nodeType":"Return","src":"12756:8:7"}},{"assignments":[2063],"declarations":[{"constant":false,"id":2063,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:7","nodeType":"VariableDeclaration","scope":2141,"src":"13235:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2067,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2064,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"13255:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2065,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"13259:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:7"},{"assignments":[2069],"declarations":[{"constant":false,"id":2069,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:7","nodeType":"VariableDeclaration","scope":2141,"src":"13274:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2071,"initialValue":{"id":2070,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"13288:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:7"},{"assignments":[2073],"declarations":[{"constant":false,"id":2073,"mutability":"mutable","name":"x","nameLocation":"13432:1:7","nodeType":"VariableDeclaration","scope":2141,"src":"13425:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2072,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2075,"initialValue":{"hexValue":"30","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:7"},{"assignments":[2077],"declarations":[{"constant":false,"id":2077,"mutability":"mutable","name":"y","nameLocation":"13458:1:7","nodeType":"VariableDeclaration","scope":2141,"src":"13451:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2076,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2079,"initialValue":{"hexValue":"31","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:7"},{"body":{"id":2116,"nodeType":"Block","src":"13501:882:7","statements":[{"assignments":[2084],"declarations":[{"constant":false,"id":2084,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:7","nodeType":"VariableDeclaration","scope":2116,"src":"13519:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2088,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2085,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"13538:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2086,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"13544:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:7"},{"expression":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2089,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"13573:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2090,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"13578:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2091,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2092,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"13678:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"13923:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"13929:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2095,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"13941:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2100,"nodeType":"ExpressionStatement","src":"13572:395:7"},{"expression":{"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2101,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"13987:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2102,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"13990:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2103,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2104,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"14072:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"14326:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2106,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"14330:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2109,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"14341:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2107,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:7","typeDescriptions":{}}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2115,"nodeType":"ExpressionStatement","src":"13986:382:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"13485:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2117,"nodeType":"WhileStatement","src":"13478:905:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2118,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"14401:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2123,"nodeType":"IfStatement","src":"14397:22:7","trueBody":{"expression":{"hexValue":"30","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2055,"id":2122,"nodeType":"Return","src":"14411:8:7"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2125,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"14470:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"14477:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:7","subExpression":{"id":2131,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"14490:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:7","typeDescriptions":{}}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2137,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"14502:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:7","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2124,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"14462:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2055,"id":2140,"nodeType":"Return","src":"14455:50:7"}]}]},"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"12082:553:7","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":2143,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:7","nodeType":"FunctionDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"a","nameLocation":"12664:1:7","nodeType":"VariableDeclaration","scope":2143,"src":"12656:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2051,"mutability":"mutable","name":"n","nameLocation":"12675:1:7","nodeType":"VariableDeclaration","scope":2143,"src":"12667:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:7"},"returnParameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2143,"src":"12701:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:7"},"scope":3014,"src":"12640:1919:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2163,"nodeType":"Block","src":"15159:82:7","statements":[{"id":2162,"nodeType":"UncheckedBlock","src":"15169:66:7","statements":[{"expression":{"arguments":[{"id":2155,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"15212:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2156,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"15215:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2159,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"15222:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2153,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"15200:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3014_$","typeString":"type(library Math)"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:7","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":2200,"src":"15200:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2152,"id":2161,"nodeType":"Return","src":"15193:31:7"}]}]},"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"14565:514:7","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:7","nodeType":"FunctionDefinition","parameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"a","nameLocation":"15113:1:7","nodeType":"VariableDeclaration","scope":2164,"src":"15105:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"p","nameLocation":"15124:1:7","nodeType":"VariableDeclaration","scope":2164,"src":"15116:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:7"},"returnParameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"15150:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:7"},"scope":3014,"src":"15084:157:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"16011:174:7","statements":[{"assignments":[2177,2179],"declarations":[{"constant":false,"id":2177,"mutability":"mutable","name":"success","nameLocation":"16027:7:7","nodeType":"VariableDeclaration","scope":2199,"src":"16022:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2176,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2179,"mutability":"mutable","name":"result","nameLocation":"16044:6:7","nodeType":"VariableDeclaration","scope":2199,"src":"16036:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2185,"initialValue":{"arguments":[{"id":2181,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"16064:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2182,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"16067:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2183,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"16070:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2180,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2224,2306],"referencedDeclaration":2224,"src":"16054:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:7"},{"condition":{"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:7","subExpression":{"id":2186,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"16087:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2196,"nodeType":"IfStatement","src":"16082:74:7","trueBody":{"id":2195,"nodeType":"Block","src":"16096:60:7","statements":[{"expression":{"arguments":[{"expression":{"id":2191,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"16122:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1139_$","typeString":"type(library Panic)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"16122:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2188,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"16110:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1139_$","typeString":"type(library Panic)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1138,"src":"16110:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2194,"nodeType":"ExpressionStatement","src":"16110:35:7"}]}},{"expression":{"id":2197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"16172:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2175,"id":2198,"nodeType":"Return","src":"16165:13:7"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"15247:678:7","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:7","nodeType":"FunctionDefinition","parameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"b","nameLocation":"15954:1:7","nodeType":"VariableDeclaration","scope":2200,"src":"15946:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"e","nameLocation":"15965:1:7","nodeType":"VariableDeclaration","scope":2200,"src":"15957:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2171,"mutability":"mutable","name":"m","nameLocation":"15976:1:7","nodeType":"VariableDeclaration","scope":2200,"src":"15968:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:7"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2200,"src":"16002:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:7"},"scope":3014,"src":"15930:255:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2223,"nodeType":"Block","src":"17039:1493:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2214,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"17053:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2221,"nodeType":"IfStatement","src":"17049:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2213,"id":2220,"nodeType":"Return","src":"17061:17:7"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:7","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:7"},"nodeType":"YulFunctionCall","src":"17138:11:7"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:7","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:7"},"nodeType":"YulFunctionCall","src":"18050:17:7"},"nodeType":"YulExpressionStatement","src":"18050:17:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:7"},"nodeType":"YulFunctionCall","src":"18087:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:7","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:7"},"nodeType":"YulFunctionCall","src":"18080:28:7"},"nodeType":"YulExpressionStatement","src":"18080:28:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:7","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:7"},"nodeType":"YulFunctionCall","src":"18128:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:7","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:7"},"nodeType":"YulFunctionCall","src":"18121:28:7"},"nodeType":"YulExpressionStatement","src":"18121:28:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:7","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:7"},"nodeType":"YulFunctionCall","src":"18169:14:7"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:7"},"nodeType":"YulFunctionCall","src":"18162:25:7"},"nodeType":"YulExpressionStatement","src":"18162:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:7","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:7"},"nodeType":"YulFunctionCall","src":"18207:14:7"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:7"},"nodeType":"YulFunctionCall","src":"18200:25:7"},"nodeType":"YulExpressionStatement","src":"18200:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:7","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:7"},"nodeType":"YulFunctionCall","src":"18245:14:7"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:7"},"nodeType":"YulFunctionCall","src":"18238:25:7"},"nodeType":"YulExpressionStatement","src":"18238:25:7"},{"nodeType":"YulAssignment","src":"18425:57:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:7"},"nodeType":"YulFunctionCall","src":"18447:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:7","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:7","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:7","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:7","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:7"},"nodeType":"YulFunctionCall","src":"18436:46:7"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:7"}]},{"nodeType":"YulAssignment","src":"18495:21:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:7","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:7"},"nodeType":"YulFunctionCall","src":"18505:11:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2203,"isOffset":false,"isSlot":false,"src":"18185:1:7","valueSize":1},{"declaration":2205,"isOffset":false,"isSlot":false,"src":"18223:1:7","valueSize":1},{"declaration":2207,"isOffset":false,"isSlot":false,"src":"18261:1:7","valueSize":1},{"declaration":2212,"isOffset":false,"isSlot":false,"src":"18495:6:7","valueSize":1},{"declaration":2210,"isOffset":false,"isSlot":false,"src":"18425:7:7","valueSize":1}],"flags":["memory-safe"],"id":2222,"nodeType":"InlineAssembly","src":"17088:1438:7"}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"16191:738:7","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:7","nodeType":"FunctionDefinition","parameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"b","nameLocation":"16961:1:7","nodeType":"VariableDeclaration","scope":2224,"src":"16953:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"e","nameLocation":"16972:1:7","nodeType":"VariableDeclaration","scope":2224,"src":"16964:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2204,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"m","nameLocation":"16983:1:7","nodeType":"VariableDeclaration","scope":2224,"src":"16975:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:7"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"success","nameLocation":"17014:7:7","nodeType":"VariableDeclaration","scope":2224,"src":"17009:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2209,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"result","nameLocation":"17031:6:7","nodeType":"VariableDeclaration","scope":2224,"src":"17023:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:7"},"scope":3014,"src":"16934:1598:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2259,"nodeType":"Block","src":"18729:179:7","statements":[{"assignments":[2237,2239],"declarations":[{"constant":false,"id":2237,"mutability":"mutable","name":"success","nameLocation":"18745:7:7","nodeType":"VariableDeclaration","scope":2259,"src":"18740:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2236,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"result","nameLocation":"18767:6:7","nodeType":"VariableDeclaration","scope":2259,"src":"18754:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2238,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2245,"initialValue":{"arguments":[{"id":2241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"18787:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2242,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"18790:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2243,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"18793:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2240,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2224,2306],"referencedDeclaration":2306,"src":"18777:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:7"},{"condition":{"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:7","subExpression":{"id":2246,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"18810:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2256,"nodeType":"IfStatement","src":"18805:74:7","trueBody":{"id":2255,"nodeType":"Block","src":"18819:60:7","statements":[{"expression":{"arguments":[{"expression":{"id":2251,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"18845:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1139_$","typeString":"type(library Panic)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"18845:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2248,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"18833:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1139_$","typeString":"type(library Panic)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1138,"src":"18833:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2254,"nodeType":"ExpressionStatement","src":"18833:35:7"}]}},{"expression":{"id":2257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"18895:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2235,"id":2258,"nodeType":"Return","src":"18888:13:7"}]},"documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"18538:85:7","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":2260,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:7","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"b","nameLocation":"18657:1:7","nodeType":"VariableDeclaration","scope":2260,"src":"18644:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2226,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"e","nameLocation":"18673:1:7","nodeType":"VariableDeclaration","scope":2260,"src":"18660:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2228,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"m","nameLocation":"18689:1:7","nodeType":"VariableDeclaration","scope":2260,"src":"18676:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2230,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:7"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"18715:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2233,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:7"},"scope":3014,"src":"18628:280:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2305,"nodeType":"Block","src":"19162:771:7","statements":[{"condition":{"arguments":[{"id":2275,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"19187:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2274,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"19176:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2284,"nodeType":"IfStatement","src":"19172:47:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2278,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":2282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":2273,"id":2283,"nodeType":"Return","src":"19191:28:7"}},{"assignments":[2286],"declarations":[{"constant":false,"id":2286,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:7","nodeType":"VariableDeclaration","scope":2305,"src":"19230:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2289,"initialValue":{"expression":{"id":2287,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"19245:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:7","memberName":"length","nodeType":"MemberAccess","src":"19245:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:7"},{"expression":{"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"19335:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2293,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"19361:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:7","memberName":"length","nodeType":"MemberAccess","src":"19361:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2295,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"19371:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:7","memberName":"length","nodeType":"MemberAccess","src":"19371:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2297,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"19381:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2298,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"19387:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2299,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"19390:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2300,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"19393:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2291,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2303,"nodeType":"ExpressionStatement","src":"19335:60:7"},{"AST":{"nodeType":"YulBlock","src":"19431:496:7","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:7","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:7"},"nodeType":"YulFunctionCall","src":"19460:17:7"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:7","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:7"},"nodeType":"YulFunctionCall","src":"19589:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:7","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:7"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:7"},"nodeType":"YulFunctionCall","src":"19611:13:7"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:7"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:7"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:7"},"nodeType":"YulFunctionCall","src":"19578:62:7"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:7"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:7"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:7"},"nodeType":"YulFunctionCall","src":"19789:20:7"},"nodeType":"YulExpressionStatement","src":"19789:20:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:7","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:7"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:7"},"nodeType":"YulFunctionCall","src":"19898:18:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:7"},"nodeType":"YulFunctionCall","src":"19885:32:7"},"nodeType":"YulExpressionStatement","src":"19885:32:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":2286,"isOffset":false,"isSlot":false,"src":"19635:4:7","valueSize":1},{"declaration":2286,"isOffset":false,"isSlot":false,"src":"19804:4:7","valueSize":1},{"declaration":2286,"isOffset":false,"isSlot":false,"src":"19911:4:7","valueSize":1},{"declaration":2272,"isOffset":false,"isSlot":false,"src":"19464:6:7","valueSize":1},{"declaration":2272,"isOffset":false,"isSlot":false,"src":"19617:6:7","valueSize":1},{"declaration":2272,"isOffset":false,"isSlot":false,"src":"19796:6:7","valueSize":1},{"declaration":2270,"isOffset":false,"isSlot":false,"src":"19567:7:7","valueSize":1}],"flags":["memory-safe"],"id":2304,"nodeType":"InlineAssembly","src":"19406:521:7"}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"18914:88:7","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:7","nodeType":"FunctionDefinition","parameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"b","nameLocation":"19048:1:7","nodeType":"VariableDeclaration","scope":2306,"src":"19035:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2262,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"e","nameLocation":"19072:1:7","nodeType":"VariableDeclaration","scope":2306,"src":"19059:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2264,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2267,"mutability":"mutable","name":"m","nameLocation":"19096:1:7","nodeType":"VariableDeclaration","scope":2306,"src":"19083:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2266,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:7"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"success","nameLocation":"19132:7:7","nodeType":"VariableDeclaration","scope":2306,"src":"19127:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2269,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"result","nameLocation":"19154:6:7","nodeType":"VariableDeclaration","scope":2306,"src":"19141:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2271,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:7"},"scope":3014,"src":"19007:926:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2338,"nodeType":"Block","src":"20088:176:7","statements":[{"body":{"id":2334,"nodeType":"Block","src":"20145:92:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2325,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"20163:9:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2327,"indexExpression":{"id":2326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"20173:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2333,"nodeType":"IfStatement","src":"20159:68:7","trueBody":{"id":2332,"nodeType":"Block","src":"20182:45:7","statements":[{"expression":{"hexValue":"66616c7365","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2313,"id":2331,"nodeType":"Return","src":"20200:12:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2318,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"20118:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2319,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"20122:9:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:7","memberName":"length","nodeType":"MemberAccess","src":"20122:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2335,"initializationExpression":{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"i","nameLocation":"20111:1:7","nodeType":"VariableDeclaration","scope":2335,"src":"20103:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2317,"initialValue":{"hexValue":"30","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:7"},"loopExpression":{"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:7","subExpression":{"id":2322,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"20142:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2324,"nodeType":"ExpressionStatement","src":"20140:3:7"},"nodeType":"ForStatement","src":"20098:139:7"},{"expression":{"hexValue":"74727565","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2313,"id":2337,"nodeType":"Return","src":"20246:11:7"}]},"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"19939:72:7","text":" @dev Returns whether the provided byte array is zero."},"id":2339,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:7","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:7","nodeType":"VariableDeclaration","scope":2339,"src":"20036:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2308,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:7"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2339,"src":"20082:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2311,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:7"},"scope":3014,"src":"20016:248:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2557,"nodeType":"Block","src":"20624:5124:7","statements":[{"id":2556,"nodeType":"UncheckedBlock","src":"20634:5108:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2347,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"20728:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2353,"nodeType":"IfStatement","src":"20724:53:7","trueBody":{"id":2352,"nodeType":"Block","src":"20736:41:7","statements":[{"expression":{"id":2350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"20761:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2346,"id":2351,"nodeType":"Return","src":"20754:8:7"}]}},{"assignments":[2355],"declarations":[{"constant":false,"id":2355,"mutability":"mutable","name":"aa","nameLocation":"21712:2:7","nodeType":"VariableDeclaration","scope":2556,"src":"21704:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2357,"initialValue":{"id":2356,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"21717:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:7"},{"assignments":[2359],"declarations":[{"constant":false,"id":2359,"mutability":"mutable","name":"xn","nameLocation":"21740:2:7","nodeType":"VariableDeclaration","scope":2556,"src":"21732:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2361,"initialValue":{"hexValue":"31","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"21765:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2377,"nodeType":"IfStatement","src":"21761:92:7","trueBody":{"id":2376,"nodeType":"Block","src":"21783:70:7","statements":[{"expression":{"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2368,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"21801:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2371,"nodeType":"ExpressionStatement","src":"21801:10:7"},{"expression":{"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2372,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"21829:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2375,"nodeType":"ExpressionStatement","src":"21829:9:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2378,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"21870:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2393,"nodeType":"IfStatement","src":"21866:90:7","trueBody":{"id":2392,"nodeType":"Block","src":"21887:69:7","statements":[{"expression":{"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2384,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"21905:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2387,"nodeType":"ExpressionStatement","src":"21905:9:7"},{"expression":{"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2388,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"21932:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2391,"nodeType":"ExpressionStatement","src":"21932:9:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2394,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"21973:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2409,"nodeType":"IfStatement","src":"21969:90:7","trueBody":{"id":2408,"nodeType":"Block","src":"21990:69:7","statements":[{"expression":{"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2400,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"22008:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2403,"nodeType":"ExpressionStatement","src":"22008:9:7"},{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2404,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"22035:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2407,"nodeType":"ExpressionStatement","src":"22035:9:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"22076:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2425,"nodeType":"IfStatement","src":"22072:89:7","trueBody":{"id":2424,"nodeType":"Block","src":"22093:68:7","statements":[{"expression":{"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2416,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"22111:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2419,"nodeType":"ExpressionStatement","src":"22111:9:7"},{"expression":{"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2420,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"22138:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2423,"nodeType":"ExpressionStatement","src":"22138:8:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2426,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"22178:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2441,"nodeType":"IfStatement","src":"22174:87:7","trueBody":{"id":2440,"nodeType":"Block","src":"22194:67:7","statements":[{"expression":{"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2432,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"22212:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2435,"nodeType":"ExpressionStatement","src":"22212:8:7"},{"expression":{"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2436,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"22238:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2439,"nodeType":"ExpressionStatement","src":"22238:8:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2442,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"22278:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2457,"nodeType":"IfStatement","src":"22274:87:7","trueBody":{"id":2456,"nodeType":"Block","src":"22294:67:7","statements":[{"expression":{"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2448,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"22312:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2451,"nodeType":"ExpressionStatement","src":"22312:8:7"},{"expression":{"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2452,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"22338:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2455,"nodeType":"ExpressionStatement","src":"22338:8:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2458,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"22378:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"nodeType":"IfStatement","src":"22374:61:7","trueBody":{"id":2468,"nodeType":"Block","src":"22394:41:7","statements":[{"expression":{"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2464,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"22412:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2467,"nodeType":"ExpressionStatement","src":"22412:8:7"}]}},{"expression":{"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2470,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"22855:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2472,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"22865:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2478,"nodeType":"ExpressionStatement","src":"22855:18:7"},{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2479,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"24760:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"24766:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"24771:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2482,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"24775:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"24760:23:7"},{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2490,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"24869:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"24875:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"24880:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2493,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"24884:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2500,"nodeType":"ExpressionStatement","src":"24869:23:7"},{"expression":{"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2501,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"24980:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"24986:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"24991:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2504,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"24995:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2511,"nodeType":"ExpressionStatement","src":"24980:23:7"},{"expression":{"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2512,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25089:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2513,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25095:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"25100:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2515,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25104:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2522,"nodeType":"ExpressionStatement","src":"25089:23:7"},{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2523,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25199:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2524,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25205:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"25210:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2526,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25214:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2533,"nodeType":"ExpressionStatement","src":"25199:23:7"},{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2534,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25309:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25315:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"25320:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2537,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25324:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2544,"nodeType":"ExpressionStatement","src":"25309:23:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25698:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2548,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25719:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"25724:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2550,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"25728:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2546,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"25703:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"25703:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2346,"id":2555,"nodeType":"Return","src":"25691:40:7"}]}]},"documentation":{"id":2340,"nodeType":"StructuredDocumentation","src":"20270:292:7","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2558,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:7","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"a","nameLocation":"20589:1:7","nodeType":"VariableDeclaration","scope":2558,"src":"20581:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2341,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:7"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2558,"src":"20615:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:7"},"scope":3014,"src":"20567:5181:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2591,"nodeType":"Block","src":"25921:171:7","statements":[{"id":2590,"nodeType":"UncheckedBlock","src":"25931:155:7","statements":[{"assignments":[2570],"declarations":[{"constant":false,"id":2570,"mutability":"mutable","name":"result","nameLocation":"25963:6:7","nodeType":"VariableDeclaration","scope":2590,"src":"25955:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2574,"initialValue":{"arguments":[{"id":2572,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"25977:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2571,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2558,2592],"referencedDeclaration":2558,"src":"25972:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"26000:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2579,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"26042:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}],"id":2578,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"26025:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"26055:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"26064:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2584,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"26073:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2576,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"26009:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"26009:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2568,"id":2589,"nodeType":"Return","src":"25993:82:7"}]}]},"documentation":{"id":2559,"nodeType":"StructuredDocumentation","src":"25754:86:7","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:7","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"a","nameLocation":"25867:1:7","nodeType":"VariableDeclaration","scope":2592,"src":"25859:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2564,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:7","nodeType":"VariableDeclaration","scope":2592,"src":"25870:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"},"typeName":{"id":2563,"nodeType":"UserDefinedTypeName","pathNode":{"id":2562,"name":"Rounding","nameLocations":["25870:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1405,"src":"25870:8:7"},"referencedDeclaration":1405,"src":"25870:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:7"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2592,"src":"25912:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:7"},"scope":3014,"src":"25845:247:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2682,"nodeType":"Block","src":"26281:2334:7","statements":[{"expression":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2600,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"26363:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2603,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"26383:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2601,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"26367:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"26367:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:7","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2610,"nodeType":"ExpressionStatement","src":"26363:64:7"},{"expression":{"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2611,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"26503:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2614,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"26525:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2615,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"26530:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2612,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"26508:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"26508:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:7","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2624,"nodeType":"ExpressionStatement","src":"26503:56:7"},{"expression":{"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2625,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"26634:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2628,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"26656:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2629,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"26661:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2626,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"26639:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"26639:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:7","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2638,"nodeType":"ExpressionStatement","src":"26634:48:7"},{"expression":{"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2639,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"26757:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"26779:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2643,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"26784:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:7","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2640,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"26762:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"26762:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2652,"nodeType":"ExpressionStatement","src":"26757:44:7"},{"expression":{"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2653,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"26874:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2656,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"26896:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2657,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"26901:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2654,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"26879:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"26879:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2666,"nodeType":"ExpressionStatement","src":"26874:42:7"},{"expression":{"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2667,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"26988:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"27010:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2671,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"27015:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2668,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"26993:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"26993:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2680,"nodeType":"ExpressionStatement","src":"26988:41:7"},{"AST":{"nodeType":"YulBlock","src":"28490:119:7","statements":[{"nodeType":"YulAssignment","src":"28504:95:7","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:7"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:7"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:7"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:7"},"nodeType":"YulFunctionCall","src":"28520:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:7","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:7"},"nodeType":"YulFunctionCall","src":"28515:83:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:7"},"nodeType":"YulFunctionCall","src":"28509:90:7"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2598,"isOffset":false,"isSlot":false,"src":"28504:1:7","valueSize":1},{"declaration":2598,"isOffset":false,"isSlot":false,"src":"28512:1:7","valueSize":1},{"declaration":2598,"isOffset":false,"isSlot":false,"src":"28524:1:7","valueSize":1},{"declaration":2595,"isOffset":false,"isSlot":false,"src":"28527:1:7","valueSize":1}],"flags":["memory-safe"],"id":2681,"nodeType":"InlineAssembly","src":"28465:144:7"}]},"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"26098:119:7","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2683,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:7","nodeType":"FunctionDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"x","nameLocation":"26244:1:7","nodeType":"VariableDeclaration","scope":2683,"src":"26236:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:7"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"r","nameLocation":"26278:1:7","nodeType":"VariableDeclaration","scope":2683,"src":"26270:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:7"},"scope":3014,"src":"26222:2393:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2716,"nodeType":"Block","src":"28848:175:7","statements":[{"id":2715,"nodeType":"UncheckedBlock","src":"28858:159:7","statements":[{"assignments":[2695],"declarations":[{"constant":false,"id":2695,"mutability":"mutable","name":"result","nameLocation":"28890:6:7","nodeType":"VariableDeclaration","scope":2715,"src":"28882:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2699,"initialValue":{"arguments":[{"id":2697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"28904:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2696,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2683,2717],"referencedDeclaration":2683,"src":"28899:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"28931:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2704,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"28973:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}],"id":2703,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"28956:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"28991:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"29000:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2701,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"28940:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"28940:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2693,"id":2714,"nodeType":"Return","src":"28924:82:7"}]}]},"documentation":{"id":2684,"nodeType":"StructuredDocumentation","src":"28621:142:7","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2717,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:7","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"value","nameLocation":"28790:5:7","nodeType":"VariableDeclaration","scope":2717,"src":"28782:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2689,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:7","nodeType":"VariableDeclaration","scope":2717,"src":"28797:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"},"typeName":{"id":2688,"nodeType":"UserDefinedTypeName","pathNode":{"id":2687,"name":"Rounding","nameLocations":["28797:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1405,"src":"28797:8:7"},"referencedDeclaration":1405,"src":"28797:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:7"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2717,"src":"28839:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:7"},"scope":3014,"src":"28768:255:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2845,"nodeType":"Block","src":"29216:854:7","statements":[{"assignments":[2726],"declarations":[{"constant":false,"id":2726,"mutability":"mutable","name":"result","nameLocation":"29234:6:7","nodeType":"VariableDeclaration","scope":2845,"src":"29226:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2728,"initialValue":{"hexValue":"30","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:7"},{"id":2842,"nodeType":"UncheckedBlock","src":"29254:787:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29282:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2745,"nodeType":"IfStatement","src":"29278:103:7","trueBody":{"id":2744,"nodeType":"Block","src":"29301:80:7","statements":[{"expression":{"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29319:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2739,"nodeType":"ExpressionStatement","src":"29319:17:7"},{"expression":{"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"29354:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2743,"nodeType":"ExpressionStatement","src":"29354:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29398:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2762,"nodeType":"IfStatement","src":"29394:103:7","trueBody":{"id":2761,"nodeType":"Block","src":"29417:80:7","statements":[{"expression":{"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29435:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2756,"nodeType":"ExpressionStatement","src":"29435:17:7"},{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"29470:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2760,"nodeType":"ExpressionStatement","src":"29470:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29514:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2779,"nodeType":"IfStatement","src":"29510:103:7","trueBody":{"id":2778,"nodeType":"Block","src":"29533:80:7","statements":[{"expression":{"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29551:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2773,"nodeType":"ExpressionStatement","src":"29551:17:7"},{"expression":{"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"29586:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2777,"nodeType":"ExpressionStatement","src":"29586:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29630:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2796,"nodeType":"IfStatement","src":"29626:100:7","trueBody":{"id":2795,"nodeType":"Block","src":"29648:78:7","statements":[{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29666:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ExpressionStatement","src":"29666:16:7"},{"expression":{"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"29700:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2794,"nodeType":"ExpressionStatement","src":"29700:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29743:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2813,"nodeType":"IfStatement","src":"29739:100:7","trueBody":{"id":2812,"nodeType":"Block","src":"29761:78:7","statements":[{"expression":{"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29779:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2807,"nodeType":"ExpressionStatement","src":"29779:16:7"},{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"29813:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2811,"nodeType":"ExpressionStatement","src":"29813:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29856:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2830,"nodeType":"IfStatement","src":"29852:100:7","trueBody":{"id":2829,"nodeType":"Block","src":"29874:78:7","statements":[{"expression":{"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29892:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2824,"nodeType":"ExpressionStatement","src":"29892:16:7"},{"expression":{"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"29926:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2828,"nodeType":"ExpressionStatement","src":"29926:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"29969:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2841,"nodeType":"IfStatement","src":"29965:66:7","trueBody":{"id":2840,"nodeType":"Block","src":"29987:44:7","statements":[{"expression":{"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"30005:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2839,"nodeType":"ExpressionStatement","src":"30005:11:7"}]}}]},{"expression":{"id":2843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"30057:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2724,"id":2844,"nodeType":"Return","src":"30050:13:7"}]},"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"29029:120:7","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2846,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:7","nodeType":"FunctionDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"value","nameLocation":"29177:5:7","nodeType":"VariableDeclaration","scope":2846,"src":"29169:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:7"},"returnParameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2846,"src":"29207:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2722,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:7"},"scope":3014,"src":"29154:916:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2879,"nodeType":"Block","src":"30305:177:7","statements":[{"id":2878,"nodeType":"UncheckedBlock","src":"30315:161:7","statements":[{"assignments":[2858],"declarations":[{"constant":false,"id":2858,"mutability":"mutable","name":"result","nameLocation":"30347:6:7","nodeType":"VariableDeclaration","scope":2878,"src":"30339:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2862,"initialValue":{"arguments":[{"id":2860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"30362:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2859,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2846,2880],"referencedDeclaration":2846,"src":"30356:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2863,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"30389:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2867,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"30431:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}],"id":2866,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"30414:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"30450:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"30459:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2864,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"30398:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"30398:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2856,"id":2877,"nodeType":"Return","src":"30382:83:7"}]}]},"documentation":{"id":2847,"nodeType":"StructuredDocumentation","src":"30076:143:7","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2880,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:7","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"value","nameLocation":"30247:5:7","nodeType":"VariableDeclaration","scope":2880,"src":"30239:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2848,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:7","nodeType":"VariableDeclaration","scope":2880,"src":"30254:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"},"typeName":{"id":2851,"nodeType":"UserDefinedTypeName","pathNode":{"id":2850,"name":"Rounding","nameLocations":["30254:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1405,"src":"30254:8:7"},"referencedDeclaration":1405,"src":"30254:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:7"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2880,"src":"30296:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2854,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:7"},"scope":3014,"src":"30224:258:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2956,"nodeType":"Block","src":"30800:675:7","statements":[{"expression":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2888,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"30882:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"30902:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2889,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"30886:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"30886:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:7","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2898,"nodeType":"ExpressionStatement","src":"30882:64:7"},{"expression":{"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2899,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"31022:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2902,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"31044:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2903,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"31049:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2900,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"31027:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"31027:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:7","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2912,"nodeType":"ExpressionStatement","src":"31022:56:7"},{"expression":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2913,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"31153:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2916,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"31175:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2917,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"31180:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2914,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"31158:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"31158:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:7","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2926,"nodeType":"ExpressionStatement","src":"31153:48:7"},{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2927,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"31276:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2930,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"31298:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2931,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"31303:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2933,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:7","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2928,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"31281:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"31281:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2940,"nodeType":"ExpressionStatement","src":"31276:44:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"31426:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"31453:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2948,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"31458:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2945,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"31436:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"31436:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2887,"id":2955,"nodeType":"Return","src":"31418:50:7"}]},"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"30488:246:7","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2957,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:7","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"x","nameLocation":"30763:1:7","nodeType":"VariableDeclaration","scope":2957,"src":"30755:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:7"},"returnParameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"r","nameLocation":"30797:1:7","nodeType":"VariableDeclaration","scope":2957,"src":"30789:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:7"},"scope":3014,"src":"30739:736:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2993,"nodeType":"Block","src":"31712:184:7","statements":[{"id":2992,"nodeType":"UncheckedBlock","src":"31722:168:7","statements":[{"assignments":[2969],"declarations":[{"constant":false,"id":2969,"mutability":"mutable","name":"result","nameLocation":"31754:6:7","nodeType":"VariableDeclaration","scope":2992,"src":"31746:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2973,"initialValue":{"arguments":[{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"31770:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2970,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2957,2994],"referencedDeclaration":2957,"src":"31763:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2974,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"31797:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2978,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"31839:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}],"id":2977,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"31822:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"31858:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"31873:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2975,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"31806:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4779_$","typeString":"type(library SafeCast)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"31806:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2967,"id":2991,"nodeType":"Return","src":"31790:89:7"}]}]},"documentation":{"id":2958,"nodeType":"StructuredDocumentation","src":"31481:144:7","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2994,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:7","nodeType":"FunctionDefinition","parameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"value","nameLocation":"31654:5:7","nodeType":"VariableDeclaration","scope":2994,"src":"31646:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2963,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:7","nodeType":"VariableDeclaration","scope":2994,"src":"31661:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"},"typeName":{"id":2962,"nodeType":"UserDefinedTypeName","pathNode":{"id":2961,"name":"Rounding","nameLocations":["31661:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1405,"src":"31661:8:7"},"referencedDeclaration":1405,"src":"31661:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:7"},"returnParameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2994,"src":"31703:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:7"},"scope":3014,"src":"31630:266:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3012,"nodeType":"Block","src":"32094:48:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3005,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"32117:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3003,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:7","typeDescriptions":{}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3002,"id":3011,"nodeType":"Return","src":"32104:31:7"}]},"documentation":{"id":2995,"nodeType":"StructuredDocumentation","src":"31902:113:7","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3013,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:7","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:7","nodeType":"VariableDeclaration","scope":3013,"src":"32046:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"},"typeName":{"id":2997,"nodeType":"UserDefinedTypeName","pathNode":{"id":2996,"name":"Rounding","nameLocations":["32046:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1405,"src":"32046:8:7"},"referencedDeclaration":1405,"src":"32046:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:7"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3013,"src":"32088:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3000,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:7"},"scope":3014,"src":"32020:122:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3015,"src":"281:31863:7","usedErrors":[],"usedEvents":[]}],"src":"103:32042:7"},"id":7},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4779]},"id":4780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3016,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3017,"nodeType":"StructuredDocumentation","src":"218:550:8","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4779,"linearizedBaseContracts":[4779],"name":"SafeCast","nameLocation":"777:8:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"792:68:8","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":3024,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:8","nodeType":"ErrorDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"bits","nameLocation":"908:4:8","nodeType":"VariableDeclaration","scope":3024,"src":"902:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3019,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"value","nameLocation":"922:5:8","nodeType":"VariableDeclaration","scope":3024,"src":"914:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:8"},"src":"865:64:8"},{"documentation":{"id":3025,"nodeType":"StructuredDocumentation","src":"935:75:8","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":3029,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:8","nodeType":"ErrorDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"value","nameLocation":"1056:5:8","nodeType":"VariableDeclaration","scope":3029,"src":"1049:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3026,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:8"},"src":"1015:48:8"},{"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"1069:67:8","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":3036,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:8","nodeType":"ErrorDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"bits","nameLocation":"1183:4:8","nodeType":"VariableDeclaration","scope":3036,"src":"1177:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3031,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"value","nameLocation":"1196:5:8","nodeType":"VariableDeclaration","scope":3036,"src":"1189:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3033,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:8"},"src":"1141:62:8"},{"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"1209:75:8","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":3041,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:8","nodeType":"ErrorDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"value","nameLocation":"1331:5:8","nodeType":"VariableDeclaration","scope":3041,"src":"1323:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:8"},"src":"1289:49:8"},{"body":{"id":3068,"nodeType":"Block","src":"1695:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"1709:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3051,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3050,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:8","memberName":"max","nodeType":"MemberAccess","src":"1717:17:8","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3062,"nodeType":"IfStatement","src":"1705:105:8","trueBody":{"id":3061,"nodeType":"Block","src":"1736:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:8","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"1793:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3056,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"1757:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3060,"nodeType":"RevertStatement","src":"1750:49:8"}]}},{"expression":{"arguments":[{"id":3065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"1834:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3063,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:8","typeDescriptions":{}}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3048,"id":3067,"nodeType":"Return","src":"1819:21:8"}]},"documentation":{"id":3042,"nodeType":"StructuredDocumentation","src":"1344:280:8","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3069,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:8","nodeType":"FunctionDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"value","nameLocation":"1656:5:8","nodeType":"VariableDeclaration","scope":3069,"src":"1648:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:8"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3069,"src":"1686:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3046,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:8","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:8"},"scope":4779,"src":"1629:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3096,"nodeType":"Block","src":"2204:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"2218:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3079,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3078,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:8","memberName":"max","nodeType":"MemberAccess","src":"2226:17:8","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3090,"nodeType":"IfStatement","src":"2214:105:8","trueBody":{"id":3089,"nodeType":"Block","src":"2245:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:8","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"2302:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3084,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"2266:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3088,"nodeType":"RevertStatement","src":"2259:49:8"}]}},{"expression":{"arguments":[{"id":3093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"2343:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3091,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:8","typeDescriptions":{}}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3076,"id":3095,"nodeType":"Return","src":"2328:21:8"}]},"documentation":{"id":3070,"nodeType":"StructuredDocumentation","src":"1853:280:8","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3097,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:8","nodeType":"FunctionDefinition","parameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"value","nameLocation":"2165:5:8","nodeType":"VariableDeclaration","scope":3097,"src":"2157:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:8"},"returnParameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3097,"src":"2195:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3074,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:8","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:8"},"scope":4779,"src":"2138:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3124,"nodeType":"Block","src":"2713:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"2727:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3107,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3106,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:8","memberName":"max","nodeType":"MemberAccess","src":"2735:17:8","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3118,"nodeType":"IfStatement","src":"2723:105:8","trueBody":{"id":3117,"nodeType":"Block","src":"2754:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:8","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"2811:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3112,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"2775:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3116,"nodeType":"RevertStatement","src":"2768:49:8"}]}},{"expression":{"arguments":[{"id":3121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"2852:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3119,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:8","typeDescriptions":{}}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3104,"id":3123,"nodeType":"Return","src":"2837:21:8"}]},"documentation":{"id":3098,"nodeType":"StructuredDocumentation","src":"2362:280:8","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3125,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:8","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"value","nameLocation":"2674:5:8","nodeType":"VariableDeclaration","scope":3125,"src":"2666:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:8"},"returnParameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3125,"src":"2704:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3102,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:8","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:8"},"scope":4779,"src":"2647:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3152,"nodeType":"Block","src":"3222:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3236:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3135,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3134,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:8","memberName":"max","nodeType":"MemberAccess","src":"3244:17:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3146,"nodeType":"IfStatement","src":"3232:105:8","trueBody":{"id":3145,"nodeType":"Block","src":"3263:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:8","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3320:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3140,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"3284:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3144,"nodeType":"RevertStatement","src":"3277:49:8"}]}},{"expression":{"arguments":[{"id":3149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3361:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3147,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:8","typeDescriptions":{}}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3132,"id":3151,"nodeType":"Return","src":"3346:21:8"}]},"documentation":{"id":3126,"nodeType":"StructuredDocumentation","src":"2871:280:8","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3153,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:8","nodeType":"FunctionDefinition","parameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"value","nameLocation":"3183:5:8","nodeType":"VariableDeclaration","scope":3153,"src":"3175:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:8"},"returnParameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3153,"src":"3213:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3130,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:8"},"scope":4779,"src":"3156:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3180,"nodeType":"Block","src":"3731:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"3745:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3163,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3162,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:8","memberName":"max","nodeType":"MemberAccess","src":"3753:17:8","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3174,"nodeType":"IfStatement","src":"3741:105:8","trueBody":{"id":3173,"nodeType":"Block","src":"3772:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:8","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"3829:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3168,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"3793:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3172,"nodeType":"RevertStatement","src":"3786:49:8"}]}},{"expression":{"arguments":[{"id":3177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"3870:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3175,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:8","typeDescriptions":{}}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3160,"id":3179,"nodeType":"Return","src":"3855:21:8"}]},"documentation":{"id":3154,"nodeType":"StructuredDocumentation","src":"3380:280:8","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3181,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:8","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"value","nameLocation":"3692:5:8","nodeType":"VariableDeclaration","scope":3181,"src":"3684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:8"},"returnParameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3181,"src":"3722:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3158,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:8","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:8"},"scope":4779,"src":"3665:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3208,"nodeType":"Block","src":"4240:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"4254:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3191,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3190,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:8","memberName":"max","nodeType":"MemberAccess","src":"4262:17:8","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3202,"nodeType":"IfStatement","src":"4250:105:8","trueBody":{"id":3201,"nodeType":"Block","src":"4281:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"4338:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3196,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"4302:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3200,"nodeType":"RevertStatement","src":"4295:49:8"}]}},{"expression":{"arguments":[{"id":3205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"4379:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3203,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:8","typeDescriptions":{}}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3188,"id":3207,"nodeType":"Return","src":"4364:21:8"}]},"documentation":{"id":3182,"nodeType":"StructuredDocumentation","src":"3889:280:8","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:8","nodeType":"FunctionDefinition","parameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"value","nameLocation":"4201:5:8","nodeType":"VariableDeclaration","scope":3209,"src":"4193:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:8"},"returnParameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3209,"src":"4231:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3186,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:8","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:8"},"scope":4779,"src":"4174:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3236,"nodeType":"Block","src":"4749:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"4763:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3219,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3218,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:8","memberName":"max","nodeType":"MemberAccess","src":"4771:17:8","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3230,"nodeType":"IfStatement","src":"4759:105:8","trueBody":{"id":3229,"nodeType":"Block","src":"4790:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:8","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"4847:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3224,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"4811:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3228,"nodeType":"RevertStatement","src":"4804:49:8"}]}},{"expression":{"arguments":[{"id":3233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"4888:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3231,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:8","typeDescriptions":{}}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3216,"id":3235,"nodeType":"Return","src":"4873:21:8"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"4398:280:8","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3237,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:8","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"value","nameLocation":"4710:5:8","nodeType":"VariableDeclaration","scope":3237,"src":"4702:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:8"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3237,"src":"4740:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3214,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:8","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:8"},"scope":4779,"src":"4683:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3264,"nodeType":"Block","src":"5258:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"5272:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3247,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3246,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:8","memberName":"max","nodeType":"MemberAccess","src":"5280:17:8","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3258,"nodeType":"IfStatement","src":"5268:105:8","trueBody":{"id":3257,"nodeType":"Block","src":"5299:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:8","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"5356:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3252,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"5320:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3256,"nodeType":"RevertStatement","src":"5313:49:8"}]}},{"expression":{"arguments":[{"id":3261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"5397:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3259,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:8","typeDescriptions":{}}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3244,"id":3263,"nodeType":"Return","src":"5382:21:8"}]},"documentation":{"id":3238,"nodeType":"StructuredDocumentation","src":"4907:280:8","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:8","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"value","nameLocation":"5219:5:8","nodeType":"VariableDeclaration","scope":3265,"src":"5211:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3239,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:8"},"returnParameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"5249:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3242,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:8","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:8"},"scope":4779,"src":"5192:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3292,"nodeType":"Block","src":"5767:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"5781:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3275,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3274,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:8","memberName":"max","nodeType":"MemberAccess","src":"5789:17:8","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3286,"nodeType":"IfStatement","src":"5777:105:8","trueBody":{"id":3285,"nodeType":"Block","src":"5808:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:8","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"5865:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3280,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"5829:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3284,"nodeType":"RevertStatement","src":"5822:49:8"}]}},{"expression":{"arguments":[{"id":3289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"5906:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3287,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:8","typeDescriptions":{}}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3272,"id":3291,"nodeType":"Return","src":"5891:21:8"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"5416:280:8","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3293,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:8","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"value","nameLocation":"5728:5:8","nodeType":"VariableDeclaration","scope":3293,"src":"5720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:8"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3293,"src":"5758:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3270,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:8","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:8"},"scope":4779,"src":"5701:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3320,"nodeType":"Block","src":"6276:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6290:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3303,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:8","memberName":"max","nodeType":"MemberAccess","src":"6298:17:8","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3314,"nodeType":"IfStatement","src":"6286:105:8","trueBody":{"id":3313,"nodeType":"Block","src":"6317:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:8","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3308,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"6338:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3312,"nodeType":"RevertStatement","src":"6331:49:8"}]}},{"expression":{"arguments":[{"id":3317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6415:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3315,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:8","typeDescriptions":{}}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3300,"id":3319,"nodeType":"Return","src":"6400:21:8"}]},"documentation":{"id":3294,"nodeType":"StructuredDocumentation","src":"5925:280:8","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3321,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:8","nodeType":"FunctionDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"value","nameLocation":"6237:5:8","nodeType":"VariableDeclaration","scope":3321,"src":"6229:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:8"},"returnParameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3321,"src":"6267:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3298,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:8","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:8"},"scope":4779,"src":"6210:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3348,"nodeType":"Block","src":"6785:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"6799:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3331,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":3330,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:8","memberName":"max","nodeType":"MemberAccess","src":"6807:17:8","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3342,"nodeType":"IfStatement","src":"6795:105:8","trueBody":{"id":3341,"nodeType":"Block","src":"6826:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:8","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"6883:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3336,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"6847:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3340,"nodeType":"RevertStatement","src":"6840:49:8"}]}},{"expression":{"arguments":[{"id":3345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"6924:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3343,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":3328,"id":3347,"nodeType":"Return","src":"6909:21:8"}]},"documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"6434:280:8","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3349,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:8","nodeType":"FunctionDefinition","parameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"value","nameLocation":"6746:5:8","nodeType":"VariableDeclaration","scope":3349,"src":"6738:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:8"},"returnParameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3349,"src":"6776:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3326,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:8","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:8"},"scope":4779,"src":"6719:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3376,"nodeType":"Block","src":"7294:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7308:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3359,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3358,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:8","memberName":"max","nodeType":"MemberAccess","src":"7316:17:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3370,"nodeType":"IfStatement","src":"7304:105:8","trueBody":{"id":3369,"nodeType":"Block","src":"7335:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7392:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3364,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"7356:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3368,"nodeType":"RevertStatement","src":"7349:49:8"}]}},{"expression":{"arguments":[{"id":3373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7433:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3371,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:8","typeDescriptions":{}}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3356,"id":3375,"nodeType":"Return","src":"7418:21:8"}]},"documentation":{"id":3350,"nodeType":"StructuredDocumentation","src":"6943:280:8","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3377,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:8","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"value","nameLocation":"7255:5:8","nodeType":"VariableDeclaration","scope":3377,"src":"7247:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:8"},"returnParameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"7285:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3354,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:8"},"scope":4779,"src":"7228:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3404,"nodeType":"Block","src":"7803:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"7817:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3387,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3386,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:8","memberName":"max","nodeType":"MemberAccess","src":"7825:17:8","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3398,"nodeType":"IfStatement","src":"7813:105:8","trueBody":{"id":3397,"nodeType":"Block","src":"7844:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:8","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"7901:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3392,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"7865:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3396,"nodeType":"RevertStatement","src":"7858:49:8"}]}},{"expression":{"arguments":[{"id":3401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"7942:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3399,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:8","typeDescriptions":{}}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3384,"id":3403,"nodeType":"Return","src":"7927:21:8"}]},"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"7452:280:8","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3405,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:8","nodeType":"FunctionDefinition","parameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"value","nameLocation":"7764:5:8","nodeType":"VariableDeclaration","scope":3405,"src":"7756:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:8"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3405,"src":"7794:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3382,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:8","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:8"},"scope":4779,"src":"7737:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3432,"nodeType":"Block","src":"8312:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"8326:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3415,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3414,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:8","memberName":"max","nodeType":"MemberAccess","src":"8334:17:8","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3426,"nodeType":"IfStatement","src":"8322:105:8","trueBody":{"id":3425,"nodeType":"Block","src":"8353:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:8","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"8410:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3420,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"8374:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3424,"nodeType":"RevertStatement","src":"8367:49:8"}]}},{"expression":{"arguments":[{"id":3429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"8451:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3427,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:8","typeDescriptions":{}}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3412,"id":3431,"nodeType":"Return","src":"8436:21:8"}]},"documentation":{"id":3406,"nodeType":"StructuredDocumentation","src":"7961:280:8","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3433,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:8","nodeType":"FunctionDefinition","parameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"value","nameLocation":"8273:5:8","nodeType":"VariableDeclaration","scope":3433,"src":"8265:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3407,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:8"},"returnParameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3433,"src":"8303:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3410,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:8","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:8"},"scope":4779,"src":"8246:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3460,"nodeType":"Block","src":"8821:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"8835:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3443,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:8","memberName":"max","nodeType":"MemberAccess","src":"8843:17:8","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3454,"nodeType":"IfStatement","src":"8831:105:8","trueBody":{"id":3453,"nodeType":"Block","src":"8862:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:8","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"8919:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3448,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"8883:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3452,"nodeType":"RevertStatement","src":"8876:49:8"}]}},{"expression":{"arguments":[{"id":3457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"8960:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3455,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:8","typeDescriptions":{}}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3440,"id":3459,"nodeType":"Return","src":"8945:21:8"}]},"documentation":{"id":3434,"nodeType":"StructuredDocumentation","src":"8470:280:8","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3461,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:8","nodeType":"FunctionDefinition","parameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"value","nameLocation":"8782:5:8","nodeType":"VariableDeclaration","scope":3461,"src":"8774:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:8"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3461,"src":"8812:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3438,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:8","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:8"},"scope":4779,"src":"8755:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3488,"nodeType":"Block","src":"9330:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"9344:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3471,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3470,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:8","memberName":"max","nodeType":"MemberAccess","src":"9352:17:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3482,"nodeType":"IfStatement","src":"9340:105:8","trueBody":{"id":3481,"nodeType":"Block","src":"9371:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"9428:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3476,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"9392:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3480,"nodeType":"RevertStatement","src":"9385:49:8"}]}},{"expression":{"arguments":[{"id":3485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"9469:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3483,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:8","typeDescriptions":{}}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3468,"id":3487,"nodeType":"Return","src":"9454:21:8"}]},"documentation":{"id":3462,"nodeType":"StructuredDocumentation","src":"8979:280:8","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3489,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:8","nodeType":"FunctionDefinition","parameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"value","nameLocation":"9291:5:8","nodeType":"VariableDeclaration","scope":3489,"src":"9283:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:8"},"returnParameters":{"id":3468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3489,"src":"9321:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3466,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:8"},"scope":4779,"src":"9264:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3516,"nodeType":"Block","src":"9839:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"9853:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3499,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:8","memberName":"max","nodeType":"MemberAccess","src":"9861:17:8","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3510,"nodeType":"IfStatement","src":"9849:105:8","trueBody":{"id":3509,"nodeType":"Block","src":"9880:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:8","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"9937:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3504,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"9901:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3508,"nodeType":"RevertStatement","src":"9894:49:8"}]}},{"expression":{"arguments":[{"id":3513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"9978:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3511,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:8","typeDescriptions":{}}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3496,"id":3515,"nodeType":"Return","src":"9963:21:8"}]},"documentation":{"id":3490,"nodeType":"StructuredDocumentation","src":"9488:280:8","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:8","nodeType":"FunctionDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"value","nameLocation":"9800:5:8","nodeType":"VariableDeclaration","scope":3517,"src":"9792:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:8"},"returnParameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3517,"src":"9830:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3494,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:8","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:8"},"scope":4779,"src":"9773:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3544,"nodeType":"Block","src":"10348:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"10362:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3527,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:8","memberName":"max","nodeType":"MemberAccess","src":"10370:17:8","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3538,"nodeType":"IfStatement","src":"10358:105:8","trueBody":{"id":3537,"nodeType":"Block","src":"10389:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:8","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"10446:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3532,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"10410:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3536,"nodeType":"RevertStatement","src":"10403:49:8"}]}},{"expression":{"arguments":[{"id":3541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"10487:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3539,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:8","typeDescriptions":{}}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3524,"id":3543,"nodeType":"Return","src":"10472:21:8"}]},"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"9997:280:8","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3545,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:8","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"value","nameLocation":"10309:5:8","nodeType":"VariableDeclaration","scope":3545,"src":"10301:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:8"},"returnParameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3545,"src":"10339:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3522,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:8","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:8"},"scope":4779,"src":"10282:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3572,"nodeType":"Block","src":"10857:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"10871:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3555,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3554,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:8","memberName":"max","nodeType":"MemberAccess","src":"10879:17:8","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3566,"nodeType":"IfStatement","src":"10867:105:8","trueBody":{"id":3565,"nodeType":"Block","src":"10898:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:8","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"10955:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3560,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"10919:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3564,"nodeType":"RevertStatement","src":"10912:49:8"}]}},{"expression":{"arguments":[{"id":3569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"10996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3567,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:8","typeDescriptions":{}}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3552,"id":3571,"nodeType":"Return","src":"10981:21:8"}]},"documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"10506:280:8","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3573,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:8","nodeType":"FunctionDefinition","parameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"value","nameLocation":"10818:5:8","nodeType":"VariableDeclaration","scope":3573,"src":"10810:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:8"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3573,"src":"10848:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3550,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:8","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:8"},"scope":4779,"src":"10791:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3600,"nodeType":"Block","src":"11360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"11374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3583,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3582,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:8","memberName":"max","nodeType":"MemberAccess","src":"11382:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3594,"nodeType":"IfStatement","src":"11370:103:8","trueBody":{"id":3593,"nodeType":"Block","src":"11400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"11456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3588,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"11421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3592,"nodeType":"RevertStatement","src":"11414:48:8"}]}},{"expression":{"arguments":[{"id":3597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"11496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3595,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:8","typeDescriptions":{}}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3580,"id":3599,"nodeType":"Return","src":"11482:20:8"}]},"documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"11015:276:8","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3601,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"value","nameLocation":"11322:5:8","nodeType":"VariableDeclaration","scope":3601,"src":"11314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:8"},"returnParameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3601,"src":"11352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3578,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:8"},"scope":4779,"src":"11296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3628,"nodeType":"Block","src":"11860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"11874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3611,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3610,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:8","memberName":"max","nodeType":"MemberAccess","src":"11882:16:8","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3622,"nodeType":"IfStatement","src":"11870:103:8","trueBody":{"id":3621,"nodeType":"Block","src":"11900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"11956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3616,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"11921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3620,"nodeType":"RevertStatement","src":"11914:48:8"}]}},{"expression":{"arguments":[{"id":3625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"11996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3623,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:8","typeDescriptions":{}}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3608,"id":3627,"nodeType":"Return","src":"11982:20:8"}]},"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"11515:276:8","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3629,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"value","nameLocation":"11822:5:8","nodeType":"VariableDeclaration","scope":3629,"src":"11814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:8"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3629,"src":"11852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3606,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:8","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:8"},"scope":4779,"src":"11796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3656,"nodeType":"Block","src":"12360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"12374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3639,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3638,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:8","memberName":"max","nodeType":"MemberAccess","src":"12382:16:8","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3650,"nodeType":"IfStatement","src":"12370:103:8","trueBody":{"id":3649,"nodeType":"Block","src":"12400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"12456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3644,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"12421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3648,"nodeType":"RevertStatement","src":"12414:48:8"}]}},{"expression":{"arguments":[{"id":3653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"12496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3651,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:8","typeDescriptions":{}}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3636,"id":3655,"nodeType":"Return","src":"12482:20:8"}]},"documentation":{"id":3630,"nodeType":"StructuredDocumentation","src":"12015:276:8","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3657,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3632,"mutability":"mutable","name":"value","nameLocation":"12322:5:8","nodeType":"VariableDeclaration","scope":3657,"src":"12314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:8"},"returnParameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3657,"src":"12352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3634,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:8","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:8"},"scope":4779,"src":"12296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3684,"nodeType":"Block","src":"12860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"12874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3667,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3666,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:8","memberName":"max","nodeType":"MemberAccess","src":"12882:16:8","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3678,"nodeType":"IfStatement","src":"12870:103:8","trueBody":{"id":3677,"nodeType":"Block","src":"12900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"12956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3672,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"12921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3676,"nodeType":"RevertStatement","src":"12914:48:8"}]}},{"expression":{"arguments":[{"id":3681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"12996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3679,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:8","typeDescriptions":{}}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3664,"id":3683,"nodeType":"Return","src":"12982:20:8"}]},"documentation":{"id":3658,"nodeType":"StructuredDocumentation","src":"12515:276:8","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3685,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"value","nameLocation":"12822:5:8","nodeType":"VariableDeclaration","scope":3685,"src":"12814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:8"},"returnParameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3685,"src":"12852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3662,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:8","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:8"},"scope":4779,"src":"12796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3712,"nodeType":"Block","src":"13360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"13374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3695,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3694,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:8","memberName":"max","nodeType":"MemberAccess","src":"13382:16:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3706,"nodeType":"IfStatement","src":"13370:103:8","trueBody":{"id":3705,"nodeType":"Block","src":"13400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"13456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3700,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"13421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3704,"nodeType":"RevertStatement","src":"13414:48:8"}]}},{"expression":{"arguments":[{"id":3709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"13496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3707,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:8","typeDescriptions":{}}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3692,"id":3711,"nodeType":"Return","src":"13482:20:8"}]},"documentation":{"id":3686,"nodeType":"StructuredDocumentation","src":"13015:276:8","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3713,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"value","nameLocation":"13322:5:8","nodeType":"VariableDeclaration","scope":3713,"src":"13314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:8"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3713,"src":"13352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3690,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:8"},"scope":4779,"src":"13296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3740,"nodeType":"Block","src":"13860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"13874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3723,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3722,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:8","memberName":"max","nodeType":"MemberAccess","src":"13882:16:8","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3734,"nodeType":"IfStatement","src":"13870:103:8","trueBody":{"id":3733,"nodeType":"Block","src":"13900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"13956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3728,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"13921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3732,"nodeType":"RevertStatement","src":"13914:48:8"}]}},{"expression":{"arguments":[{"id":3737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"13996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3735,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:8","typeDescriptions":{}}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3720,"id":3739,"nodeType":"Return","src":"13982:20:8"}]},"documentation":{"id":3714,"nodeType":"StructuredDocumentation","src":"13515:276:8","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3716,"mutability":"mutable","name":"value","nameLocation":"13822:5:8","nodeType":"VariableDeclaration","scope":3741,"src":"13814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:8"},"returnParameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3741,"src":"13852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3718,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:8","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:8"},"scope":4779,"src":"13796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"14360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"14374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3751,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3750,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:8","memberName":"max","nodeType":"MemberAccess","src":"14382:16:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3762,"nodeType":"IfStatement","src":"14370:103:8","trueBody":{"id":3761,"nodeType":"Block","src":"14400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"14456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3756,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"14421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3760,"nodeType":"RevertStatement","src":"14414:48:8"}]}},{"expression":{"arguments":[{"id":3765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"14496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3763,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:8","typeDescriptions":{}}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3748,"id":3767,"nodeType":"Return","src":"14482:20:8"}]},"documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"14015:276:8","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"mutability":"mutable","name":"value","nameLocation":"14322:5:8","nodeType":"VariableDeclaration","scope":3769,"src":"14314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:8"},"returnParameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3769,"src":"14352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3746,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:8"},"scope":4779,"src":"14296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3796,"nodeType":"Block","src":"14860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"14874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3779,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":3778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:8","memberName":"max","nodeType":"MemberAccess","src":"14882:16:8","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3790,"nodeType":"IfStatement","src":"14870:103:8","trueBody":{"id":3789,"nodeType":"Block","src":"14900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"14956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3784,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"14921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3788,"nodeType":"RevertStatement","src":"14914:48:8"}]}},{"expression":{"arguments":[{"id":3793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"14996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3791,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:8","typeDescriptions":{}}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":3776,"id":3795,"nodeType":"Return","src":"14982:20:8"}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"14515:276:8","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3797,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"value","nameLocation":"14822:5:8","nodeType":"VariableDeclaration","scope":3797,"src":"14814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:8"},"returnParameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3797,"src":"14852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3774,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:8","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:8"},"scope":4779,"src":"14796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3824,"nodeType":"Block","src":"15360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"15374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3807,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3806,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:8","memberName":"max","nodeType":"MemberAccess","src":"15382:16:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3818,"nodeType":"IfStatement","src":"15370:103:8","trueBody":{"id":3817,"nodeType":"Block","src":"15400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"15456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3812,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"15421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3816,"nodeType":"RevertStatement","src":"15414:48:8"}]}},{"expression":{"arguments":[{"id":3821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"15496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3819,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:8","typeDescriptions":{}}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3804,"id":3823,"nodeType":"Return","src":"15482:20:8"}]},"documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"15015:276:8","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"value","nameLocation":"15322:5:8","nodeType":"VariableDeclaration","scope":3825,"src":"15314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:8"},"returnParameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3825,"src":"15352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3802,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:8"},"scope":4779,"src":"15296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3852,"nodeType":"Block","src":"15860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"15874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3835,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":3834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:8","memberName":"max","nodeType":"MemberAccess","src":"15882:16:8","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3846,"nodeType":"IfStatement","src":"15870:103:8","trueBody":{"id":3845,"nodeType":"Block","src":"15900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"15956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3840,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"15921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3844,"nodeType":"RevertStatement","src":"15914:48:8"}]}},{"expression":{"arguments":[{"id":3849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"15996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3847,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:8","typeDescriptions":{}}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":3832,"id":3851,"nodeType":"Return","src":"15982:20:8"}]},"documentation":{"id":3826,"nodeType":"StructuredDocumentation","src":"15515:276:8","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3853,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"value","nameLocation":"15822:5:8","nodeType":"VariableDeclaration","scope":3853,"src":"15814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:8"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3853,"src":"15852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3830,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:8","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:8"},"scope":4779,"src":"15796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3880,"nodeType":"Block","src":"16360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"16374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3863,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":3862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:8","memberName":"max","nodeType":"MemberAccess","src":"16382:16:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3874,"nodeType":"IfStatement","src":"16370:103:8","trueBody":{"id":3873,"nodeType":"Block","src":"16400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"16456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3868,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"16421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3872,"nodeType":"RevertStatement","src":"16414:48:8"}]}},{"expression":{"arguments":[{"id":3877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"16496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3875,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:8","typeDescriptions":{}}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3860,"id":3879,"nodeType":"Return","src":"16482:20:8"}]},"documentation":{"id":3854,"nodeType":"StructuredDocumentation","src":"16015:276:8","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3881,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"value","nameLocation":"16322:5:8","nodeType":"VariableDeclaration","scope":3881,"src":"16314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:8"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3881,"src":"16352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3858,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:8"},"scope":4779,"src":"16296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3908,"nodeType":"Block","src":"16854:146:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"16868:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3891,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:8","memberName":"max","nodeType":"MemberAccess","src":"16876:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3902,"nodeType":"IfStatement","src":"16864:101:8","trueBody":{"id":3901,"nodeType":"Block","src":"16893:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"16948:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3896,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"16914:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3900,"nodeType":"RevertStatement","src":"16907:47:8"}]}},{"expression":{"arguments":[{"id":3905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"16987:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3903,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:8","typeDescriptions":{}}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3888,"id":3907,"nodeType":"Return","src":"16974:19:8"}]},"documentation":{"id":3882,"nodeType":"StructuredDocumentation","src":"16515:272:8","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3909,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:8","nodeType":"FunctionDefinition","parameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"value","nameLocation":"16817:5:8","nodeType":"VariableDeclaration","scope":3909,"src":"16809:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:8"},"returnParameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3909,"src":"16847:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3886,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:8"},"scope":4779,"src":"16792:208:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3931,"nodeType":"Block","src":"17236:128:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"17250:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3925,"nodeType":"IfStatement","src":"17246:81:8","trueBody":{"id":3924,"nodeType":"Block","src":"17261:66:8","statements":[{"errorCall":{"arguments":[{"id":3921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"17310:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3920,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"17282:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3923,"nodeType":"RevertStatement","src":"17275:41:8"}]}},{"expression":{"arguments":[{"id":3928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"17351:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:8","typeDescriptions":{}}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3916,"id":3930,"nodeType":"Return","src":"17336:21:8"}]},"documentation":{"id":3910,"nodeType":"StructuredDocumentation","src":"17006:160:8","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":3932,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:8","nodeType":"FunctionDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"value","nameLocation":"17197:5:8","nodeType":"VariableDeclaration","scope":3932,"src":"17190:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3911,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:8"},"returnParameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3932,"src":"17227:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:8"},"scope":4779,"src":"17171:193:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3957,"nodeType":"Block","src":"17761:150:8","statements":[{"expression":{"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"17771:10:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"17791:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":3941,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:8","typeDescriptions":{}}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":3946,"nodeType":"ExpressionStatement","src":"17771:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"17811:10:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"17825:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3956,"nodeType":"IfStatement","src":"17807:98:8","trueBody":{"id":3955,"nodeType":"Block","src":"17832:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:8","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"17888:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3950,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"17853:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3954,"nodeType":"RevertStatement","src":"17846:48:8"}]}}]},"documentation":{"id":3933,"nodeType":"StructuredDocumentation","src":"17370:312:8","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:8","nodeType":"FunctionDefinition","parameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"value","nameLocation":"17712:5:8","nodeType":"VariableDeclaration","scope":3958,"src":"17705:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3934,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:8"},"returnParameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:8","nodeType":"VariableDeclaration","scope":3958,"src":"17742:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":3937,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:8"},"scope":4779,"src":"17687:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3983,"nodeType":"Block","src":"18308:150:8","statements":[{"expression":{"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3966,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"18318:10:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"18338:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":3967,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:8","typeDescriptions":{}}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":3972,"nodeType":"ExpressionStatement","src":"18318:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"18358:10:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"18372:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3982,"nodeType":"IfStatement","src":"18354:98:8","trueBody":{"id":3981,"nodeType":"Block","src":"18379:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:8","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"18435:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3976,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"18400:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3980,"nodeType":"RevertStatement","src":"18393:48:8"}]}}]},"documentation":{"id":3959,"nodeType":"StructuredDocumentation","src":"17917:312:8","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3984,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:8","nodeType":"FunctionDefinition","parameters":{"id":3962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"value","nameLocation":"18259:5:8","nodeType":"VariableDeclaration","scope":3984,"src":"18252:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3960,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:8"},"returnParameters":{"id":3965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3964,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:8","nodeType":"VariableDeclaration","scope":3984,"src":"18289:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":3963,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:8"},"scope":4779,"src":"18234:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4009,"nodeType":"Block","src":"18855:150:8","statements":[{"expression":{"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"18865:10:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"18885:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":3993,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:8","typeDescriptions":{}}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":3998,"nodeType":"ExpressionStatement","src":"18865:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3999,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"18905:10:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"18919:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4008,"nodeType":"IfStatement","src":"18901:98:8","trueBody":{"id":4007,"nodeType":"Block","src":"18926:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:8","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"18982:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4002,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"18947:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4006,"nodeType":"RevertStatement","src":"18940:48:8"}]}}]},"documentation":{"id":3985,"nodeType":"StructuredDocumentation","src":"18464:312:8","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4010,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:8","nodeType":"FunctionDefinition","parameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"value","nameLocation":"18806:5:8","nodeType":"VariableDeclaration","scope":4010,"src":"18799:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3986,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:8"},"returnParameters":{"id":3991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3990,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:8","nodeType":"VariableDeclaration","scope":4010,"src":"18836:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":3989,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:8"},"scope":4779,"src":"18781:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4035,"nodeType":"Block","src":"19402:150:8","statements":[{"expression":{"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19412:10:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"19432:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4019,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:8","typeDescriptions":{}}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4024,"nodeType":"ExpressionStatement","src":"19412:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19452:10:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"19466:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4034,"nodeType":"IfStatement","src":"19448:98:8","trueBody":{"id":4033,"nodeType":"Block","src":"19473:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:8","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"19529:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4028,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"19494:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4032,"nodeType":"RevertStatement","src":"19487:48:8"}]}}]},"documentation":{"id":4011,"nodeType":"StructuredDocumentation","src":"19011:312:8","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4036,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:8","nodeType":"FunctionDefinition","parameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"value","nameLocation":"19353:5:8","nodeType":"VariableDeclaration","scope":4036,"src":"19346:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4012,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:8"},"returnParameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:8","nodeType":"VariableDeclaration","scope":4036,"src":"19383:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4015,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:8"},"scope":4779,"src":"19328:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4061,"nodeType":"Block","src":"19949:150:8","statements":[{"expression":{"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4044,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"19959:10:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"19979:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4045,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:8","typeDescriptions":{}}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4050,"nodeType":"ExpressionStatement","src":"19959:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4051,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"19999:10:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"20013:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4060,"nodeType":"IfStatement","src":"19995:98:8","trueBody":{"id":4059,"nodeType":"Block","src":"20020:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:8","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"20076:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4054,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"20041:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4058,"nodeType":"RevertStatement","src":"20034:48:8"}]}}]},"documentation":{"id":4037,"nodeType":"StructuredDocumentation","src":"19558:312:8","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4062,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:8","nodeType":"FunctionDefinition","parameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4039,"mutability":"mutable","name":"value","nameLocation":"19900:5:8","nodeType":"VariableDeclaration","scope":4062,"src":"19893:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4038,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:8"},"returnParameters":{"id":4043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:8","nodeType":"VariableDeclaration","scope":4062,"src":"19930:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4041,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:8"},"scope":4779,"src":"19875:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4087,"nodeType":"Block","src":"20496:150:8","statements":[{"expression":{"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4070,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"20506:10:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"20526:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4071,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:8","typeDescriptions":{}}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4076,"nodeType":"ExpressionStatement","src":"20506:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"20546:10:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"20560:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4086,"nodeType":"IfStatement","src":"20542:98:8","trueBody":{"id":4085,"nodeType":"Block","src":"20567:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"20623:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4080,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"20588:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4084,"nodeType":"RevertStatement","src":"20581:48:8"}]}}]},"documentation":{"id":4063,"nodeType":"StructuredDocumentation","src":"20105:312:8","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4088,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:8","nodeType":"FunctionDefinition","parameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"mutability":"mutable","name":"value","nameLocation":"20447:5:8","nodeType":"VariableDeclaration","scope":4088,"src":"20440:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4064,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:8"},"returnParameters":{"id":4069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4068,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:8","nodeType":"VariableDeclaration","scope":4088,"src":"20477:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4067,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:8"},"scope":4779,"src":"20422:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4113,"nodeType":"Block","src":"21043:150:8","statements":[{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4096,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"21053:10:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"21073:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4097,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:8","typeDescriptions":{}}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4102,"nodeType":"ExpressionStatement","src":"21053:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"21093:10:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"21107:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4112,"nodeType":"IfStatement","src":"21089:98:8","trueBody":{"id":4111,"nodeType":"Block","src":"21114:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:8","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"21170:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4106,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"21135:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4110,"nodeType":"RevertStatement","src":"21128:48:8"}]}}]},"documentation":{"id":4089,"nodeType":"StructuredDocumentation","src":"20652:312:8","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4114,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:8","nodeType":"FunctionDefinition","parameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"value","nameLocation":"20994:5:8","nodeType":"VariableDeclaration","scope":4114,"src":"20987:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4090,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:8"},"returnParameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:8","nodeType":"VariableDeclaration","scope":4114,"src":"21024:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4093,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:8"},"scope":4779,"src":"20969:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4139,"nodeType":"Block","src":"21590:150:8","statements":[{"expression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4122,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"21600:10:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"21620:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4123,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:8","typeDescriptions":{}}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4128,"nodeType":"ExpressionStatement","src":"21600:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4129,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"21640:10:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"21654:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4138,"nodeType":"IfStatement","src":"21636:98:8","trueBody":{"id":4137,"nodeType":"Block","src":"21661:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:8","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"21717:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4132,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"21682:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4136,"nodeType":"RevertStatement","src":"21675:48:8"}]}}]},"documentation":{"id":4115,"nodeType":"StructuredDocumentation","src":"21199:312:8","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4140,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:8","nodeType":"FunctionDefinition","parameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"value","nameLocation":"21541:5:8","nodeType":"VariableDeclaration","scope":4140,"src":"21534:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4116,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:8"},"returnParameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:8","nodeType":"VariableDeclaration","scope":4140,"src":"21571:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4119,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:8"},"scope":4779,"src":"21516:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4165,"nodeType":"Block","src":"22137:150:8","statements":[{"expression":{"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4148,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"22147:10:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"22167:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4149,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:8","typeDescriptions":{}}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4154,"nodeType":"ExpressionStatement","src":"22147:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"22187:10:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"22201:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4164,"nodeType":"IfStatement","src":"22183:98:8","trueBody":{"id":4163,"nodeType":"Block","src":"22208:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:8","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"22264:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4158,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"22229:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4162,"nodeType":"RevertStatement","src":"22222:48:8"}]}}]},"documentation":{"id":4141,"nodeType":"StructuredDocumentation","src":"21746:312:8","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4166,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:8","nodeType":"FunctionDefinition","parameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"value","nameLocation":"22088:5:8","nodeType":"VariableDeclaration","scope":4166,"src":"22081:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4142,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:8"},"returnParameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:8","nodeType":"VariableDeclaration","scope":4166,"src":"22118:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4145,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:8"},"scope":4779,"src":"22063:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4191,"nodeType":"Block","src":"22684:150:8","statements":[{"expression":{"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"22694:10:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"22714:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4175,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:8","typeDescriptions":{}}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4180,"nodeType":"ExpressionStatement","src":"22694:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"22734:10:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"22748:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4190,"nodeType":"IfStatement","src":"22730:98:8","trueBody":{"id":4189,"nodeType":"Block","src":"22755:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:8","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"22811:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4184,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"22776:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4188,"nodeType":"RevertStatement","src":"22769:48:8"}]}}]},"documentation":{"id":4167,"nodeType":"StructuredDocumentation","src":"22293:312:8","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4192,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:8","nodeType":"FunctionDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"value","nameLocation":"22635:5:8","nodeType":"VariableDeclaration","scope":4192,"src":"22628:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4168,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:8"},"returnParameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:8","nodeType":"VariableDeclaration","scope":4192,"src":"22665:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4171,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:8"},"scope":4779,"src":"22610:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4217,"nodeType":"Block","src":"23231:150:8","statements":[{"expression":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4200,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"23241:10:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"23261:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4201,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:8","typeDescriptions":{}}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4206,"nodeType":"ExpressionStatement","src":"23241:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"23281:10:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"23295:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4216,"nodeType":"IfStatement","src":"23277:98:8","trueBody":{"id":4215,"nodeType":"Block","src":"23302:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:8","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"23358:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4210,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"23323:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4214,"nodeType":"RevertStatement","src":"23316:48:8"}]}}]},"documentation":{"id":4193,"nodeType":"StructuredDocumentation","src":"22840:312:8","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:8","nodeType":"FunctionDefinition","parameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"value","nameLocation":"23182:5:8","nodeType":"VariableDeclaration","scope":4218,"src":"23175:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4194,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:8"},"returnParameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:8","nodeType":"VariableDeclaration","scope":4218,"src":"23212:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4197,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:8"},"scope":4779,"src":"23157:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4243,"nodeType":"Block","src":"23778:150:8","statements":[{"expression":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4226,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"23788:10:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"23808:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4227,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:8","typeDescriptions":{}}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4232,"nodeType":"ExpressionStatement","src":"23788:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"23828:10:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"23842:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4242,"nodeType":"IfStatement","src":"23824:98:8","trueBody":{"id":4241,"nodeType":"Block","src":"23849:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"23905:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4236,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"23870:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4240,"nodeType":"RevertStatement","src":"23863:48:8"}]}}]},"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"23387:312:8","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:8","nodeType":"FunctionDefinition","parameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"value","nameLocation":"23729:5:8","nodeType":"VariableDeclaration","scope":4244,"src":"23722:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4220,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:8"},"returnParameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:8","nodeType":"VariableDeclaration","scope":4244,"src":"23759:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4223,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:8"},"scope":4779,"src":"23704:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4269,"nodeType":"Block","src":"24325:150:8","statements":[{"expression":{"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4252,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"24335:10:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"24355:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4253,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:8","typeDescriptions":{}}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4258,"nodeType":"ExpressionStatement","src":"24335:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"24375:10:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"24389:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4268,"nodeType":"IfStatement","src":"24371:98:8","trueBody":{"id":4267,"nodeType":"Block","src":"24396:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:8","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"24452:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4262,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"24417:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4266,"nodeType":"RevertStatement","src":"24410:48:8"}]}}]},"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"23934:312:8","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4270,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:8","nodeType":"FunctionDefinition","parameters":{"id":4248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"value","nameLocation":"24276:5:8","nodeType":"VariableDeclaration","scope":4270,"src":"24269:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4246,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:8"},"returnParameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:8","nodeType":"VariableDeclaration","scope":4270,"src":"24306:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4249,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:8"},"scope":4779,"src":"24251:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4295,"nodeType":"Block","src":"24872:150:8","statements":[{"expression":{"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4278,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"24882:10:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"24902:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4279,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:8","typeDescriptions":{}}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4284,"nodeType":"ExpressionStatement","src":"24882:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"24922:10:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"24936:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4294,"nodeType":"IfStatement","src":"24918:98:8","trueBody":{"id":4293,"nodeType":"Block","src":"24943:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:8","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"24999:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4288,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"24964:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4292,"nodeType":"RevertStatement","src":"24957:48:8"}]}}]},"documentation":{"id":4271,"nodeType":"StructuredDocumentation","src":"24481:312:8","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4296,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:8","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"value","nameLocation":"24823:5:8","nodeType":"VariableDeclaration","scope":4296,"src":"24816:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4272,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:8"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:8","nodeType":"VariableDeclaration","scope":4296,"src":"24853:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4275,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:8"},"scope":4779,"src":"24798:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4321,"nodeType":"Block","src":"25419:150:8","statements":[{"expression":{"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"25429:10:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"25449:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4305,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:8","typeDescriptions":{}}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4310,"nodeType":"ExpressionStatement","src":"25429:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"25469:10:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"25483:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4320,"nodeType":"IfStatement","src":"25465:98:8","trueBody":{"id":4319,"nodeType":"Block","src":"25490:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:8","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"25546:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4314,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"25511:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4318,"nodeType":"RevertStatement","src":"25504:48:8"}]}}]},"documentation":{"id":4297,"nodeType":"StructuredDocumentation","src":"25028:312:8","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4322,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:8","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"value","nameLocation":"25370:5:8","nodeType":"VariableDeclaration","scope":4322,"src":"25363:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4298,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:8"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:8","nodeType":"VariableDeclaration","scope":4322,"src":"25400:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4301,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:8"},"scope":4779,"src":"25345:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4347,"nodeType":"Block","src":"25966:150:8","statements":[{"expression":{"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4330,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"25976:10:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"25996:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4331,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:8","typeDescriptions":{}}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":4336,"nodeType":"ExpressionStatement","src":"25976:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"26016:10:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"26030:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4346,"nodeType":"IfStatement","src":"26012:98:8","trueBody":{"id":4345,"nodeType":"Block","src":"26037:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"26093:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4340,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"26058:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4344,"nodeType":"RevertStatement","src":"26051:48:8"}]}}]},"documentation":{"id":4323,"nodeType":"StructuredDocumentation","src":"25575:312:8","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:8","nodeType":"FunctionDefinition","parameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"value","nameLocation":"25917:5:8","nodeType":"VariableDeclaration","scope":4348,"src":"25910:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4324,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:8"},"returnParameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:8","nodeType":"VariableDeclaration","scope":4348,"src":"25947:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4327,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:8"},"scope":4779,"src":"25892:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4373,"nodeType":"Block","src":"26513:150:8","statements":[{"expression":{"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4356,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"26523:10:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"26543:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4357,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:8","typeDescriptions":{}}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4362,"nodeType":"ExpressionStatement","src":"26523:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"26563:10:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"26577:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4372,"nodeType":"IfStatement","src":"26559:98:8","trueBody":{"id":4371,"nodeType":"Block","src":"26584:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:8","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"26640:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4366,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"26605:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4370,"nodeType":"RevertStatement","src":"26598:48:8"}]}}]},"documentation":{"id":4349,"nodeType":"StructuredDocumentation","src":"26122:312:8","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4374,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:8","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"value","nameLocation":"26464:5:8","nodeType":"VariableDeclaration","scope":4374,"src":"26457:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4350,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:8"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:8","nodeType":"VariableDeclaration","scope":4374,"src":"26494:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4353,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:8"},"scope":4779,"src":"26439:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4399,"nodeType":"Block","src":"27060:150:8","statements":[{"expression":{"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4382,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"27070:10:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"27090:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4383,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:8","typeDescriptions":{}}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4388,"nodeType":"ExpressionStatement","src":"27070:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"27110:10:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"27124:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4398,"nodeType":"IfStatement","src":"27106:98:8","trueBody":{"id":4397,"nodeType":"Block","src":"27131:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:8","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"27187:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4392,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"27152:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4396,"nodeType":"RevertStatement","src":"27145:48:8"}]}}]},"documentation":{"id":4375,"nodeType":"StructuredDocumentation","src":"26669:312:8","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4400,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:8","nodeType":"FunctionDefinition","parameters":{"id":4378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"value","nameLocation":"27011:5:8","nodeType":"VariableDeclaration","scope":4400,"src":"27004:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4376,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:8"},"returnParameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4380,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:8","nodeType":"VariableDeclaration","scope":4400,"src":"27041:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4379,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:8"},"scope":4779,"src":"26986:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4425,"nodeType":"Block","src":"27607:150:8","statements":[{"expression":{"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4408,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"27617:10:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"27637:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4409,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:8","typeDescriptions":{}}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4414,"nodeType":"ExpressionStatement","src":"27617:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"27657:10:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"27671:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4424,"nodeType":"IfStatement","src":"27653:98:8","trueBody":{"id":4423,"nodeType":"Block","src":"27678:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:8","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"27734:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4418,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"27699:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4422,"nodeType":"RevertStatement","src":"27692:48:8"}]}}]},"documentation":{"id":4401,"nodeType":"StructuredDocumentation","src":"27216:312:8","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:8","nodeType":"FunctionDefinition","parameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4403,"mutability":"mutable","name":"value","nameLocation":"27558:5:8","nodeType":"VariableDeclaration","scope":4426,"src":"27551:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4402,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:8"},"returnParameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4406,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:8","nodeType":"VariableDeclaration","scope":4426,"src":"27588:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4405,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:8"},"scope":4779,"src":"27533:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4451,"nodeType":"Block","src":"28147:148:8","statements":[{"expression":{"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"28157:10:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"28176:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4435,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:8","typeDescriptions":{}}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4440,"nodeType":"ExpressionStatement","src":"28157:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"28196:10:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"28210:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4450,"nodeType":"IfStatement","src":"28192:97:8","trueBody":{"id":4449,"nodeType":"Block","src":"28217:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:8","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"28272:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4444,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"28238:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4448,"nodeType":"RevertStatement","src":"28231:47:8"}]}}]},"documentation":{"id":4427,"nodeType":"StructuredDocumentation","src":"27763:307:8","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4452,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:8","nodeType":"FunctionDefinition","parameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"value","nameLocation":"28099:5:8","nodeType":"VariableDeclaration","scope":4452,"src":"28092:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4428,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:8"},"returnParameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:8","nodeType":"VariableDeclaration","scope":4452,"src":"28129:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4431,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:8"},"scope":4779,"src":"28075:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4477,"nodeType":"Block","src":"28685:148:8","statements":[{"expression":{"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"28695:10:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"28714:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4461,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:8","typeDescriptions":{}}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4466,"nodeType":"ExpressionStatement","src":"28695:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"28734:10:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"28748:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4476,"nodeType":"IfStatement","src":"28730:97:8","trueBody":{"id":4475,"nodeType":"Block","src":"28755:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:8","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"28810:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4470,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"28776:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4474,"nodeType":"RevertStatement","src":"28769:47:8"}]}}]},"documentation":{"id":4453,"nodeType":"StructuredDocumentation","src":"28301:307:8","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4478,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:8","nodeType":"FunctionDefinition","parameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"value","nameLocation":"28637:5:8","nodeType":"VariableDeclaration","scope":4478,"src":"28630:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4454,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:8"},"returnParameters":{"id":4459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:8","nodeType":"VariableDeclaration","scope":4478,"src":"28667:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4457,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:8"},"scope":4779,"src":"28613:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4503,"nodeType":"Block","src":"29223:148:8","statements":[{"expression":{"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"29233:10:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"29252:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4487,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:8","typeDescriptions":{}}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4492,"nodeType":"ExpressionStatement","src":"29233:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"29272:10:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"29286:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4502,"nodeType":"IfStatement","src":"29268:97:8","trueBody":{"id":4501,"nodeType":"Block","src":"29293:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:8","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"29348:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4496,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"29314:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4500,"nodeType":"RevertStatement","src":"29307:47:8"}]}}]},"documentation":{"id":4479,"nodeType":"StructuredDocumentation","src":"28839:307:8","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4504,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:8","nodeType":"FunctionDefinition","parameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"value","nameLocation":"29175:5:8","nodeType":"VariableDeclaration","scope":4504,"src":"29168:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4480,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:8"},"returnParameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:8","nodeType":"VariableDeclaration","scope":4504,"src":"29205:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4483,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:8"},"scope":4779,"src":"29151:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4529,"nodeType":"Block","src":"29761:148:8","statements":[{"expression":{"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"29771:10:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"29790:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4513,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:8","typeDescriptions":{}}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4518,"nodeType":"ExpressionStatement","src":"29771:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"29810:10:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"29824:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4528,"nodeType":"IfStatement","src":"29806:97:8","trueBody":{"id":4527,"nodeType":"Block","src":"29831:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:8","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"29886:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4522,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"29852:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4526,"nodeType":"RevertStatement","src":"29845:47:8"}]}}]},"documentation":{"id":4505,"nodeType":"StructuredDocumentation","src":"29377:307:8","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4530,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:8","nodeType":"FunctionDefinition","parameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4507,"mutability":"mutable","name":"value","nameLocation":"29713:5:8","nodeType":"VariableDeclaration","scope":4530,"src":"29706:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4506,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:8"},"returnParameters":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4510,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:8","nodeType":"VariableDeclaration","scope":4530,"src":"29743:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4509,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:8"},"scope":4779,"src":"29689:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4555,"nodeType":"Block","src":"30299:148:8","statements":[{"expression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4538,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"30309:10:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"30328:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4539,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:8","typeDescriptions":{}}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4544,"nodeType":"ExpressionStatement","src":"30309:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"30348:10:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"30362:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4554,"nodeType":"IfStatement","src":"30344:97:8","trueBody":{"id":4553,"nodeType":"Block","src":"30369:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"30424:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4548,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"30390:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4552,"nodeType":"RevertStatement","src":"30383:47:8"}]}}]},"documentation":{"id":4531,"nodeType":"StructuredDocumentation","src":"29915:307:8","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:8","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"value","nameLocation":"30251:5:8","nodeType":"VariableDeclaration","scope":4556,"src":"30244:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4532,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:8"},"returnParameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:8","nodeType":"VariableDeclaration","scope":4556,"src":"30281:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4535,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:8"},"scope":4779,"src":"30227:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4581,"nodeType":"Block","src":"30837:148:8","statements":[{"expression":{"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"30847:10:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"30866:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4565,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:8","typeDescriptions":{}}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4570,"nodeType":"ExpressionStatement","src":"30847:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"30886:10:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"30900:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4580,"nodeType":"IfStatement","src":"30882:97:8","trueBody":{"id":4579,"nodeType":"Block","src":"30907:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:8","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"30962:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4574,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"30928:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4578,"nodeType":"RevertStatement","src":"30921:47:8"}]}}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"30453:307:8","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:8","nodeType":"FunctionDefinition","parameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"value","nameLocation":"30789:5:8","nodeType":"VariableDeclaration","scope":4582,"src":"30782:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4558,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:8"},"returnParameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:8","nodeType":"VariableDeclaration","scope":4582,"src":"30819:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4561,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:8"},"scope":4779,"src":"30765:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4607,"nodeType":"Block","src":"31375:148:8","statements":[{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"31385:10:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"31404:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4591,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:8","typeDescriptions":{}}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4596,"nodeType":"ExpressionStatement","src":"31385:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"31424:10:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"31438:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4606,"nodeType":"IfStatement","src":"31420:97:8","trueBody":{"id":4605,"nodeType":"Block","src":"31445:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"31500:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4600,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"31466:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4604,"nodeType":"RevertStatement","src":"31459:47:8"}]}}]},"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"30991:307:8","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:8","nodeType":"FunctionDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"value","nameLocation":"31327:5:8","nodeType":"VariableDeclaration","scope":4608,"src":"31320:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4584,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:8"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:8","nodeType":"VariableDeclaration","scope":4608,"src":"31357:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4587,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:8"},"scope":4779,"src":"31303:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4633,"nodeType":"Block","src":"31913:148:8","statements":[{"expression":{"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4616,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"31923:10:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"31942:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4617,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:8","typeDescriptions":{}}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4622,"nodeType":"ExpressionStatement","src":"31923:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"31962:10:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"31976:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4632,"nodeType":"IfStatement","src":"31958:97:8","trueBody":{"id":4631,"nodeType":"Block","src":"31983:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:8","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"32038:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4626,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"32004:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4630,"nodeType":"RevertStatement","src":"31997:47:8"}]}}]},"documentation":{"id":4609,"nodeType":"StructuredDocumentation","src":"31529:307:8","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4634,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:8","nodeType":"FunctionDefinition","parameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"value","nameLocation":"31865:5:8","nodeType":"VariableDeclaration","scope":4634,"src":"31858:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4610,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:8"},"returnParameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:8","nodeType":"VariableDeclaration","scope":4634,"src":"31895:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4613,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:8"},"scope":4779,"src":"31841:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4659,"nodeType":"Block","src":"32451:148:8","statements":[{"expression":{"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4642,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"32461:10:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"32480:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4643,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:8","typeDescriptions":{}}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4648,"nodeType":"ExpressionStatement","src":"32461:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4649,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"32500:10:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"32514:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4658,"nodeType":"IfStatement","src":"32496:97:8","trueBody":{"id":4657,"nodeType":"Block","src":"32521:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"32576:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4652,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"32542:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4656,"nodeType":"RevertStatement","src":"32535:47:8"}]}}]},"documentation":{"id":4635,"nodeType":"StructuredDocumentation","src":"32067:307:8","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4660,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:8","nodeType":"FunctionDefinition","parameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"value","nameLocation":"32403:5:8","nodeType":"VariableDeclaration","scope":4660,"src":"32396:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4636,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:8"},"returnParameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:8","nodeType":"VariableDeclaration","scope":4660,"src":"32433:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4639,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:8"},"scope":4779,"src":"32379:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4685,"nodeType":"Block","src":"32989:148:8","statements":[{"expression":{"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4668,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"32999:10:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"33018:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4669,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:8","typeDescriptions":{}}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4674,"nodeType":"ExpressionStatement","src":"32999:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"33038:10:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"33052:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4684,"nodeType":"IfStatement","src":"33034:97:8","trueBody":{"id":4683,"nodeType":"Block","src":"33059:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:8","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"33114:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4678,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"33080:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4682,"nodeType":"RevertStatement","src":"33073:47:8"}]}}]},"documentation":{"id":4661,"nodeType":"StructuredDocumentation","src":"32605:307:8","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4686,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:8","nodeType":"FunctionDefinition","parameters":{"id":4664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4663,"mutability":"mutable","name":"value","nameLocation":"32941:5:8","nodeType":"VariableDeclaration","scope":4686,"src":"32934:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4662,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:8"},"returnParameters":{"id":4667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4666,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:8","nodeType":"VariableDeclaration","scope":4686,"src":"32971:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4665,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:8"},"scope":4779,"src":"32917:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4711,"nodeType":"Block","src":"33527:148:8","statements":[{"expression":{"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4694,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"33537:10:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"33556:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4695,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:8","typeDescriptions":{}}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4700,"nodeType":"ExpressionStatement","src":"33537:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"33576:10:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"33590:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4710,"nodeType":"IfStatement","src":"33572:97:8","trueBody":{"id":4709,"nodeType":"Block","src":"33597:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"33652:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4704,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"33618:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4708,"nodeType":"RevertStatement","src":"33611:47:8"}]}}]},"documentation":{"id":4687,"nodeType":"StructuredDocumentation","src":"33143:307:8","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4712,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:8","nodeType":"FunctionDefinition","parameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"value","nameLocation":"33479:5:8","nodeType":"VariableDeclaration","scope":4712,"src":"33472:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4688,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:8"},"returnParameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:8","nodeType":"VariableDeclaration","scope":4712,"src":"33509:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4691,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:8"},"scope":4779,"src":"33455:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4737,"nodeType":"Block","src":"34058:146:8","statements":[{"expression":{"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4720,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"34068:10:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"34086:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4721,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:8","typeDescriptions":{}}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4726,"nodeType":"ExpressionStatement","src":"34068:24:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4727,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"34106:10:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"34120:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4736,"nodeType":"IfStatement","src":"34102:96:8","trueBody":{"id":4735,"nodeType":"Block","src":"34127:71:8","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"34181:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4730,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"34148:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4734,"nodeType":"RevertStatement","src":"34141:46:8"}]}}]},"documentation":{"id":4713,"nodeType":"StructuredDocumentation","src":"33681:302:8","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4738,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:8","nodeType":"FunctionDefinition","parameters":{"id":4716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4715,"mutability":"mutable","name":"value","nameLocation":"34011:5:8","nodeType":"VariableDeclaration","scope":4738,"src":"34004:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4714,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:8"},"returnParameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:8","nodeType":"VariableDeclaration","scope":4738,"src":"34041:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4717,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:8"},"scope":4779,"src":"33988:216:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4767,"nodeType":"Block","src":"34444:250:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"34557:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4750,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4749,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:8","memberName":"max","nodeType":"MemberAccess","src":"34573:16:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4747,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:8","typeDescriptions":{}}},"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4761,"nodeType":"IfStatement","src":"34553:105:8","trueBody":{"id":4760,"nodeType":"Block","src":"34592:66:8","statements":[{"errorCall":{"arguments":[{"id":4757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"34641:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4756,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"34613:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4759,"nodeType":"RevertStatement","src":"34606:41:8"}]}},{"expression":{"arguments":[{"id":4764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"34681:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4762,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:8","typeDescriptions":{}}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4745,"id":4766,"nodeType":"Return","src":"34667:20:8"}]},"documentation":{"id":4739,"nodeType":"StructuredDocumentation","src":"34210:165:8","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":4768,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:8","nodeType":"FunctionDefinition","parameters":{"id":4742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4741,"mutability":"mutable","name":"value","nameLocation":"34406:5:8","nodeType":"VariableDeclaration","scope":4768,"src":"34398:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4740,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:8"},"returnParameters":{"id":4745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4768,"src":"34436:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4743,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:8"},"scope":4779,"src":"34380:314:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4777,"nodeType":"Block","src":"34853:87:8","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:8","statements":[{"nodeType":"YulAssignment","src":"34902:22:8","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:8"},"nodeType":"YulFunctionCall","src":"34914:9:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:8"},"nodeType":"YulFunctionCall","src":"34907:17:8"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4771,"isOffset":false,"isSlot":false,"src":"34921:1:8","valueSize":1},{"declaration":4774,"isOffset":false,"isSlot":false,"src":"34902:1:8","valueSize":1}],"flags":["memory-safe"],"id":4776,"nodeType":"InlineAssembly","src":"34863:71:8"}]},"documentation":{"id":4769,"nodeType":"StructuredDocumentation","src":"34700:90:8","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":4778,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:8","nodeType":"FunctionDefinition","parameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"b","nameLocation":"34816:1:8","nodeType":"VariableDeclaration","scope":4778,"src":"34811:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4770,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:8"},"returnParameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"u","nameLocation":"34850:1:8","nodeType":"VariableDeclaration","scope":4778,"src":"34842:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4773,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:8"},"scope":4779,"src":"34795:145:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4780,"src":"769:34173:8","usedErrors":[3024,3029,3036,3041],"usedEvents":[]}],"src":"192:34751:8"},"id":8},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"Arrays":[1025],"EnumerableSet":[5476]},"id":5477,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4781,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../Arrays.sol","id":4783,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5477,"sourceUnit":1026,"src":"231:37:9","symbolAliases":[{"foreign":{"id":4782,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"239:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":4784,"nodeType":"StructuredDocumentation","src":"270:1154:9","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n - Set can be cleared (all elements removed) in O(n).\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":5476,"linearizedBaseContracts":[5476],"name":"EnumerableSet","nameLocation":"1433:13:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":4792,"members":[{"constant":false,"id":4787,"mutability":"mutable","name":"_values","nameLocation":"1957:7:9","nodeType":"VariableDeclaration","scope":4792,"src":"1947:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4786,"nodeType":"ArrayTypeName","src":"1947:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4791,"mutability":"mutable","name":"_positions","nameLocation":"2149:10:9","nodeType":"VariableDeclaration","scope":4792,"src":"2115:44:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":4790,"keyName":"value","keyNameLocation":"2131:5:9","keyType":{"id":4788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2123:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2115:33:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1900:3:9","nodeType":"StructDefinition","scope":5476,"src":"1893:273:9","visibility":"public"},{"body":{"id":4833,"nodeType":"Block","src":"2405:337:9","statements":[{"condition":{"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2419:22:9","subExpression":{"arguments":[{"id":4804,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"2430:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"2435:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4803,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"2420:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4831,"nodeType":"Block","src":"2699:37:9","statements":[{"expression":{"hexValue":"66616c7365","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2720:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4802,"id":4830,"nodeType":"Return","src":"2713:12:9"}]},"id":4832,"nodeType":"IfStatement","src":"2415:321:9","trueBody":{"id":4828,"nodeType":"Block","src":"2443:250:9","statements":[{"expression":{"arguments":[{"id":4813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"2474:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":4808,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"2457:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2461:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4787,"src":"2457:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2469:4:9","memberName":"push","nodeType":"MemberAccess","src":"2457:16:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2457:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4815,"nodeType":"ExpressionStatement","src":"2457:23:9"},{"expression":{"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4816,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"2615:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2619:10:9","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":4791,"src":"2615:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4820,"indexExpression":{"id":4818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"2630:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2615:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":4821,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"2639:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2643:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4787,"src":"2639:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2651:6:9","memberName":"length","nodeType":"MemberAccess","src":"2639:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2615:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4825,"nodeType":"ExpressionStatement","src":"2615:42:9"},{"expression":{"hexValue":"74727565","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2678:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4802,"id":4827,"nodeType":"Return","src":"2671:11:9"}]}}]},"documentation":{"id":4793,"nodeType":"StructuredDocumentation","src":"2172:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4834,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2345:4:9","nodeType":"FunctionDefinition","parameters":{"id":4799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4796,"mutability":"mutable","name":"set","nameLocation":"2362:3:9","nodeType":"VariableDeclaration","scope":4834,"src":"2350:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4795,"nodeType":"UserDefinedTypeName","pathNode":{"id":4794,"name":"Set","nameLocations":["2350:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":4792,"src":"2350:3:9"},"referencedDeclaration":4792,"src":"2350:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4798,"mutability":"mutable","name":"value","nameLocation":"2375:5:9","nodeType":"VariableDeclaration","scope":4834,"src":"2367:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2349:32:9"},"returnParameters":{"id":4802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4834,"src":"2399:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4800,"name":"bool","nodeType":"ElementaryTypeName","src":"2399:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:6:9"},"scope":5476,"src":"2336:406:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4917,"nodeType":"Block","src":"2982:1296:9","statements":[{"assignments":[4846],"declarations":[{"constant":false,"id":4846,"mutability":"mutable","name":"position","nameLocation":"3094:8:9","nodeType":"VariableDeclaration","scope":4917,"src":"3086:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4845,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4851,"initialValue":{"baseExpression":{"expression":{"id":4847,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"3105:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3109:10:9","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":4791,"src":"3105:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4850,"indexExpression":{"id":4849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"3120:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3105:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3086:40:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4852,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"3141:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3153:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3141:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4915,"nodeType":"Block","src":"4235:37:9","statements":[{"expression":{"hexValue":"66616c7365","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4256:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4844,"id":4914,"nodeType":"Return","src":"4249:12:9"}]},"id":4916,"nodeType":"IfStatement","src":"3137:1135:9","trueBody":{"id":4912,"nodeType":"Block","src":"3156:1073:9","statements":[{"assignments":[4856],"declarations":[{"constant":false,"id":4856,"mutability":"mutable","name":"valueIndex","nameLocation":"3516:10:9","nodeType":"VariableDeclaration","scope":4912,"src":"3508:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4855,"name":"uint256","nodeType":"ElementaryTypeName","src":"3508:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4860,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4857,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"3529:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3529:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3508:33:9"},{"assignments":[4862],"declarations":[{"constant":false,"id":4862,"mutability":"mutable","name":"lastIndex","nameLocation":"3563:9:9","nodeType":"VariableDeclaration","scope":4912,"src":"3555:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4861,"name":"uint256","nodeType":"ElementaryTypeName","src":"3555:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4868,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4863,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"3575:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3579:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4787,"src":"3575:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:9","memberName":"length","nodeType":"MemberAccess","src":"3575:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3596:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3575:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3555:42:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4869,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"3616:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4870,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"3630:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3616:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4896,"nodeType":"IfStatement","src":"3612:378:9","trueBody":{"id":4895,"nodeType":"Block","src":"3641:349:9","statements":[{"assignments":[4873],"declarations":[{"constant":false,"id":4873,"mutability":"mutable","name":"lastValue","nameLocation":"3667:9:9","nodeType":"VariableDeclaration","scope":4895,"src":"3659:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3659:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4878,"initialValue":{"baseExpression":{"expression":{"id":4874,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"3679:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3683:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4787,"src":"3679:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4877,"indexExpression":{"id":4876,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"3691:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3679:22:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3659:42:9"},{"expression":{"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4879,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"3800:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3804:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4787,"src":"3800:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4883,"indexExpression":{"id":4881,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"3812:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3800:23:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4884,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"3826:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3800:35:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4886,"nodeType":"ExpressionStatement","src":"3800:35:9"},{"expression":{"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4887,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"3939:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3943:10:9","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":4791,"src":"3939:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4891,"indexExpression":{"id":4889,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"3954:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3939:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4892,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"3967:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3939:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4894,"nodeType":"ExpressionStatement","src":"3939:36:9"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":4897,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"4068:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4072:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4787,"src":"4068:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4080:3:9","memberName":"pop","nodeType":"MemberAccess","src":"4068:15:9","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4068:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4903,"nodeType":"ExpressionStatement","src":"4068:17:9"},{"expression":{"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4164:28:9","subExpression":{"baseExpression":{"expression":{"id":4904,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"4171:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4175:10:9","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":4791,"src":"4171:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4907,"indexExpression":{"id":4906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"4186:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4171:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4909,"nodeType":"ExpressionStatement","src":"4164:28:9"},{"expression":{"hexValue":"74727565","id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4214:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4844,"id":4911,"nodeType":"Return","src":"4207:11:9"}]}}]},"documentation":{"id":4835,"nodeType":"StructuredDocumentation","src":"2748:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4918,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2919:7:9","nodeType":"FunctionDefinition","parameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4838,"mutability":"mutable","name":"set","nameLocation":"2939:3:9","nodeType":"VariableDeclaration","scope":4918,"src":"2927:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4837,"nodeType":"UserDefinedTypeName","pathNode":{"id":4836,"name":"Set","nameLocations":["2927:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":4792,"src":"2927:3:9"},"referencedDeclaration":4792,"src":"2927:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4840,"mutability":"mutable","name":"value","nameLocation":"2952:5:9","nodeType":"VariableDeclaration","scope":4918,"src":"2944:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2944:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2926:32:9"},"returnParameters":{"id":4844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4918,"src":"2976:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4842,"name":"bool","nodeType":"ElementaryTypeName","src":"2976:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2975:6:9"},"scope":5476,"src":"2910:1368:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4960,"nodeType":"Block","src":"4633:196:9","statements":[{"assignments":[4926],"declarations":[{"constant":false,"id":4926,"mutability":"mutable","name":"len","nameLocation":"4651:3:9","nodeType":"VariableDeclaration","scope":4960,"src":"4643:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4925,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4930,"initialValue":{"arguments":[{"id":4928,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"4665:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}],"id":4927,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"4657:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4657:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4643:26:9"},{"body":{"id":4950,"nodeType":"Block","src":"4713:62:9","statements":[{"expression":{"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4727:37:9","subExpression":{"baseExpression":{"expression":{"id":4941,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"4734:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4738:10:9","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":4791,"src":"4734:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4947,"indexExpression":{"baseExpression":{"expression":{"id":4943,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"4749:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4753:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4787,"src":"4749:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4946,"indexExpression":{"id":4945,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"4761:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4749:14:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4734:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4949,"nodeType":"ExpressionStatement","src":"4727:37:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"4699:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4936,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"4703:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4699:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4951,"initializationExpression":{"assignments":[4932],"declarations":[{"constant":false,"id":4932,"mutability":"mutable","name":"i","nameLocation":"4692:1:9","nodeType":"VariableDeclaration","scope":4951,"src":"4684:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4931,"name":"uint256","nodeType":"ElementaryTypeName","src":"4684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4934,"initialValue":{"hexValue":"30","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4696:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4684:13:9"},"loopExpression":{"expression":{"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4708:3:9","subExpression":{"id":4938,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"4710:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"nodeType":"ExpressionStatement","src":"4708:3:9"},"nodeType":"ForStatement","src":"4679:96:9"},{"expression":{"arguments":[{"expression":{"id":4955,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"4807:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4811:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4787,"src":"4807:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},{"hexValue":"30","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4820:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":4952,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"4784:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Arrays_$1025_$","typeString":"type(library Arrays)"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4791:15:9","memberName":"unsafeSetLength","nodeType":"MemberAccess","referencedDeclaration":1013,"src":"4784:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32[] storage pointer,uint256)"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4959,"nodeType":"ExpressionStatement","src":"4784:38:9"}]},"documentation":{"id":4919,"nodeType":"StructuredDocumentation","src":"4284:303:9","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":4961,"implemented":true,"kind":"function","modifiers":[],"name":"_clear","nameLocation":"4601:6:9","nodeType":"FunctionDefinition","parameters":{"id":4923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4922,"mutability":"mutable","name":"set","nameLocation":"4620:3:9","nodeType":"VariableDeclaration","scope":4961,"src":"4608:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4921,"nodeType":"UserDefinedTypeName","pathNode":{"id":4920,"name":"Set","nameLocations":["4608:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":4792,"src":"4608:3:9"},"referencedDeclaration":4792,"src":"4608:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4607:17:9"},"returnParameters":{"id":4924,"nodeType":"ParameterList","parameters":[],"src":"4633:0:9"},"scope":5476,"src":"4592:237:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4979,"nodeType":"Block","src":"4989:50:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4972,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"5006:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5010:10:9","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":4791,"src":"5006:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4975,"indexExpression":{"id":4974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"5021:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5006:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5031:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5006:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4971,"id":4978,"nodeType":"Return","src":"4999:33:9"}]},"documentation":{"id":4962,"nodeType":"StructuredDocumentation","src":"4835:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":4980,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4919:9:9","nodeType":"FunctionDefinition","parameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"set","nameLocation":"4941:3:9","nodeType":"VariableDeclaration","scope":4980,"src":"4929:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4964,"nodeType":"UserDefinedTypeName","pathNode":{"id":4963,"name":"Set","nameLocations":["4929:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":4792,"src":"4929:3:9"},"referencedDeclaration":4792,"src":"4929:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4967,"mutability":"mutable","name":"value","nameLocation":"4954:5:9","nodeType":"VariableDeclaration","scope":4980,"src":"4946:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4946:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4928:32:9"},"returnParameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4980,"src":"4983:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4969,"name":"bool","nodeType":"ElementaryTypeName","src":"4983:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4982:6:9"},"scope":5476,"src":"4910:129:9","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4993,"nodeType":"Block","src":"5185:42:9","statements":[{"expression":{"expression":{"expression":{"id":4989,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"5202:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5206:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4787,"src":"5202:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5214:6:9","memberName":"length","nodeType":"MemberAccess","src":"5202:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4988,"id":4992,"nodeType":"Return","src":"5195:25:9"}]},"documentation":{"id":4981,"nodeType":"StructuredDocumentation","src":"5045:70:9","text":" @dev Returns the number of values on the set. O(1)."},"id":4994,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"5129:7:9","nodeType":"FunctionDefinition","parameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"set","nameLocation":"5149:3:9","nodeType":"VariableDeclaration","scope":4994,"src":"5137:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4983,"nodeType":"UserDefinedTypeName","pathNode":{"id":4982,"name":"Set","nameLocations":["5137:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":4792,"src":"5137:3:9"},"referencedDeclaration":4792,"src":"5137:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5136:17:9"},"returnParameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4994,"src":"5176:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4986,"name":"uint256","nodeType":"ElementaryTypeName","src":"5176:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5175:9:9"},"scope":5476,"src":"5120:107:9","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5010,"nodeType":"Block","src":"5645:42:9","statements":[{"expression":{"baseExpression":{"expression":{"id":5005,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"5662:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5666:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4787,"src":"5662:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5008,"indexExpression":{"id":5007,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"5674:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5662:18:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5004,"id":5009,"nodeType":"Return","src":"5655:25:9"}]},"documentation":{"id":4995,"nodeType":"StructuredDocumentation","src":"5233:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5011,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"5578:3:9","nodeType":"FunctionDefinition","parameters":{"id":5001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"set","nameLocation":"5594:3:9","nodeType":"VariableDeclaration","scope":5011,"src":"5582:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4997,"nodeType":"UserDefinedTypeName","pathNode":{"id":4996,"name":"Set","nameLocations":["5582:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":4792,"src":"5582:3:9"},"referencedDeclaration":4792,"src":"5582:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":5000,"mutability":"mutable","name":"index","nameLocation":"5607:5:9","nodeType":"VariableDeclaration","scope":5011,"src":"5599:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4999,"name":"uint256","nodeType":"ElementaryTypeName","src":"5599:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5581:32:9"},"returnParameters":{"id":5004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5011,"src":"5636:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5636:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5635:9:9"},"scope":5476,"src":"5569:118:9","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5024,"nodeType":"Block","src":"6301:35:9","statements":[{"expression":{"expression":{"id":5021,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"6318:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6322:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4787,"src":"6318:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":5020,"id":5023,"nodeType":"Return","src":"6311:18:9"}]},"documentation":{"id":5012,"nodeType":"StructuredDocumentation","src":"5693:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5025,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"6236:7:9","nodeType":"FunctionDefinition","parameters":{"id":5016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5015,"mutability":"mutable","name":"set","nameLocation":"6256:3:9","nodeType":"VariableDeclaration","scope":5025,"src":"6244:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5014,"nodeType":"UserDefinedTypeName","pathNode":{"id":5013,"name":"Set","nameLocations":["6244:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":4792,"src":"6244:3:9"},"referencedDeclaration":4792,"src":"6244:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"6243:17:9"},"returnParameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5025,"src":"6283:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6283:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5018,"nodeType":"ArrayTypeName","src":"6283:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6282:18:9"},"scope":5476,"src":"6227:109:9","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":5029,"members":[{"constant":false,"id":5028,"mutability":"mutable","name":"_inner","nameLocation":"6393:6:9","nodeType":"VariableDeclaration","scope":5029,"src":"6389:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5027,"nodeType":"UserDefinedTypeName","pathNode":{"id":5026,"name":"Set","nameLocations":["6389:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":4792,"src":"6389:3:9"},"referencedDeclaration":4792,"src":"6389:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"6368:10:9","nodeType":"StructDefinition","scope":5476,"src":"6361:45:9","visibility":"public"},{"body":{"id":5046,"nodeType":"Block","src":"6652:47:9","statements":[{"expression":{"arguments":[{"expression":{"id":5041,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"6674:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6678:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"6674:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"6686:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5040,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"6669:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4792_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6669:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5039,"id":5045,"nodeType":"Return","src":"6662:30:9"}]},"documentation":{"id":5030,"nodeType":"StructuredDocumentation","src":"6412:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5047,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6585:3:9","nodeType":"FunctionDefinition","parameters":{"id":5036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5033,"mutability":"mutable","name":"set","nameLocation":"6608:3:9","nodeType":"VariableDeclaration","scope":5047,"src":"6589:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5032,"nodeType":"UserDefinedTypeName","pathNode":{"id":5031,"name":"Bytes32Set","nameLocations":["6589:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5029,"src":"6589:10:9"},"referencedDeclaration":5029,"src":"6589:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5035,"mutability":"mutable","name":"value","nameLocation":"6621:5:9","nodeType":"VariableDeclaration","scope":5047,"src":"6613:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6613:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6588:39:9"},"returnParameters":{"id":5039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5047,"src":"6646:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5037,"name":"bool","nodeType":"ElementaryTypeName","src":"6646:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6645:6:9"},"scope":5476,"src":"6576:123:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5064,"nodeType":"Block","src":"6946:50:9","statements":[{"expression":{"arguments":[{"expression":{"id":5059,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"6971:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6975:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"6971:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"6983:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5058,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"6963:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4792_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6963:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5057,"id":5063,"nodeType":"Return","src":"6956:33:9"}]},"documentation":{"id":5048,"nodeType":"StructuredDocumentation","src":"6705:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5065,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6876:6:9","nodeType":"FunctionDefinition","parameters":{"id":5054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"set","nameLocation":"6902:3:9","nodeType":"VariableDeclaration","scope":5065,"src":"6883:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5050,"nodeType":"UserDefinedTypeName","pathNode":{"id":5049,"name":"Bytes32Set","nameLocations":["6883:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5029,"src":"6883:10:9"},"referencedDeclaration":5029,"src":"6883:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5053,"mutability":"mutable","name":"value","nameLocation":"6915:5:9","nodeType":"VariableDeclaration","scope":5065,"src":"6907:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6907:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6882:39:9"},"returnParameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5065,"src":"6940:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5055,"name":"bool","nodeType":"ElementaryTypeName","src":"6940:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6939:6:9"},"scope":5476,"src":"6867:129:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5077,"nodeType":"Block","src":"7358:35:9","statements":[{"expression":{"arguments":[{"expression":{"id":5073,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"7375:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7379:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"7375:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5072,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"7368:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4792_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7368:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5076,"nodeType":"ExpressionStatement","src":"7368:18:9"}]},"documentation":{"id":5066,"nodeType":"StructuredDocumentation","src":"7002:303:9","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":5078,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"7319:5:9","nodeType":"FunctionDefinition","parameters":{"id":5070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5069,"mutability":"mutable","name":"set","nameLocation":"7344:3:9","nodeType":"VariableDeclaration","scope":5078,"src":"7325:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5068,"nodeType":"UserDefinedTypeName","pathNode":{"id":5067,"name":"Bytes32Set","nameLocations":["7325:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5029,"src":"7325:10:9"},"referencedDeclaration":5029,"src":"7325:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7324:24:9"},"returnParameters":{"id":5071,"nodeType":"ParameterList","parameters":[],"src":"7358:0:9"},"scope":5476,"src":"7310:83:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5095,"nodeType":"Block","src":"7560:52:9","statements":[{"expression":{"arguments":[{"expression":{"id":5090,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"7587:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7591:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"7587:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"7599:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5089,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"7577:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7577:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5088,"id":5094,"nodeType":"Return","src":"7570:35:9"}]},"documentation":{"id":5079,"nodeType":"StructuredDocumentation","src":"7399:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":5096,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"7483:8:9","nodeType":"FunctionDefinition","parameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"set","nameLocation":"7511:3:9","nodeType":"VariableDeclaration","scope":5096,"src":"7492:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5081,"nodeType":"UserDefinedTypeName","pathNode":{"id":5080,"name":"Bytes32Set","nameLocations":["7492:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5029,"src":"7492:10:9"},"referencedDeclaration":5029,"src":"7492:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5084,"mutability":"mutable","name":"value","nameLocation":"7524:5:9","nodeType":"VariableDeclaration","scope":5096,"src":"7516:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7516:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7491:39:9"},"returnParameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5096,"src":"7554:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5086,"name":"bool","nodeType":"ElementaryTypeName","src":"7554:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7553:6:9"},"scope":5476,"src":"7474:138:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5110,"nodeType":"Block","src":"7765:43:9","statements":[{"expression":{"arguments":[{"expression":{"id":5106,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"7790:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7794:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"7790:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5105,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"7782:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7782:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5104,"id":5109,"nodeType":"Return","src":"7775:26:9"}]},"documentation":{"id":5097,"nodeType":"StructuredDocumentation","src":"7618:70:9","text":" @dev Returns the number of values in the set. O(1)."},"id":5111,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"7702:6:9","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"set","nameLocation":"7728:3:9","nodeType":"VariableDeclaration","scope":5111,"src":"7709:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5099,"nodeType":"UserDefinedTypeName","pathNode":{"id":5098,"name":"Bytes32Set","nameLocations":["7709:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5029,"src":"7709:10:9"},"referencedDeclaration":5029,"src":"7709:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7708:24:9"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5111,"src":"7756:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5102,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:9:9"},"scope":5476,"src":"7693:115:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5128,"nodeType":"Block","src":"8233:46:9","statements":[{"expression":{"arguments":[{"expression":{"id":5123,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"8254:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8258:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"8254:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5125,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"8266:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5122,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"8250:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8250:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5121,"id":5127,"nodeType":"Return","src":"8243:29:9"}]},"documentation":{"id":5112,"nodeType":"StructuredDocumentation","src":"7814:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5129,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"8159:2:9","nodeType":"FunctionDefinition","parameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5115,"mutability":"mutable","name":"set","nameLocation":"8181:3:9","nodeType":"VariableDeclaration","scope":5129,"src":"8162:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5114,"nodeType":"UserDefinedTypeName","pathNode":{"id":5113,"name":"Bytes32Set","nameLocations":["8162:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5029,"src":"8162:10:9"},"referencedDeclaration":5029,"src":"8162:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5117,"mutability":"mutable","name":"index","nameLocation":"8194:5:9","nodeType":"VariableDeclaration","scope":5129,"src":"8186:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5116,"name":"uint256","nodeType":"ElementaryTypeName","src":"8186:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8161:39:9"},"returnParameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5129,"src":"8224:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8224:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8223:9:9"},"scope":5476,"src":"8150:129:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5158,"nodeType":"Block","src":"8900:192:9","statements":[{"assignments":[5143],"declarations":[{"constant":false,"id":5143,"mutability":"mutable","name":"store","nameLocation":"8927:5:9","nodeType":"VariableDeclaration","scope":5158,"src":"8910:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8910:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5142,"nodeType":"ArrayTypeName","src":"8910:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5148,"initialValue":{"arguments":[{"expression":{"id":5145,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"8943:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8947:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"8943:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5144,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"8935:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8935:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8910:44:9"},{"assignments":[5153],"declarations":[{"constant":false,"id":5153,"mutability":"mutable","name":"result","nameLocation":"8981:6:9","nodeType":"VariableDeclaration","scope":5158,"src":"8964:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8964:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5152,"nodeType":"ArrayTypeName","src":"8964:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5154,"nodeType":"VariableDeclarationStatement","src":"8964:23:9"},{"AST":{"nodeType":"YulBlock","src":"9023:39:9","statements":[{"nodeType":"YulAssignment","src":"9037:15:9","value":{"name":"store","nodeType":"YulIdentifier","src":"9047:5:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9037:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5153,"isOffset":false,"isSlot":false,"src":"9037:6:9","valueSize":1},{"declaration":5143,"isOffset":false,"isSlot":false,"src":"9047:5:9","valueSize":1}],"flags":["memory-safe"],"id":5155,"nodeType":"InlineAssembly","src":"8998:64:9"},{"expression":{"id":5156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"9079:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":5138,"id":5157,"nodeType":"Return","src":"9072:13:9"}]},"documentation":{"id":5130,"nodeType":"StructuredDocumentation","src":"8285:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5159,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"8828:6:9","nodeType":"FunctionDefinition","parameters":{"id":5134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"set","nameLocation":"8854:3:9","nodeType":"VariableDeclaration","scope":5159,"src":"8835:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5132,"nodeType":"UserDefinedTypeName","pathNode":{"id":5131,"name":"Bytes32Set","nameLocations":["8835:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5029,"src":"8835:10:9"},"referencedDeclaration":5029,"src":"8835:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5029_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"8834:24:9"},"returnParameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5159,"src":"8882:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8882:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5136,"nodeType":"ArrayTypeName","src":"8882:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"8881:18:9"},"scope":5476,"src":"8819:273:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":5163,"members":[{"constant":false,"id":5162,"mutability":"mutable","name":"_inner","nameLocation":"9149:6:9","nodeType":"VariableDeclaration","scope":5163,"src":"9145:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5161,"nodeType":"UserDefinedTypeName","pathNode":{"id":5160,"name":"Set","nameLocations":["9145:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":4792,"src":"9145:3:9"},"referencedDeclaration":4792,"src":"9145:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"9124:10:9","nodeType":"StructDefinition","scope":5476,"src":"9117:45:9","visibility":"public"},{"body":{"id":5189,"nodeType":"Block","src":"9408:74:9","statements":[{"expression":{"arguments":[{"expression":{"id":5175,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"9430:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9434:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5162,"src":"9430:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"9466:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9458:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5181,"name":"uint160","nodeType":"ElementaryTypeName","src":"9458:7:9","typeDescriptions":{}}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9458:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9450:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5179,"name":"uint256","nodeType":"ElementaryTypeName","src":"9450:7:9","typeDescriptions":{}}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9442:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9442:7:9","typeDescriptions":{}}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9442:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5174,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"9425:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4792_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9425:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5173,"id":5188,"nodeType":"Return","src":"9418:57:9"}]},"documentation":{"id":5164,"nodeType":"StructuredDocumentation","src":"9168:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5190,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"9341:3:9","nodeType":"FunctionDefinition","parameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5167,"mutability":"mutable","name":"set","nameLocation":"9364:3:9","nodeType":"VariableDeclaration","scope":5190,"src":"9345:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5166,"nodeType":"UserDefinedTypeName","pathNode":{"id":5165,"name":"AddressSet","nameLocations":["9345:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"9345:10:9"},"referencedDeclaration":5163,"src":"9345:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5169,"mutability":"mutable","name":"value","nameLocation":"9377:5:9","nodeType":"VariableDeclaration","scope":5190,"src":"9369:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5168,"name":"address","nodeType":"ElementaryTypeName","src":"9369:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9344:39:9"},"returnParameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5190,"src":"9402:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5171,"name":"bool","nodeType":"ElementaryTypeName","src":"9402:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9401:6:9"},"scope":5476,"src":"9332:150:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5216,"nodeType":"Block","src":"9729:77:9","statements":[{"expression":{"arguments":[{"expression":{"id":5202,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"9754:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9758:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5162,"src":"9754:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"9790:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9782:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5208,"name":"uint160","nodeType":"ElementaryTypeName","src":"9782:7:9","typeDescriptions":{}}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9782:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9774:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5206,"name":"uint256","nodeType":"ElementaryTypeName","src":"9774:7:9","typeDescriptions":{}}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9774:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9766:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9766:7:9","typeDescriptions":{}}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9766:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5201,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"9746:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4792_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9746:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5200,"id":5215,"nodeType":"Return","src":"9739:60:9"}]},"documentation":{"id":5191,"nodeType":"StructuredDocumentation","src":"9488:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5217,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"9659:6:9","nodeType":"FunctionDefinition","parameters":{"id":5197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"set","nameLocation":"9685:3:9","nodeType":"VariableDeclaration","scope":5217,"src":"9666:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5193,"nodeType":"UserDefinedTypeName","pathNode":{"id":5192,"name":"AddressSet","nameLocations":["9666:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"9666:10:9"},"referencedDeclaration":5163,"src":"9666:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5196,"mutability":"mutable","name":"value","nameLocation":"9698:5:9","nodeType":"VariableDeclaration","scope":5217,"src":"9690:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5195,"name":"address","nodeType":"ElementaryTypeName","src":"9690:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9665:39:9"},"returnParameters":{"id":5200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5217,"src":"9723:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5198,"name":"bool","nodeType":"ElementaryTypeName","src":"9723:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9722:6:9"},"scope":5476,"src":"9650:156:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5229,"nodeType":"Block","src":"10168:35:9","statements":[{"expression":{"arguments":[{"expression":{"id":5225,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"10185:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10189:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5162,"src":"10185:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5224,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"10178:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4792_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10178:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5228,"nodeType":"ExpressionStatement","src":"10178:18:9"}]},"documentation":{"id":5218,"nodeType":"StructuredDocumentation","src":"9812:303:9","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":5230,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"10129:5:9","nodeType":"FunctionDefinition","parameters":{"id":5222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5221,"mutability":"mutable","name":"set","nameLocation":"10154:3:9","nodeType":"VariableDeclaration","scope":5230,"src":"10135:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5220,"nodeType":"UserDefinedTypeName","pathNode":{"id":5219,"name":"AddressSet","nameLocations":["10135:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"10135:10:9"},"referencedDeclaration":5163,"src":"10135:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10134:24:9"},"returnParameters":{"id":5223,"nodeType":"ParameterList","parameters":[],"src":"10168:0:9"},"scope":5476,"src":"10120:83:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5256,"nodeType":"Block","src":"10370:79:9","statements":[{"expression":{"arguments":[{"expression":{"id":5242,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"10397:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10401:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5162,"src":"10397:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"10433:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10425:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5248,"name":"uint160","nodeType":"ElementaryTypeName","src":"10425:7:9","typeDescriptions":{}}},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10425:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10417:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"10417:7:9","typeDescriptions":{}}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10417:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10409:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10409:7:9","typeDescriptions":{}}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10409:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5241,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"10387:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10387:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5240,"id":5255,"nodeType":"Return","src":"10380:62:9"}]},"documentation":{"id":5231,"nodeType":"StructuredDocumentation","src":"10209:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":5257,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"10293:8:9","nodeType":"FunctionDefinition","parameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"set","nameLocation":"10321:3:9","nodeType":"VariableDeclaration","scope":5257,"src":"10302:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5233,"nodeType":"UserDefinedTypeName","pathNode":{"id":5232,"name":"AddressSet","nameLocations":["10302:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"10302:10:9"},"referencedDeclaration":5163,"src":"10302:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5236,"mutability":"mutable","name":"value","nameLocation":"10334:5:9","nodeType":"VariableDeclaration","scope":5257,"src":"10326:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5235,"name":"address","nodeType":"ElementaryTypeName","src":"10326:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10301:39:9"},"returnParameters":{"id":5240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5257,"src":"10364:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5238,"name":"bool","nodeType":"ElementaryTypeName","src":"10364:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10363:6:9"},"scope":5476,"src":"10284:165:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5271,"nodeType":"Block","src":"10602:43:9","statements":[{"expression":{"arguments":[{"expression":{"id":5267,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"10627:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10631:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5162,"src":"10627:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5266,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"10619:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10619:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5265,"id":5270,"nodeType":"Return","src":"10612:26:9"}]},"documentation":{"id":5258,"nodeType":"StructuredDocumentation","src":"10455:70:9","text":" @dev Returns the number of values in the set. O(1)."},"id":5272,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"10539:6:9","nodeType":"FunctionDefinition","parameters":{"id":5262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5261,"mutability":"mutable","name":"set","nameLocation":"10565:3:9","nodeType":"VariableDeclaration","scope":5272,"src":"10546:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5260,"nodeType":"UserDefinedTypeName","pathNode":{"id":5259,"name":"AddressSet","nameLocations":["10546:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"10546:10:9"},"referencedDeclaration":5163,"src":"10546:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10545:24:9"},"returnParameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5272,"src":"10593:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"10593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10592:9:9"},"scope":5476,"src":"10530:115:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5298,"nodeType":"Block","src":"11070:73:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":5290,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"11115:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11119:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5162,"src":"11115:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5292,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"11127:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5289,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"11111:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11111:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11103:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5287,"name":"uint256","nodeType":"ElementaryTypeName","src":"11103:7:9","typeDescriptions":{}}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11103:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11095:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5285,"name":"uint160","nodeType":"ElementaryTypeName","src":"11095:7:9","typeDescriptions":{}}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11095:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11087:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5283,"name":"address","nodeType":"ElementaryTypeName","src":"11087:7:9","typeDescriptions":{}}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11087:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5282,"id":5297,"nodeType":"Return","src":"11080:56:9"}]},"documentation":{"id":5273,"nodeType":"StructuredDocumentation","src":"10651:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5299,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"10996:2:9","nodeType":"FunctionDefinition","parameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5276,"mutability":"mutable","name":"set","nameLocation":"11018:3:9","nodeType":"VariableDeclaration","scope":5299,"src":"10999:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5275,"nodeType":"UserDefinedTypeName","pathNode":{"id":5274,"name":"AddressSet","nameLocations":["10999:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"10999:10:9"},"referencedDeclaration":5163,"src":"10999:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5278,"mutability":"mutable","name":"index","nameLocation":"11031:5:9","nodeType":"VariableDeclaration","scope":5299,"src":"11023:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5277,"name":"uint256","nodeType":"ElementaryTypeName","src":"11023:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10998:39:9"},"returnParameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5299,"src":"11061:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5280,"name":"address","nodeType":"ElementaryTypeName","src":"11061:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11060:9:9"},"scope":5476,"src":"10987:156:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5328,"nodeType":"Block","src":"11764:192:9","statements":[{"assignments":[5313],"declarations":[{"constant":false,"id":5313,"mutability":"mutable","name":"store","nameLocation":"11791:5:9","nodeType":"VariableDeclaration","scope":5328,"src":"11774:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11774:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5312,"nodeType":"ArrayTypeName","src":"11774:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5318,"initialValue":{"arguments":[{"expression":{"id":5315,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"11807:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11811:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5162,"src":"11807:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5314,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"11799:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11799:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11774:44:9"},{"assignments":[5323],"declarations":[{"constant":false,"id":5323,"mutability":"mutable","name":"result","nameLocation":"11845:6:9","nodeType":"VariableDeclaration","scope":5328,"src":"11828:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5321,"name":"address","nodeType":"ElementaryTypeName","src":"11828:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5322,"nodeType":"ArrayTypeName","src":"11828:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5324,"nodeType":"VariableDeclarationStatement","src":"11828:23:9"},{"AST":{"nodeType":"YulBlock","src":"11887:39:9","statements":[{"nodeType":"YulAssignment","src":"11901:15:9","value":{"name":"store","nodeType":"YulIdentifier","src":"11911:5:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11901:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5323,"isOffset":false,"isSlot":false,"src":"11901:6:9","valueSize":1},{"declaration":5313,"isOffset":false,"isSlot":false,"src":"11911:5:9","valueSize":1}],"flags":["memory-safe"],"id":5325,"nodeType":"InlineAssembly","src":"11862:64:9"},{"expression":{"id":5326,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"11943:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5308,"id":5327,"nodeType":"Return","src":"11936:13:9"}]},"documentation":{"id":5300,"nodeType":"StructuredDocumentation","src":"11149:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5329,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"11692:6:9","nodeType":"FunctionDefinition","parameters":{"id":5304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5303,"mutability":"mutable","name":"set","nameLocation":"11718:3:9","nodeType":"VariableDeclaration","scope":5329,"src":"11699:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5302,"nodeType":"UserDefinedTypeName","pathNode":{"id":5301,"name":"AddressSet","nameLocations":["11699:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"11699:10:9"},"referencedDeclaration":5163,"src":"11699:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"11698:24:9"},"returnParameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5329,"src":"11746:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5305,"name":"address","nodeType":"ElementaryTypeName","src":"11746:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5306,"nodeType":"ArrayTypeName","src":"11746:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11745:18:9"},"scope":5476,"src":"11683:273:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":5333,"members":[{"constant":false,"id":5332,"mutability":"mutable","name":"_inner","nameLocation":"12007:6:9","nodeType":"VariableDeclaration","scope":5333,"src":"12003:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5331,"nodeType":"UserDefinedTypeName","pathNode":{"id":5330,"name":"Set","nameLocations":["12003:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":4792,"src":"12003:3:9"},"referencedDeclaration":4792,"src":"12003:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"11985:7:9","nodeType":"StructDefinition","scope":5476,"src":"11978:42:9","visibility":"public"},{"body":{"id":5353,"nodeType":"Block","src":"12263:56:9","statements":[{"expression":{"arguments":[{"expression":{"id":5345,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"12285:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12289:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"12285:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12305:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12297:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12297:7:9","typeDescriptions":{}}},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12297:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5344,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"12280:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4792_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12280:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5343,"id":5352,"nodeType":"Return","src":"12273:39:9"}]},"documentation":{"id":5334,"nodeType":"StructuredDocumentation","src":"12026:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5354,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"12199:3:9","nodeType":"FunctionDefinition","parameters":{"id":5340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"set","nameLocation":"12219:3:9","nodeType":"VariableDeclaration","scope":5354,"src":"12203:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5336,"nodeType":"UserDefinedTypeName","pathNode":{"id":5335,"name":"UintSet","nameLocations":["12203:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"12203:7:9"},"referencedDeclaration":5333,"src":"12203:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5339,"mutability":"mutable","name":"value","nameLocation":"12232:5:9","nodeType":"VariableDeclaration","scope":5354,"src":"12224:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5338,"name":"uint256","nodeType":"ElementaryTypeName","src":"12224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12202:36:9"},"returnParameters":{"id":5343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5354,"src":"12257:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5341,"name":"bool","nodeType":"ElementaryTypeName","src":"12257:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12256:6:9"},"scope":5476,"src":"12190:129:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5374,"nodeType":"Block","src":"12563:59:9","statements":[{"expression":{"arguments":[{"expression":{"id":5366,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"12588:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12592:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"12588:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"12608:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12600:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12600:7:9","typeDescriptions":{}}},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12600:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5365,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"12580:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4792_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12580:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5364,"id":5373,"nodeType":"Return","src":"12573:42:9"}]},"documentation":{"id":5355,"nodeType":"StructuredDocumentation","src":"12325:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5375,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"12496:6:9","nodeType":"FunctionDefinition","parameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"mutability":"mutable","name":"set","nameLocation":"12519:3:9","nodeType":"VariableDeclaration","scope":5375,"src":"12503:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5357,"nodeType":"UserDefinedTypeName","pathNode":{"id":5356,"name":"UintSet","nameLocations":["12503:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"12503:7:9"},"referencedDeclaration":5333,"src":"12503:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5360,"mutability":"mutable","name":"value","nameLocation":"12532:5:9","nodeType":"VariableDeclaration","scope":5375,"src":"12524:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5359,"name":"uint256","nodeType":"ElementaryTypeName","src":"12524:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12502:36:9"},"returnParameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5375,"src":"12557:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5362,"name":"bool","nodeType":"ElementaryTypeName","src":"12557:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12556:6:9"},"scope":5476,"src":"12487:135:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5387,"nodeType":"Block","src":"12981:35:9","statements":[{"expression":{"arguments":[{"expression":{"id":5383,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"12998:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13002:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"12998:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5382,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"12991:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4792_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12991:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5386,"nodeType":"ExpressionStatement","src":"12991:18:9"}]},"documentation":{"id":5376,"nodeType":"StructuredDocumentation","src":"12628:303:9","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":5388,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"12945:5:9","nodeType":"FunctionDefinition","parameters":{"id":5380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5379,"mutability":"mutable","name":"set","nameLocation":"12967:3:9","nodeType":"VariableDeclaration","scope":5388,"src":"12951:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5378,"nodeType":"UserDefinedTypeName","pathNode":{"id":5377,"name":"UintSet","nameLocations":["12951:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"12951:7:9"},"referencedDeclaration":5333,"src":"12951:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12950:21:9"},"returnParameters":{"id":5381,"nodeType":"ParameterList","parameters":[],"src":"12981:0:9"},"scope":5476,"src":"12936:80:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5408,"nodeType":"Block","src":"13180:61:9","statements":[{"expression":{"arguments":[{"expression":{"id":5400,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"13207:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13211:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"13207:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"13227:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13219:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13219:7:9","typeDescriptions":{}}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13219:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5399,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"13197:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13197:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5398,"id":5407,"nodeType":"Return","src":"13190:44:9"}]},"documentation":{"id":5389,"nodeType":"StructuredDocumentation","src":"13022:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":5409,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"13106:8:9","nodeType":"FunctionDefinition","parameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"set","nameLocation":"13131:3:9","nodeType":"VariableDeclaration","scope":5409,"src":"13115:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5391,"nodeType":"UserDefinedTypeName","pathNode":{"id":5390,"name":"UintSet","nameLocations":["13115:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"13115:7:9"},"referencedDeclaration":5333,"src":"13115:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5394,"mutability":"mutable","name":"value","nameLocation":"13144:5:9","nodeType":"VariableDeclaration","scope":5409,"src":"13136:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5393,"name":"uint256","nodeType":"ElementaryTypeName","src":"13136:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13114:36:9"},"returnParameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5409,"src":"13174:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5396,"name":"bool","nodeType":"ElementaryTypeName","src":"13174:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13173:6:9"},"scope":5476,"src":"13097:144:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5423,"nodeType":"Block","src":"13391:43:9","statements":[{"expression":{"arguments":[{"expression":{"id":5419,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"13416:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13420:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"13416:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5418,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"13408:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13408:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5417,"id":5422,"nodeType":"Return","src":"13401:26:9"}]},"documentation":{"id":5410,"nodeType":"StructuredDocumentation","src":"13247:70:9","text":" @dev Returns the number of values in the set. O(1)."},"id":5424,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"13331:6:9","nodeType":"FunctionDefinition","parameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"set","nameLocation":"13354:3:9","nodeType":"VariableDeclaration","scope":5424,"src":"13338:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5412,"nodeType":"UserDefinedTypeName","pathNode":{"id":5411,"name":"UintSet","nameLocations":["13338:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"13338:7:9"},"referencedDeclaration":5333,"src":"13338:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"13337:21:9"},"returnParameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5424,"src":"13382:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5415,"name":"uint256","nodeType":"ElementaryTypeName","src":"13382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13381:9:9"},"scope":5476,"src":"13322:112:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5444,"nodeType":"Block","src":"13856:55:9","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5438,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"13885:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13889:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"13885:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5440,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"13897:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5437,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"13881:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13881:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13873:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"13873:7:9","typeDescriptions":{}}},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13873:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5434,"id":5443,"nodeType":"Return","src":"13866:38:9"}]},"documentation":{"id":5425,"nodeType":"StructuredDocumentation","src":"13440:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5445,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"13785:2:9","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5428,"mutability":"mutable","name":"set","nameLocation":"13804:3:9","nodeType":"VariableDeclaration","scope":5445,"src":"13788:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5427,"nodeType":"UserDefinedTypeName","pathNode":{"id":5426,"name":"UintSet","nameLocations":["13788:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"13788:7:9"},"referencedDeclaration":5333,"src":"13788:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5430,"mutability":"mutable","name":"index","nameLocation":"13817:5:9","nodeType":"VariableDeclaration","scope":5445,"src":"13809:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5429,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13787:36:9"},"returnParameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5445,"src":"13847:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5432,"name":"uint256","nodeType":"ElementaryTypeName","src":"13847:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13846:9:9"},"scope":5476,"src":"13776:135:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5474,"nodeType":"Block","src":"14529:192:9","statements":[{"assignments":[5459],"declarations":[{"constant":false,"id":5459,"mutability":"mutable","name":"store","nameLocation":"14556:5:9","nodeType":"VariableDeclaration","scope":5474,"src":"14539:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14539:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5458,"nodeType":"ArrayTypeName","src":"14539:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5464,"initialValue":{"arguments":[{"expression":{"id":5461,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"14572:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14576:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"14572:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4792_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5460,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"14564:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4792_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14564:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14539:44:9"},{"assignments":[5469],"declarations":[{"constant":false,"id":5469,"mutability":"mutable","name":"result","nameLocation":"14610:6:9","nodeType":"VariableDeclaration","scope":5474,"src":"14593:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5467,"name":"uint256","nodeType":"ElementaryTypeName","src":"14593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5468,"nodeType":"ArrayTypeName","src":"14593:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5470,"nodeType":"VariableDeclarationStatement","src":"14593:23:9"},{"AST":{"nodeType":"YulBlock","src":"14652:39:9","statements":[{"nodeType":"YulAssignment","src":"14666:15:9","value":{"name":"store","nodeType":"YulIdentifier","src":"14676:5:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14666:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5469,"isOffset":false,"isSlot":false,"src":"14666:6:9","valueSize":1},{"declaration":5459,"isOffset":false,"isSlot":false,"src":"14676:5:9","valueSize":1}],"flags":["memory-safe"],"id":5471,"nodeType":"InlineAssembly","src":"14627:64:9"},{"expression":{"id":5472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"14708:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5454,"id":5473,"nodeType":"Return","src":"14701:13:9"}]},"documentation":{"id":5446,"nodeType":"StructuredDocumentation","src":"13917:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5475,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"14460:6:9","nodeType":"FunctionDefinition","parameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"set","nameLocation":"14483:3:9","nodeType":"VariableDeclaration","scope":5475,"src":"14467:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5448,"nodeType":"UserDefinedTypeName","pathNode":{"id":5447,"name":"UintSet","nameLocations":["14467:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"14467:7:9"},"referencedDeclaration":5333,"src":"14467:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5333_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"14466:21:9"},"returnParameters":{"id":5454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5475,"src":"14511:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5451,"name":"uint256","nodeType":"ElementaryTypeName","src":"14511:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5452,"nodeType":"ArrayTypeName","src":"14511:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14510:18:9"},"scope":5476,"src":"14451:270:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5477,"src":"1425:13298:9","usedErrors":[],"usedEvents":[]}],"src":"205:14519:9"},"id":9},"contracts/BaselineRevocation.sol":{"ast":{"absolutePath":"contracts/BaselineRevocation.sol","exportedSymbols":{"BaselineRevocation":[5545]},"id":5546,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5478,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"BaselineRevocation","contractDependencies":[],"contractKind":"contract","documentation":{"id":5479,"nodeType":"StructuredDocumentation","src":"57:360:10","text":" @title BaselineRevocation\n @dev A simple, baseline smart contract for managing certificate revocations.\n This contract uses a basic mapping to store the revocation status of each certificate.\n It serves as a performance and cost baseline to compare against more advanced\n revocation mechanisms (e.g., those using cryptographic accumulators)."},"fullyImplemented":true,"id":5545,"linearizedBaseContracts":[5545],"name":"BaselineRevocation","nameLocation":"427:18:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"328a93e8","id":5483,"mutability":"mutable","name":"revoked","nameLocation":"595:7:10","nodeType":"VariableDeclaration","scope":5545,"src":"563:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":5482,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"563:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5481,"name":"bool","nodeType":"ElementaryTypeName","src":"582:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":5485,"mutability":"mutable","name":"owner","nameLocation":"624:5:10","nodeType":"VariableDeclaration","scope":5545,"src":"609:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5484,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"44d80a438cb4fa3b5aedbe551ce3d9382e37f446917b783e1dee70a03b4180e3","id":5489,"name":"CertificateRevoked","nameLocation":"642:18:10","nodeType":"EventDefinition","parameters":{"id":5488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5487,"indexed":true,"mutability":"mutable","name":"certificateId","nameLocation":"677:13:10","nodeType":"VariableDeclaration","scope":5489,"src":"661:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"661:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"660:31:10"},"src":"636:56:10"},{"body":{"id":5497,"nodeType":"Block","src":"712:35:10","statements":[{"expression":{"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5492,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"722:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5493,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"730:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"734:6:10","memberName":"sender","nodeType":"MemberAccess","src":"730:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"722:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5496,"nodeType":"ExpressionStatement","src":"722:18:10"}]},"id":5498,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5490,"nodeType":"ParameterList","parameters":[],"src":"709:2:10"},"returnParameters":{"id":5491,"nodeType":"ParameterList","parameters":[],"src":"712:0:10"},"scope":5545,"src":"698:49:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5530,"nodeType":"Block","src":"994:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5505,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1012:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1016:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1012:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5507,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"1026:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1012:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e65722063616e207265766f6b652e","id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1033:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_73f276245a77e6291f007724166ec1dcf4d592bff3fd8511b9d22e22264f6f52","typeString":"literal_string \"Only owner can revoke.\""},"value":"Only owner can revoke."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73f276245a77e6291f007724166ec1dcf4d592bff3fd8511b9d22e22264f6f52","typeString":"literal_string \"Only owner can revoke.\""}],"id":5504,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1004:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1004:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5511,"nodeType":"ExpressionStatement","src":"1004:54:10"},{"expression":{"arguments":[{"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1076:23:10","subExpression":{"baseExpression":{"id":5513,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"1077:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5515,"indexExpression":{"id":5514,"name":"certificateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"1085:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1077:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436572746966696361746520616c7265616479207265766f6b65642e","id":5517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1101:30:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51e7a8fd6fb93ea64e262e93e68802ea8ad5f22ca4bb448b32e95248a4bcc3b2","typeString":"literal_string \"Certificate already revoked.\""},"value":"Certificate already revoked."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51e7a8fd6fb93ea64e262e93e68802ea8ad5f22ca4bb448b32e95248a4bcc3b2","typeString":"literal_string \"Certificate already revoked.\""}],"id":5512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1068:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1068:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5519,"nodeType":"ExpressionStatement","src":"1068:64:10"},{"expression":{"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5520,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"1151:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5522,"indexExpression":{"id":5521,"name":"certificateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"1159:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1151:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1176:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1151:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5525,"nodeType":"ExpressionStatement","src":"1151:29:10"},{"eventCall":{"arguments":[{"id":5527,"name":"certificateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"1214:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5526,"name":"CertificateRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"1195:18:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5529,"nodeType":"EmitStatement","src":"1190:38:10"}]},"documentation":{"id":5499,"nodeType":"StructuredDocumentation","src":"753:188:10","text":" @dev Revokes a certificate.\n Only the owner of the contract can call this function.\n @param certificateId The unique identifier of the certificate to revoke."},"functionSelector":"b75c7dc6","id":5531,"implemented":true,"kind":"function","modifiers":[],"name":"revoke","nameLocation":"955:6:10","nodeType":"FunctionDefinition","parameters":{"id":5502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5501,"mutability":"mutable","name":"certificateId","nameLocation":"970:13:10","nodeType":"VariableDeclaration","scope":5531,"src":"962:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"962:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"961:23:10"},"returnParameters":{"id":5503,"nodeType":"ParameterList","parameters":[],"src":"994:0:10"},"scope":5545,"src":"946:289:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5543,"nodeType":"Block","src":"1536:46:10","statements":[{"expression":{"baseExpression":{"id":5539,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"1553:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5541,"indexExpression":{"id":5540,"name":"certificateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"1561:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1553:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5538,"id":5542,"nodeType":"Return","src":"1546:29:10"}]},"documentation":{"id":5532,"nodeType":"StructuredDocumentation","src":"1241:219:10","text":" @dev Checks if a certificate is revoked.\n @param certificateId The unique identifier of the certificate to check.\n @return bool Returns true if the certificate is revoked, false otherwise."},"functionSelector":"4294857f","id":5544,"implemented":true,"kind":"function","modifiers":[],"name":"isRevoked","nameLocation":"1474:9:10","nodeType":"FunctionDefinition","parameters":{"id":5535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5534,"mutability":"mutable","name":"certificateId","nameLocation":"1492:13:10","nodeType":"VariableDeclaration","scope":5544,"src":"1484:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1484:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1483:23:10"},"returnParameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5544,"src":"1530:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5536,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1529:6:10"},"scope":5545,"src":"1465:117:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5546,"src":"418:1166:10","usedErrors":[],"usedEvents":[5489]}],"src":"32:1553:10"},"id":10},"contracts/Certificate.sol":{"ast":{"absolutePath":"contracts/Certificate.sol","exportedSymbols":{"Arrays":[1025],"Certificate":[5825],"Context":[1087],"EnumerableSet":[5476],"Ownable":[147]},"id":5826,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5547,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:11"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5826,"sourceUnit":148,"src":"58:52:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":5549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5826,"sourceUnit":5477,"src":"111:65:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5551,"name":"Ownable","nameLocations":["514:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"514:7:11"},"id":5552,"nodeType":"InheritanceSpecifier","src":"514:7:11"}],"canonicalName":"Certificate","contractDependencies":[],"contractKind":"contract","documentation":{"id":5550,"nodeType":"StructuredDocumentation","src":"178:311:11","text":" @title Certificate\n @dev This contract manages the lifecycle of academic certificates using a hybrid storage model.\n It stores a hash of the certificate data on-chain, while the full data is stored off-chain (e.g., IPFS).\n This approach significantly reduces gas costs and improves scalability."},"fullyImplemented":true,"id":5825,"linearizedBaseContracts":[5825,147,1087],"name":"Certificate","nameLocation":"499:11:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5556,"libraryName":{"id":5553,"name":"EnumerableSet","nameLocations":["534:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":5476,"src":"534:13:11"},"nodeType":"UsingForDirective","src":"528:49:11","typeName":{"id":5555,"nodeType":"UserDefinedTypeName","pathNode":{"id":5554,"name":"EnumerableSet.AddressSet","nameLocations":["552:13:11","566:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"552:24:11"},"referencedDeclaration":5163,"src":"552:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"anonymous":false,"eventSelector":"36b518fed88ed88d56e6197f8ca72f326d86ff0612dc364838d93c4d5daab5a9","id":5564,"name":"CertificateIssued","nameLocation":"611:17:11","nodeType":"EventDefinition","parameters":{"id":5563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"indexed":true,"mutability":"mutable","name":"certificateHash","nameLocation":"645:15:11","nodeType":"VariableDeclaration","scope":5564,"src":"629:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"629:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5560,"indexed":true,"mutability":"mutable","name":"institution","nameLocation":"678:11:11","nodeType":"VariableDeclaration","scope":5564,"src":"662:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5559,"name":"address","nodeType":"ElementaryTypeName","src":"662:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5562,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"699:9:11","nodeType":"VariableDeclaration","scope":5564,"src":"691:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5561,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"628:81:11"},"src":"605:105:11"},{"anonymous":false,"eventSelector":"85fe6dd2dfc4757558754564c7ff020182ec3c918257c2ff3a217a63791ec24f","id":5572,"name":"CertificateRevoked","nameLocation":"721:18:11","nodeType":"EventDefinition","parameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5566,"indexed":true,"mutability":"mutable","name":"certificateHash","nameLocation":"756:15:11","nodeType":"VariableDeclaration","scope":5572,"src":"740:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"740:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5568,"indexed":true,"mutability":"mutable","name":"institution","nameLocation":"789:11:11","nodeType":"VariableDeclaration","scope":5572,"src":"773:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5567,"name":"address","nodeType":"ElementaryTypeName","src":"773:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5570,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"810:9:11","nodeType":"VariableDeclaration","scope":5572,"src":"802:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"802:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"739:81:11"},"src":"715:106:11"},{"anonymous":false,"eventSelector":"0bfb62b1fbb00013554ed3ff21ca179a519aee08ccf015aed3482362436b6b35","id":5576,"name":"InstitutionAdded","nameLocation":"832:16:11","nodeType":"EventDefinition","parameters":{"id":5575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5574,"indexed":true,"mutability":"mutable","name":"institution","nameLocation":"865:11:11","nodeType":"VariableDeclaration","scope":5576,"src":"849:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5573,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"848:29:11"},"src":"826:52:11"},{"anonymous":false,"eventSelector":"1b0b878d06167e60e076b932df41de2b519d804c80445961e705ffbc98091f87","id":5580,"name":"InstitutionRemoved","nameLocation":"889:18:11","nodeType":"EventDefinition","parameters":{"id":5579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5578,"indexed":true,"mutability":"mutable","name":"institution","nameLocation":"924:11:11","nodeType":"VariableDeclaration","scope":5580,"src":"908:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5577,"name":"address","nodeType":"ElementaryTypeName","src":"908:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"907:29:11"},"src":"883:54:11"},{"canonicalName":"Certificate.Status","id":5584,"members":[{"id":5581,"name":"Unissued","nameLocation":"1036:8:11","nodeType":"EnumValue","src":"1036:8:11"},{"id":5582,"name":"Issued","nameLocation":"1046:6:11","nodeType":"EnumValue","src":"1046:6:11"},{"id":5583,"name":"Revoked","nameLocation":"1054:7:11","nodeType":"EnumValue","src":"1054:7:11"}],"name":"Status","nameLocation":"1027:6:11","nodeType":"EnumDefinition","src":"1022:41:11"},{"canonicalName":"Certificate.CertificateDetails","id":5592,"members":[{"constant":false,"id":5587,"mutability":"mutable","name":"status","nameLocation":"1155:6:11","nodeType":"VariableDeclaration","scope":5592,"src":"1148:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"},"typeName":{"id":5586,"nodeType":"UserDefinedTypeName","pathNode":{"id":5585,"name":"Status","nameLocations":["1148:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5584,"src":"1148:6:11"},"referencedDeclaration":5584,"src":"1148:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"}},"visibility":"internal"},{"constant":false,"id":5589,"mutability":"mutable","name":"issuingInstitution","nameLocation":"1179:18:11","nodeType":"VariableDeclaration","scope":5592,"src":"1171:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5588,"name":"address","nodeType":"ElementaryTypeName","src":"1171:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5591,"mutability":"mutable","name":"timestamp","nameLocation":"1215:9:11","nodeType":"VariableDeclaration","scope":5592,"src":"1207:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CertificateDetails","nameLocation":"1119:18:11","nodeType":"StructDefinition","scope":5825,"src":"1112:119:11","visibility":"public"},{"constant":false,"id":5597,"mutability":"mutable","name":"_certificates","nameLocation":"1337:13:11","nodeType":"VariableDeclaration","scope":5825,"src":"1290:60:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_CertificateDetails_$5592_storage_$","typeString":"mapping(bytes32 => struct Certificate.CertificateDetails)"},"typeName":{"id":5596,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1290:38:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_CertificateDetails_$5592_storage_$","typeString":"mapping(bytes32 => struct Certificate.CertificateDetails)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5595,"nodeType":"UserDefinedTypeName","pathNode":{"id":5594,"name":"CertificateDetails","nameLocations":["1309:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":5592,"src":"1309:18:11"},"referencedDeclaration":5592,"src":"1309:18:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage_ptr","typeString":"struct Certificate.CertificateDetails"}}},"visibility":"private"},{"constant":false,"id":5600,"mutability":"mutable","name":"_institutions","nameLocation":"1457:13:11","nodeType":"VariableDeclaration","scope":5825,"src":"1424:46:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5599,"nodeType":"UserDefinedTypeName","pathNode":{"id":5598,"name":"EnumerableSet.AddressSet","nameLocations":["1424:13:11","1438:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"1424:24:11"},"referencedDeclaration":5163,"src":"1424:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"body":{"id":5613,"nodeType":"Block","src":"1629:114:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5606,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1670:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1674:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1670:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5604,"name":"_institutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"1647:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1661:8:11","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":5257,"src":"1647:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5163_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$5163_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1647:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420616e20617574686f72697a656420696e737469747574696f6e","id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1683:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b62068e094c5a2990223414f27f650c0f3e60cd7605e19034037bf9843317727","typeString":"literal_string \"Caller is not an authorized institution\""},"value":"Caller is not an authorized institution"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b62068e094c5a2990223414f27f650c0f3e60cd7605e19034037bf9843317727","typeString":"literal_string \"Caller is not an authorized institution\""}],"id":5603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1639:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:86:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5611,"nodeType":"ExpressionStatement","src":"1639:86:11"},{"id":5612,"nodeType":"PlaceholderStatement","src":"1735:1:11"}]},"documentation":{"id":5601,"nodeType":"StructuredDocumentation","src":"1503:94:11","text":" @dev Throws if called by any account that is not an authorized institution."},"id":5614,"name":"onlyInstitution","nameLocation":"1611:15:11","nodeType":"ModifierDefinition","parameters":{"id":5602,"nodeType":"ParameterList","parameters":[],"src":"1626:2:11"},"src":"1602:141:11","virtual":false,"visibility":"internal"},{"body":{"id":5622,"nodeType":"Block","src":"1833:2:11","statements":[]},"id":5623,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5619,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"1819:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5620,"kind":"baseConstructorSpecifier","modifierName":{"id":5618,"name":"Ownable","nameLocations":["1811:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1811:7:11"},"nodeType":"ModifierInvocation","src":"1811:21:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5616,"mutability":"mutable","name":"initialOwner","nameLocation":"1797:12:11","nodeType":"VariableDeclaration","scope":5623,"src":"1789:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5615,"name":"address","nodeType":"ElementaryTypeName","src":"1789:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1788:22:11"},"returnParameters":{"id":5621,"nodeType":"ParameterList","parameters":[],"src":"1833:0:11"},"scope":5825,"src":"1777:58:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5653,"nodeType":"Block","src":"2131:214:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"institutionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"2149:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2171:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5633,"name":"address","nodeType":"ElementaryTypeName","src":"2171:7:11","typeDescriptions":{}}},"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2149:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2183:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":5631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2141:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5640,"nodeType":"ExpressionStatement","src":"2141:60:11"},{"expression":{"arguments":[{"arguments":[{"id":5644,"name":"institutionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"2237:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5642,"name":"_institutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"2219:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2233:3:11","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5190,"src":"2219:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5163_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$5163_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e737469747574696f6e20616c726561647920657869737473","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2258:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6efd108e50d2393eaaee841cb8ef980f9930ed7c3e41ed9913e45453582c1b9","typeString":"literal_string \"Institution already exists\""},"value":"Institution already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6efd108e50d2393eaaee841cb8ef980f9930ed7c3e41ed9913e45453582c1b9","typeString":"literal_string \"Institution already exists\""}],"id":5641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2211:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2211:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5648,"nodeType":"ExpressionStatement","src":"2211:76:11"},{"eventCall":{"arguments":[{"id":5650,"name":"institutionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"2319:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5649,"name":"InstitutionAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"2302:16:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5652,"nodeType":"EmitStatement","src":"2297:41:11"}]},"documentation":{"id":5624,"nodeType":"StructuredDocumentation","src":"1903:152:11","text":" @dev Adds a new institution to the set of authorized issuers.\n @param institutionAddress The address of the institution to add."},"functionSelector":"af5b2291","id":5654,"implemented":true,"kind":"function","modifiers":[{"id":5629,"kind":"modifierInvocation","modifierName":{"id":5628,"name":"onlyOwner","nameLocations":["2121:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2121:9:11"},"nodeType":"ModifierInvocation","src":"2121:9:11"}],"name":"addInstitution","nameLocation":"2069:14:11","nodeType":"FunctionDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"institutionAddress","nameLocation":"2092:18:11","nodeType":"VariableDeclaration","scope":5654,"src":"2084:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5625,"name":"address","nodeType":"ElementaryTypeName","src":"2084:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2083:28:11"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[],"src":"2131:0:11"},"scope":5825,"src":"2060:285:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5674,"nodeType":"Block","src":"2587:149:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":5665,"name":"institutionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"2626:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5663,"name":"_institutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"2605:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2619:6:11","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":5217,"src":"2605:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5163_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$5163_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2605:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e737469747574696f6e20646f6573206e6f74206578697374","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2647:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_796bc0105559c64faf9d51eda319ed0d9754bd31f17bdc3c5e1ee6dd5f1094db","typeString":"literal_string \"Institution does not exist\""},"value":"Institution does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_796bc0105559c64faf9d51eda319ed0d9754bd31f17bdc3c5e1ee6dd5f1094db","typeString":"literal_string \"Institution does not exist\""}],"id":5662,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2597:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2597:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5669,"nodeType":"ExpressionStatement","src":"2597:79:11"},{"eventCall":{"arguments":[{"id":5671,"name":"institutionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"2710:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5670,"name":"InstitutionRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"2691:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2691:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5673,"nodeType":"EmitStatement","src":"2686:43:11"}]},"documentation":{"id":5655,"nodeType":"StructuredDocumentation","src":"2351:157:11","text":" @dev Removes an institution from the set of authorized issuers.\n @param institutionAddress The address of the institution to remove."},"functionSelector":"8747d5ed","id":5675,"implemented":true,"kind":"function","modifiers":[{"id":5660,"kind":"modifierInvocation","modifierName":{"id":5659,"name":"onlyOwner","nameLocations":["2577:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2577:9:11"},"nodeType":"ModifierInvocation","src":"2577:9:11"}],"name":"removeInstitution","nameLocation":"2522:17:11","nodeType":"FunctionDefinition","parameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"institutionAddress","nameLocation":"2548:18:11","nodeType":"VariableDeclaration","scope":5675,"src":"2540:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5656,"name":"address","nodeType":"ElementaryTypeName","src":"2540:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2539:28:11"},"returnParameters":{"id":5661,"nodeType":"ParameterList","parameters":[],"src":"2587:0:11"},"scope":5825,"src":"2513:223:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5715,"nodeType":"Block","src":"3043:384:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5684,"name":"_certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"3061:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_CertificateDetails_$5592_storage_$","typeString":"mapping(bytes32 => struct Certificate.CertificateDetails storage ref)"}},"id":5686,"indexExpression":{"id":5685,"name":"certificateHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"3075:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3061:30:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage","typeString":"struct Certificate.CertificateDetails storage ref"}},"id":5687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3092:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5587,"src":"3061:37:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5688,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"3102:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5584_$","typeString":"type(enum Certificate.Status)"}},"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3109:8:11","memberName":"Unissued","nodeType":"MemberAccess","referencedDeclaration":5581,"src":"3102:15:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"}},"src":"3061:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436572746966696361746520616c726561647920657869737473","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3119:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9691b1f375736bd141df959b646eeb717a61200a748298fa030020a17ca50fc","typeString":"literal_string \"Certificate already exists\""},"value":"Certificate already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e9691b1f375736bd141df959b646eeb717a61200a748298fa030020a17ca50fc","typeString":"literal_string \"Certificate already exists\""}],"id":5683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3053:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3053:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5693,"nodeType":"ExpressionStatement","src":"3053:95:11"},{"expression":{"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5694,"name":"_certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"3159:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_CertificateDetails_$5592_storage_$","typeString":"mapping(bytes32 => struct Certificate.CertificateDetails storage ref)"}},"id":5696,"indexExpression":{"id":5695,"name":"certificateHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"3173:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3159:30:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage","typeString":"struct Certificate.CertificateDetails storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5698,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"3233:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5584_$","typeString":"type(enum Certificate.Status)"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3240:6:11","memberName":"Issued","nodeType":"MemberAccess","referencedDeclaration":5582,"src":"3233:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"}},{"expression":{"id":5700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3280:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3284:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3280:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5702,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3315:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"3315:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5697,"name":"CertificateDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"3192:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CertificateDetails_$5592_storage_ptr_$","typeString":"type(struct Certificate.CertificateDetails storage pointer)"}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3225:6:11","3260:18:11","3304:9:11"],"names":["status","issuingInstitution","timestamp"],"nodeType":"FunctionCall","src":"3192:149:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_memory_ptr","typeString":"struct Certificate.CertificateDetails memory"}},"src":"3159:182:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage","typeString":"struct Certificate.CertificateDetails storage ref"}},"id":5706,"nodeType":"ExpressionStatement","src":"3159:182:11"},{"eventCall":{"arguments":[{"id":5708,"name":"certificateHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"3375:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5709,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3392:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3396:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3392:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5711,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3404:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3410:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"3404:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5707,"name":"CertificateIssued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"3357:17:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3357:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5714,"nodeType":"EmitStatement","src":"3352:68:11"}]},"documentation":{"id":5676,"nodeType":"StructuredDocumentation","src":"2809:153:11","text":" @dev Issues a new certificate by storing its hash.\n @param certificateHash The keccak256 hash of the off-chain certificate data."},"functionSelector":"a1f81824","id":5716,"implemented":true,"kind":"function","modifiers":[{"id":5681,"kind":"modifierInvocation","modifierName":{"id":5680,"name":"onlyInstitution","nameLocations":["3027:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":5614,"src":"3027:15:11"},"nodeType":"ModifierInvocation","src":"3027:15:11"}],"name":"issueCertificate","nameLocation":"2976:16:11","nodeType":"FunctionDefinition","parameters":{"id":5679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5678,"mutability":"mutable","name":"certificateHash","nameLocation":"3001:15:11","nodeType":"VariableDeclaration","scope":5716,"src":"2993:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2993:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2992:25:11"},"returnParameters":{"id":5682,"nodeType":"ParameterList","parameters":[],"src":"3043:0:11"},"scope":5825,"src":"2967:460:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5755,"nodeType":"Block","src":"3640:393:11","statements":[{"assignments":[5726],"declarations":[{"constant":false,"id":5726,"mutability":"mutable","name":"cert","nameLocation":"3677:4:11","nodeType":"VariableDeclaration","scope":5755,"src":"3650:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage_ptr","typeString":"struct Certificate.CertificateDetails"},"typeName":{"id":5725,"nodeType":"UserDefinedTypeName","pathNode":{"id":5724,"name":"CertificateDetails","nameLocations":["3650:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":5592,"src":"3650:18:11"},"referencedDeclaration":5592,"src":"3650:18:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage_ptr","typeString":"struct Certificate.CertificateDetails"}},"visibility":"internal"}],"id":5730,"initialValue":{"baseExpression":{"id":5727,"name":"_certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"3684:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_CertificateDetails_$5592_storage_$","typeString":"mapping(bytes32 => struct Certificate.CertificateDetails storage ref)"}},"id":5729,"indexExpression":{"id":5728,"name":"certificateHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"3698:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3684:30:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage","typeString":"struct Certificate.CertificateDetails storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3650:64:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5732,"name":"cert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"3732:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage_ptr","typeString":"struct Certificate.CertificateDetails storage pointer"}},"id":5733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3737:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5587,"src":"3732:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5734,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"3747:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5584_$","typeString":"type(enum Certificate.Status)"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3754:6:11","memberName":"Issued","nodeType":"MemberAccess","referencedDeclaration":5582,"src":"3747:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"}},"src":"3732:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4365727469666963617465206e6f7420696e20697373756564207374617465","id":5737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_da3dad5b55ad950cea66b05e81ef2aabf41de1d576076144035ffc9372d21333","typeString":"literal_string \"Certificate not in issued state\""},"value":"Certificate not in issued state"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da3dad5b55ad950cea66b05e81ef2aabf41de1d576076144035ffc9372d21333","typeString":"literal_string \"Certificate not in issued state\""}],"id":5731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3724:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3724:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5739,"nodeType":"ExpressionStatement","src":"3724:72:11"},{"expression":{"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5740,"name":"cert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"3919:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage_ptr","typeString":"struct Certificate.CertificateDetails storage pointer"}},"id":5742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3924:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5587,"src":"3919:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5743,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"3933:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5584_$","typeString":"type(enum Certificate.Status)"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3940:7:11","memberName":"Revoked","nodeType":"MemberAccess","referencedDeclaration":5583,"src":"3933:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"}},"src":"3919:28:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"}},"id":5746,"nodeType":"ExpressionStatement","src":"3919:28:11"},{"eventCall":{"arguments":[{"id":5748,"name":"certificateHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"3981:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5749,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3998:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4002:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3998:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5751,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4010:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4016:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"4010:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5747,"name":"CertificateRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"3962:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3962:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5754,"nodeType":"EmitStatement","src":"3957:69:11"}]},"documentation":{"id":5717,"nodeType":"StructuredDocumentation","src":"3433:125:11","text":" @dev Revokes an existing certificate.\n @param certificateHash The hash of the certificate to revoke."},"functionSelector":"c6cbc52a","id":5756,"implemented":true,"kind":"function","modifiers":[{"id":5722,"kind":"modifierInvocation","modifierName":{"id":5721,"name":"onlyInstitution","nameLocations":["3624:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":5614,"src":"3624:15:11"},"nodeType":"ModifierInvocation","src":"3624:15:11"}],"name":"revokeCertificate","nameLocation":"3572:17:11","nodeType":"FunctionDefinition","parameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"certificateHash","nameLocation":"3598:15:11","nodeType":"VariableDeclaration","scope":5756,"src":"3590:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3590:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3589:25:11"},"returnParameters":{"id":5723,"nodeType":"ParameterList","parameters":[],"src":"3640:0:11"},"scope":5825,"src":"3563:470:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5784,"nodeType":"Block","src":"4398:152:11","statements":[{"assignments":[5771],"declarations":[{"constant":false,"id":5771,"mutability":"mutable","name":"cert","nameLocation":"4435:4:11","nodeType":"VariableDeclaration","scope":5784,"src":"4408:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage_ptr","typeString":"struct Certificate.CertificateDetails"},"typeName":{"id":5770,"nodeType":"UserDefinedTypeName","pathNode":{"id":5769,"name":"CertificateDetails","nameLocations":["4408:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":5592,"src":"4408:18:11"},"referencedDeclaration":5592,"src":"4408:18:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage_ptr","typeString":"struct Certificate.CertificateDetails"}},"visibility":"internal"}],"id":5775,"initialValue":{"baseExpression":{"id":5772,"name":"_certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"4442:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_CertificateDetails_$5592_storage_$","typeString":"mapping(bytes32 => struct Certificate.CertificateDetails storage ref)"}},"id":5774,"indexExpression":{"id":5773,"name":"certificateHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"4456:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4442:30:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage","typeString":"struct Certificate.CertificateDetails storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4408:64:11"},{"expression":{"components":[{"expression":{"id":5776,"name":"cert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"4490:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage_ptr","typeString":"struct Certificate.CertificateDetails storage pointer"}},"id":5777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4495:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5587,"src":"4490:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"}},{"expression":{"id":5778,"name":"cert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"4503:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage_ptr","typeString":"struct Certificate.CertificateDetails storage pointer"}},"id":5779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4508:18:11","memberName":"issuingInstitution","nodeType":"MemberAccess","referencedDeclaration":5589,"src":"4503:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5780,"name":"cert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"4528:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateDetails_$5592_storage_ptr","typeString":"struct Certificate.CertificateDetails storage pointer"}},"id":5781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4533:9:11","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":5591,"src":"4528:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4489:54:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_Status_$5584_$_t_address_$_t_uint256_$","typeString":"tuple(enum Certificate.Status,address,uint256)"}},"functionReturnParameters":5768,"id":5783,"nodeType":"Return","src":"4482:61:11"}]},"documentation":{"id":5757,"nodeType":"StructuredDocumentation","src":"4077:212:11","text":" @dev Verifies the status of a certificate.\n @param certificateHash The hash of the certificate to verify.\n @return The status, issuing institution, and timestamp of the certificate."},"functionSelector":"cab621d9","id":5785,"implemented":true,"kind":"function","modifiers":[],"name":"getCertificateStatus","nameLocation":"4303:20:11","nodeType":"FunctionDefinition","parameters":{"id":5760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5759,"mutability":"mutable","name":"certificateHash","nameLocation":"4332:15:11","nodeType":"VariableDeclaration","scope":5785,"src":"4324:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4324:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4323:25:11"},"returnParameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5785,"src":"4372:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"},"typeName":{"id":5762,"nodeType":"UserDefinedTypeName","pathNode":{"id":5761,"name":"Status","nameLocations":["4372:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5584,"src":"4372:6:11"},"referencedDeclaration":5584,"src":"4372:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5584","typeString":"enum Certificate.Status"}},"visibility":"internal"},{"constant":false,"id":5765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5785,"src":"4380:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5764,"name":"address","nodeType":"ElementaryTypeName","src":"4380:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5785,"src":"4389:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"4389:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4371:26:11"},"scope":5825,"src":"4294:256:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5798,"nodeType":"Block","src":"4841:66:11","statements":[{"expression":{"arguments":[{"id":5795,"name":"institutionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"4881:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5793,"name":"_institutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"4858:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4872:8:11","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":5257,"src":"4858:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5163_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$5163_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4858:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5792,"id":5797,"nodeType":"Return","src":"4851:49:11"}]},"documentation":{"id":5786,"nodeType":"StructuredDocumentation","src":"4556:200:11","text":" @dev Checks if an address is an authorized institution.\n @param institutionAddress The address to check.\n @return True if the address is an institution, false otherwise."},"functionSelector":"0331df07","id":5799,"implemented":true,"kind":"function","modifiers":[],"name":"isInstitution","nameLocation":"4770:13:11","nodeType":"FunctionDefinition","parameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"institutionAddress","nameLocation":"4792:18:11","nodeType":"VariableDeclaration","scope":5799,"src":"4784:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5787,"name":"address","nodeType":"ElementaryTypeName","src":"4784:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4783:28:11"},"returnParameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5799,"src":"4835:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5790,"name":"bool","nodeType":"ElementaryTypeName","src":"4835:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4834:6:11"},"scope":5825,"src":"4761:146:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5809,"nodeType":"Block","src":"5051:46:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5805,"name":"_institutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"5068:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5082:6:11","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":5272,"src":"5068:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5163_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$5163_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5068:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5804,"id":5808,"nodeType":"Return","src":"5061:29:11"}]},"documentation":{"id":5800,"nodeType":"StructuredDocumentation","src":"4913:70:11","text":" @dev Returns the number of authorized institutions."},"functionSelector":"579b6a4a","id":5810,"implemented":true,"kind":"function","modifiers":[],"name":"getInstitutionCount","nameLocation":"4997:19:11","nodeType":"FunctionDefinition","parameters":{"id":5801,"nodeType":"ParameterList","parameters":[],"src":"5016:2:11"},"returnParameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5810,"src":"5042:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5802,"name":"uint256","nodeType":"ElementaryTypeName","src":"5042:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5041:9:11"},"scope":5825,"src":"4988:109:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5823,"nodeType":"Block","src":"5253:47:11","statements":[{"expression":{"arguments":[{"id":5820,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"5287:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5818,"name":"_institutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"5270:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5163_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5284:2:11","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":5299,"src":"5270:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5163_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$5163_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5270:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5817,"id":5822,"nodeType":"Return","src":"5263:30:11"}]},"documentation":{"id":5811,"nodeType":"StructuredDocumentation","src":"5103:67:11","text":" @dev Returns an institution at a specific index."},"functionSelector":"8a23e294","id":5824,"implemented":true,"kind":"function","modifiers":[],"name":"getInstitutionAtIndex","nameLocation":"5184:21:11","nodeType":"FunctionDefinition","parameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"index","nameLocation":"5214:5:11","nodeType":"VariableDeclaration","scope":5824,"src":"5206:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5812,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5205:15:11"},"returnParameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5824,"src":"5244:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5815,"name":"address","nodeType":"ElementaryTypeName","src":"5244:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5243:9:11"},"scope":5825,"src":"5175:125:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5826,"src":"490:4812:11","usedErrors":[13,18],"usedEvents":[24,5564,5572,5576,5580]}],"src":"32:5271:11"},"id":11},"contracts/CertificateOnChain.sol":{"ast":{"absolutePath":"contracts/CertificateOnChain.sol","exportedSymbols":{"CertificateOnChain":[5948],"Context":[1087],"Ownable":[147]},"id":5949,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5827,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:12"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5828,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5949,"sourceUnit":148,"src":"58:52:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5830,"name":"Ownable","nameLocations":["429:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"429:7:12"},"id":5831,"nodeType":"InheritanceSpecifier","src":"429:7:12"}],"canonicalName":"CertificateOnChain","contractDependencies":[],"contractKind":"contract","documentation":{"id":5829,"nodeType":"StructuredDocumentation","src":"112:285:12","text":" @title CertificateOnChain\n @dev A baseline contract for comparison, storing all certificate data directly on-chain.\n This contract is intentionally designed to be less efficient to highlight the benefits\n of the hybrid storage model in the main `Certificate` contract."},"fullyImplemented":true,"id":5948,"linearizedBaseContracts":[5948,147,1087],"name":"CertificateOnChain","nameLocation":"407:18:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"b7ff6cbe8f0282bf405f9ce3210be62c5620d39139a49186436e3f0fcc6a315a","id":5839,"name":"CertificateIssued","nameLocation":"472:17:12","nodeType":"EventDefinition","parameters":{"id":5838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5833,"indexed":true,"mutability":"mutable","name":"certificateId","nameLocation":"506:13:12","nodeType":"VariableDeclaration","scope":5839,"src":"490:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5832,"name":"uint256","nodeType":"ElementaryTypeName","src":"490:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5835,"indexed":true,"mutability":"mutable","name":"institution","nameLocation":"537:11:12","nodeType":"VariableDeclaration","scope":5839,"src":"521:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5834,"name":"address","nodeType":"ElementaryTypeName","src":"521:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5837,"indexed":false,"mutability":"mutable","name":"studentName","nameLocation":"557:11:12","nodeType":"VariableDeclaration","scope":5839,"src":"550:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5836,"name":"string","nodeType":"ElementaryTypeName","src":"550:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"489:80:12"},"src":"466:104:12"},{"canonicalName":"CertificateOnChain.CertificateData","id":5852,"members":[{"constant":false,"id":5841,"mutability":"mutable","name":"studentName","nameLocation":"648:11:12","nodeType":"VariableDeclaration","scope":5852,"src":"641:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5840,"name":"string","nodeType":"ElementaryTypeName","src":"641:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5843,"mutability":"mutable","name":"degreeType","nameLocation":"676:10:12","nodeType":"VariableDeclaration","scope":5852,"src":"669:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5842,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5845,"mutability":"mutable","name":"institutionName","nameLocation":"703:15:12","nodeType":"VariableDeclaration","scope":5852,"src":"696:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5844,"name":"string","nodeType":"ElementaryTypeName","src":"696:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5847,"mutability":"mutable","name":"issueTimestamp","nameLocation":"736:14:12","nodeType":"VariableDeclaration","scope":5852,"src":"728:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5849,"mutability":"mutable","name":"issuingInstitution","nameLocation":"768:18:12","nodeType":"VariableDeclaration","scope":5852,"src":"760:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5848,"name":"address","nodeType":"ElementaryTypeName","src":"760:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5851,"mutability":"mutable","name":"isIssued","nameLocation":"801:8:12","nodeType":"VariableDeclaration","scope":5852,"src":"796:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5850,"name":"bool","nodeType":"ElementaryTypeName","src":"796:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"CertificateData","nameLocation":"615:15:12","nodeType":"StructDefinition","scope":5948,"src":"608:208:12","visibility":"public"},{"constant":false,"functionSelector":"663b3e22","id":5856,"mutability":"mutable","name":"certificates","nameLocation":"931:12:12","nodeType":"VariableDeclaration","scope":5948,"src":"906:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CertificateData_$5852_storage_$dyn_storage","typeString":"struct CertificateOnChain.CertificateData[]"},"typeName":{"baseType":{"id":5854,"nodeType":"UserDefinedTypeName","pathNode":{"id":5853,"name":"CertificateData","nameLocations":["906:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":5852,"src":"906:15:12"},"referencedDeclaration":5852,"src":"906:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$5852_storage_ptr","typeString":"struct CertificateOnChain.CertificateData"}},"id":5855,"nodeType":"ArrayTypeName","src":"906:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CertificateData_$5852_storage_$dyn_storage_ptr","typeString":"struct CertificateOnChain.CertificateData[]"}},"visibility":"public"},{"constant":false,"id":5860,"mutability":"mutable","name":"certificateIndex","nameLocation":"1096:16:12","nodeType":"VariableDeclaration","scope":5948,"src":"1060:52:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":5859,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1068:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1060:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1079:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":5868,"nodeType":"Block","src":"1203:2:12","statements":[]},"id":5869,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5865,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"1189:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5866,"kind":"baseConstructorSpecifier","modifierName":{"id":5864,"name":"Ownable","nameLocations":["1181:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1181:7:12"},"nodeType":"ModifierInvocation","src":"1181:21:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5862,"mutability":"mutable","name":"initialOwner","nameLocation":"1167:12:12","nodeType":"VariableDeclaration","scope":5869,"src":"1159:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5861,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1158:22:12"},"returnParameters":{"id":5867,"nodeType":"ParameterList","parameters":[],"src":"1203:0:12"},"scope":5948,"src":"1147:58:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5914,"nodeType":"Block","src":"1775:509:12","statements":[{"assignments":[5882],"declarations":[{"constant":false,"id":5882,"mutability":"mutable","name":"certificateId","nameLocation":"1793:13:12","nodeType":"VariableDeclaration","scope":5914,"src":"1785:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5881,"name":"uint256","nodeType":"ElementaryTypeName","src":"1785:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5885,"initialValue":{"expression":{"id":5883,"name":"certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"1809:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CertificateData_$5852_storage_$dyn_storage","typeString":"struct CertificateOnChain.CertificateData storage ref[] storage ref"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1822:6:12","memberName":"length","nodeType":"MemberAccess","src":"1809:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1785:43:12"},{"expression":{"arguments":[{"arguments":[{"id":5890,"name":"studentName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"1900:11:12","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":5891,"name":"degreeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"1937:10:12","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":5892,"name":"institutionName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"1978:15:12","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":5893,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2023:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2029:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"2023:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5895,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2072:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2076:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2072:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2106:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5889,"name":"CertificateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"1857:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CertificateData_$5852_storage_ptr_$","typeString":"type(struct CertificateOnChain.CertificateData storage pointer)"}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1887:11:12","1925:10:12","1961:15:12","2007:14:12","2052:18:12","2096:8:12"],"names":["studentName","degreeType","institutionName","issueTimestamp","issuingInstitution","isIssued"],"nodeType":"FunctionCall","src":"1857:264:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$5852_memory_ptr","typeString":"struct CertificateOnChain.CertificateData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CertificateData_$5852_memory_ptr","typeString":"struct CertificateOnChain.CertificateData memory"}],"expression":{"id":5886,"name":"certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"1839:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CertificateData_$5852_storage_$dyn_storage","typeString":"struct CertificateOnChain.CertificateData storage ref[] storage ref"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:4:12","memberName":"push","nodeType":"MemberAccess","src":"1839:17:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_CertificateData_$5852_storage_$dyn_storage_ptr_$_t_struct$_CertificateData_$5852_storage_$returns$__$attached_to$_t_array$_t_struct$_CertificateData_$5852_storage_$dyn_storage_ptr_$","typeString":"function (struct CertificateOnChain.CertificateData storage ref[] storage pointer,struct CertificateOnChain.CertificateData storage ref)"}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1839:283:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5900,"nodeType":"ExpressionStatement","src":"1839:283:12"},{"expression":{"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5901,"name":"certificateIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"2133:16:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5903,"indexExpression":{"id":5902,"name":"certificateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"2150:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2133:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5904,"name":"certificateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"2167:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2133:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5906,"nodeType":"ExpressionStatement","src":"2133:47:12"},{"eventCall":{"arguments":[{"id":5908,"name":"certificateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"2238:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5909,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2253:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2257:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2253:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5911,"name":"studentName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"2265:11:12","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":5907,"name":"CertificateIssued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"2220:17:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2220:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5913,"nodeType":"EmitStatement","src":"2215:62:12"}]},"documentation":{"id":5870,"nodeType":"StructuredDocumentation","src":"1257:348:12","text":" @dev Issues a new certificate by storing all its data on-chain.\n This function will consume a significant amount of gas, especially with longer strings.\n @param studentName The name of the student.\n @param degreeType The type of degree awarded.\n @param institutionName The name of the issuing institution."},"functionSelector":"beec1caa","id":5915,"implemented":true,"kind":"function","modifiers":[{"id":5879,"kind":"modifierInvocation","modifierName":{"id":5878,"name":"onlyOwner","nameLocations":["1765:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1765:9:12"},"nodeType":"ModifierInvocation","src":"1765:9:12"}],"name":"issueCertificate","nameLocation":"1619:16:12","nodeType":"FunctionDefinition","parameters":{"id":5877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"studentName","nameLocation":"1661:11:12","nodeType":"VariableDeclaration","scope":5915,"src":"1645:27:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5871,"name":"string","nodeType":"ElementaryTypeName","src":"1645:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5874,"mutability":"mutable","name":"degreeType","nameLocation":"1698:10:12","nodeType":"VariableDeclaration","scope":5915,"src":"1682:26:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5873,"name":"string","nodeType":"ElementaryTypeName","src":"1682:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5876,"mutability":"mutable","name":"institutionName","nameLocation":"1734:15:12","nodeType":"VariableDeclaration","scope":5915,"src":"1718:31:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5875,"name":"string","nodeType":"ElementaryTypeName","src":"1718:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1635:120:12"},"returnParameters":{"id":5880,"nodeType":"ParameterList","parameters":[],"src":"1775:0:12"},"scope":5948,"src":"1610:674:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5936,"nodeType":"Block","src":"2605:137:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5925,"name":"certificateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"2623:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5926,"name":"certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"2639:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CertificateData_$5852_storage_$dyn_storage","typeString":"struct CertificateOnChain.CertificateData storage ref[] storage ref"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2652:6:12","memberName":"length","nodeType":"MemberAccess","src":"2639:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2623:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4365727469666963617465204944206f7574206f6620626f756e6473","id":5929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2660:30:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b9266f8971ca3932150cfe5b3864f2dc96ea6105c4da1d850e76c998ea9c821","typeString":"literal_string \"Certificate ID out of bounds\""},"value":"Certificate ID out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b9266f8971ca3932150cfe5b3864f2dc96ea6105c4da1d850e76c998ea9c821","typeString":"literal_string \"Certificate ID out of bounds\""}],"id":5924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2615:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2615:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5931,"nodeType":"ExpressionStatement","src":"2615:76:12"},{"expression":{"baseExpression":{"id":5932,"name":"certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"2708:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CertificateData_$5852_storage_$dyn_storage","typeString":"struct CertificateOnChain.CertificateData storage ref[] storage ref"}},"id":5934,"indexExpression":{"id":5933,"name":"certificateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"2721:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2708:27:12","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$5852_storage","typeString":"struct CertificateOnChain.CertificateData storage ref"}},"functionReturnParameters":5923,"id":5935,"nodeType":"Return","src":"2701:34:12"}]},"documentation":{"id":5916,"nodeType":"StructuredDocumentation","src":"2328:174:12","text":" @dev Retrieves the full data of a certificate.\n @param certificateId The ID of the certificate to retrieve.\n @return The full certificate data."},"functionSelector":"31494bbb","id":5937,"implemented":true,"kind":"function","modifiers":[],"name":"getCertificateData","nameLocation":"2516:18:12","nodeType":"FunctionDefinition","parameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5918,"mutability":"mutable","name":"certificateId","nameLocation":"2543:13:12","nodeType":"VariableDeclaration","scope":5937,"src":"2535:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2534:23:12"},"returnParameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5937,"src":"2581:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$5852_memory_ptr","typeString":"struct CertificateOnChain.CertificateData"},"typeName":{"id":5921,"nodeType":"UserDefinedTypeName","pathNode":{"id":5920,"name":"CertificateData","nameLocations":["2581:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":5852,"src":"2581:15:12"},"referencedDeclaration":5852,"src":"2581:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$5852_storage_ptr","typeString":"struct CertificateOnChain.CertificateData"}},"visibility":"internal"}],"src":"2580:24:12"},"scope":5948,"src":"2507:235:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5946,"nodeType":"Block","src":"2888:43:12","statements":[{"expression":{"expression":{"id":5943,"name":"certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"2905:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CertificateData_$5852_storage_$dyn_storage","typeString":"struct CertificateOnChain.CertificateData storage ref[] storage ref"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2918:6:12","memberName":"length","nodeType":"MemberAccess","src":"2905:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5942,"id":5945,"nodeType":"Return","src":"2898:26:12"}]},"documentation":{"id":5938,"nodeType":"StructuredDocumentation","src":"2748:72:12","text":" @dev Returns the total number of certificates issued."},"functionSelector":"8809f727","id":5947,"implemented":true,"kind":"function","modifiers":[],"name":"getCertificateCount","nameLocation":"2834:19:12","nodeType":"FunctionDefinition","parameters":{"id":5939,"nodeType":"ParameterList","parameters":[],"src":"2853:2:12"},"returnParameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5947,"src":"2879:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2879:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2878:9:12"},"scope":5948,"src":"2825:106:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5949,"src":"398:2535:12","usedErrors":[13,18],"usedEvents":[24,5839]}],"src":"32:2902:12"},"id":12}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206db418889c526bbb0cca7084e3bb310ace34cab00dff027b2afae19cb4a4b41464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB418889C526BBB0CCA7084E3BB31 EXP 0xCE CALLVALUE 0xCA 0xB0 0xD SELFDESTRUCT MUL PUSH28 0x2AFAE19CB4A4B41464736F6C63430008140033000000000000000000 ","sourceMap":"459:17878:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;459:17878:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206db418889c526bbb0cca7084e3bb310ace34cab00dff027b2afae19cb4a4b41464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB418889C526BBB0CCA7084E3BB31 EXP 0xCE CALLVALUE 0xCA 0xB0 0xD SELFDESTRUCT MUL PUSH28 0x2AFAE19CB4A4B41464736F6C63430008140033000000000000000000 ","sourceMap":"459:17878:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220355a992060b23def967700d94c54a3d95f9c9066d8dd63e7f4c61ecda011343664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GAS SWAP10 KECCAK256 PUSH1 0xB2 RETURNDATASIZE 0xEF SWAP7 PUSH24 0xD94C54A3D95F9C9066D8DD63E7F4C61ECDA01134366473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:218:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:218:2;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220355a992060b23def967700d94c54a3d95f9c9066d8dd63e7f4c61ecda011343664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GAS SWAP10 KECCAK256 PUSH1 0xB2 RETURNDATASIZE 0xEF SWAP7 PUSH24 0xD94C54A3D95F9C9066D8DD63E7F4C61ECDA01134366473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:218:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abb763542953af10db248c3664564a3dd4f2a1613e2a7e6601919580a7f3f8e464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xB7 PUSH4 0x542953AF LT 0xDB 0x24 DUP13 CALLDATASIZE PUSH5 0x564A3DD4F2 LOG1 PUSH2 0x3E2A PUSH31 0x6601919580A7F3F8E464736F6C634300081400330000000000000000000000 ","sourceMap":"1599:3723:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1599:3723:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abb763542953af10db248c3664564a3dd4f2a1613e2a7e6601919580a7f3f8e464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xB7 PUSH4 0x542953AF LT 0xDB 0x24 DUP13 CALLDATASIZE PUSH5 0x564A3DD4F2 LOG1 PUSH2 0x3E2A PUSH31 0x6601919580A7F3F8E464736F6C634300081400330000000000000000000000 ","sourceMap":"1599:3723:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208dffe58b760e494e2fea019f8f469baae8bb80810ea5b700f351420cde61414464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SELFDESTRUCT 0xE5 DUP12 PUSH23 0xE494E2FEA019F8F469BAAE8BB80810EA5B700F351420C 0xDE PUSH2 0x4144 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1425:13298:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1425:13298:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208dffe58b760e494e2fea019f8f469baae8bb80810ea5b700f351420cde61414464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SELFDESTRUCT 0xE5 DUP12 PUSH23 0xE494E2FEA019F8F469BAAE8BB80810EA5B700F351420C 0xDE PUSH2 0x4144 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1425:13298:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. - Set can be cleared (all elements removed) in O(n). ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]}},\"version\":1}"}},"contracts/BaselineRevocation.sol":{"BaselineRevocation":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"certificateId","type":"bytes32"}],"name":"CertificateRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"certificateId","type":"bytes32"}],"name":"isRevoked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"certificateId","type":"bytes32"}],"name":"revoke","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"revoked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_5498":{"entryPoint":null,"id":5498,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600180546001600160a01b03191633179055610235806100326000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063328a93e8146100515780634294857f146100895780638da5cb5b146100ac578063b75c7dc6146100d7575b600080fd5b61007461005f3660046101e6565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100746100973660046101e6565b60009081526020819052604090205460ff1690565b6001546100bf906001600160a01b031681565b6040516001600160a01b039091168152602001610080565b6100ea6100e53660046101e6565b6100ec565b005b6001546001600160a01b031633146101445760405162461bcd60e51b815260206004820152601660248201527527b7363c9037bbb732b91031b0b7103932bb37b5b29760511b60448201526064015b60405180910390fd5b60008181526020819052604090205460ff16156101a35760405162461bcd60e51b815260206004820152601c60248201527f436572746966696361746520616c7265616479207265766f6b65642e00000000604482015260640161013b565b600081815260208190526040808220805460ff191660011790555182917f44d80a438cb4fa3b5aedbe551ce3d9382e37f446917b783e1dee70a03b4180e391a250565b6000602082840312156101f857600080fd5b503591905056fea26469706673582212201f2caa10c3ae59f2dd06f0080d0035407d7e620251bb53f0e5446c912f79e2fc64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x235 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x328A93E8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x4294857F EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xB75C7DC6 EQ PUSH2 0xD7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x80 JUMP JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x144 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9037BBB732B91031B0B7103932BB37B5B297 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436572746966696361746520616C7265616479207265766F6B65642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0x44D80A438CB4FA3B5AEDBE551CE3D9382E37F446917B783E1DEE70A03B4180E3 SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0x2C 0xAA LT 0xC3 0xAE MSIZE CALLCODE 0xDD MOD CREATE ADDMOD 0xD STOP CALLDATALOAD BLOCKHASH PUSH30 0x7E620251BB53F0E5446C912F79E2FC64736F6C6343000814003300000000 ","sourceMap":"418:1166:10:-:0;;;698:49;;;;;;;;;-1:-1:-1;722:5:10;:18;;-1:-1:-1;;;;;;722:18:10;730:10;722:18;;;418:1166;;;;;;"},"deployedBytecode":{"functionDebugData":{"@isRevoked_5544":{"entryPoint":null,"id":5544,"parameterSlots":1,"returnSlots":1},"@owner_5485":{"entryPoint":null,"id":5485,"parameterSlots":0,"returnSlots":0},"@revoke_5531":{"entryPoint":236,"id":5531,"parameterSlots":1,"returnSlots":0},"@revoked_5483":{"entryPoint":null,"id":5483,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_bytes32":{"entryPoint":486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_51e7a8fd6fb93ea64e262e93e68802ea8ad5f22ca4bb448b32e95248a4bcc3b2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_73f276245a77e6291f007724166ec1dcf4d592bff3fd8511b9d22e22264f6f52__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1304:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:13","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:13"},"nodeType":"YulFunctionCall","src":"132:12:13"},"nodeType":"YulExpressionStatement","src":"132:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:13"},"nodeType":"YulFunctionCall","src":"101:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:13"},"nodeType":"YulFunctionCall","src":"97:32:13"},"nodeType":"YulIf","src":"94:52:13"},{"nodeType":"YulAssignment","src":"155:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:13"},"nodeType":"YulFunctionCall","src":"165:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:13"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:13","type":""}],"src":"14:180:13"},{"body":{"nodeType":"YulBlock","src":"294:92:13","statements":[{"nodeType":"YulAssignment","src":"304:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"327:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"312:3:13"},"nodeType":"YulFunctionCall","src":"312:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"304:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"346:9:13"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"371:6:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"364:6:13"},"nodeType":"YulFunctionCall","src":"364:14:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"357:6:13"},"nodeType":"YulFunctionCall","src":"357:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"339:6:13"},"nodeType":"YulFunctionCall","src":"339:41:13"},"nodeType":"YulExpressionStatement","src":"339:41:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"263:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"274:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"285:4:13","type":""}],"src":"199:187:13"},{"body":{"nodeType":"YulBlock","src":"492:102:13","statements":[{"nodeType":"YulAssignment","src":"502:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"525:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"510:3:13"},"nodeType":"YulFunctionCall","src":"510:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"502:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"544:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"559:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"575:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"580:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"571:3:13"},"nodeType":"YulFunctionCall","src":"571:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"584:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"567:3:13"},"nodeType":"YulFunctionCall","src":"567:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"555:3:13"},"nodeType":"YulFunctionCall","src":"555:32:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"537:6:13"},"nodeType":"YulFunctionCall","src":"537:51:13"},"nodeType":"YulExpressionStatement","src":"537:51:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"461:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"472:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"483:4:13","type":""}],"src":"391:203:13"},{"body":{"nodeType":"YulBlock","src":"773:172:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"790:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"801:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"783:6:13"},"nodeType":"YulFunctionCall","src":"783:21:13"},"nodeType":"YulExpressionStatement","src":"783:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"824:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"835:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"820:3:13"},"nodeType":"YulFunctionCall","src":"820:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"840:2:13","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"813:6:13"},"nodeType":"YulFunctionCall","src":"813:30:13"},"nodeType":"YulExpressionStatement","src":"813:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"863:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"859:3:13"},"nodeType":"YulFunctionCall","src":"859:18:13"},{"hexValue":"4f6e6c79206f776e65722063616e207265766f6b652e","kind":"string","nodeType":"YulLiteral","src":"879:24:13","type":"","value":"Only owner can revoke."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"852:6:13"},"nodeType":"YulFunctionCall","src":"852:52:13"},"nodeType":"YulExpressionStatement","src":"852:52:13"},{"nodeType":"YulAssignment","src":"913:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"925:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"936:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"921:3:13"},"nodeType":"YulFunctionCall","src":"921:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"913:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_73f276245a77e6291f007724166ec1dcf4d592bff3fd8511b9d22e22264f6f52__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"750:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"764:4:13","type":""}],"src":"599:346:13"},{"body":{"nodeType":"YulBlock","src":"1124:178:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1141:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1152:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1134:6:13"},"nodeType":"YulFunctionCall","src":"1134:21:13"},"nodeType":"YulExpressionStatement","src":"1134:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1175:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1186:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1171:3:13"},"nodeType":"YulFunctionCall","src":"1171:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"1191:2:13","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1164:6:13"},"nodeType":"YulFunctionCall","src":"1164:30:13"},"nodeType":"YulExpressionStatement","src":"1164:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1214:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1225:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1210:3:13"},"nodeType":"YulFunctionCall","src":"1210:18:13"},{"hexValue":"436572746966696361746520616c7265616479207265766f6b65642e","kind":"string","nodeType":"YulLiteral","src":"1230:30:13","type":"","value":"Certificate already revoked."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1203:6:13"},"nodeType":"YulFunctionCall","src":"1203:58:13"},"nodeType":"YulExpressionStatement","src":"1203:58:13"},{"nodeType":"YulAssignment","src":"1270:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1293:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:13"},"nodeType":"YulFunctionCall","src":"1278:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1270:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_51e7a8fd6fb93ea64e262e93e68802ea8ad5f22ca4bb448b32e95248a4bcc3b2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1101:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1115:4:13","type":""}],"src":"950:352:13"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_73f276245a77e6291f007724166ec1dcf4d592bff3fd8511b9d22e22264f6f52__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only owner can revoke.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51e7a8fd6fb93ea64e262e93e68802ea8ad5f22ca4bb448b32e95248a4bcc3b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Certificate already revoked.\")\n        tail := add(headStart, 96)\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c8063328a93e8146100515780634294857f146100895780638da5cb5b146100ac578063b75c7dc6146100d7575b600080fd5b61007461005f3660046101e6565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100746100973660046101e6565b60009081526020819052604090205460ff1690565b6001546100bf906001600160a01b031681565b6040516001600160a01b039091168152602001610080565b6100ea6100e53660046101e6565b6100ec565b005b6001546001600160a01b031633146101445760405162461bcd60e51b815260206004820152601660248201527527b7363c9037bbb732b91031b0b7103932bb37b5b29760511b60448201526064015b60405180910390fd5b60008181526020819052604090205460ff16156101a35760405162461bcd60e51b815260206004820152601c60248201527f436572746966696361746520616c7265616479207265766f6b65642e00000000604482015260640161013b565b600081815260208190526040808220805460ff191660011790555182917f44d80a438cb4fa3b5aedbe551ce3d9382e37f446917b783e1dee70a03b4180e391a250565b6000602082840312156101f857600080fd5b503591905056fea26469706673582212201f2caa10c3ae59f2dd06f0080d0035407d7e620251bb53f0e5446c912f79e2fc64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x328A93E8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x4294857F EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xB75C7DC6 EQ PUSH2 0xD7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x80 JUMP JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x144 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9037BBB732B91031B0B7103932BB37B5B297 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436572746966696361746520616C7265616479207265766F6B65642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0x44D80A438CB4FA3B5AEDBE551CE3D9382E37F446917B783E1DEE70A03B4180E3 SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0x2C 0xAA LT 0xC3 0xAE MSIZE CALLCODE 0xDD MOD CREATE ADDMOD 0xD STOP CALLDATALOAD BLOCKHASH PUSH30 0x7E620251BB53F0E5446C912F79E2FC64736F6C6343000814003300000000 ","sourceMap":"418:1166:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;563:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;364:14:13;;357:22;339:41;;327:2;312:18;563:39:10;;;;;;;;1465:117;;;;;;:::i;:::-;1530:4;1553:22;;;;;;;;;;;;;;1465:117;609:20;;;;;-1:-1:-1;;;;;609:20:10;;;;;;-1:-1:-1;;;;;555:32:13;;;537:51;;525:2;510:18;609:20:10;391:203:13;946:289:10;;;;;;:::i;:::-;;:::i;:::-;;;1026:5;;-1:-1:-1;;;;;1026:5:10;1012:10;:19;1004:54;;;;-1:-1:-1;;;1004:54:10;;801:2:13;1004:54:10;;;783:21:13;840:2;820:18;;;813:30;-1:-1:-1;;;859:18:13;;;852:52;921:18;;1004:54:10;;;;;;;;;1077:7;:22;;;;;;;;;;;;;1076:23;1068:64;;;;-1:-1:-1;;;1068:64:10;;1152:2:13;1068:64:10;;;1134:21:13;1191:2;1171:18;;;1164:30;1230;1210:18;;;1203:58;1278:18;;1068:64:10;950:352:13;1068:64:10;1151:7;:22;;;;;;;;;;;:29;;-1:-1:-1;;1151:29:10;1176:4;1151:29;;;1195:33;1159:13;;1195:33;;;946:289;:::o;14:180:13:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:13;;14:180;-1:-1:-1;14:180:13:o"},"methodIdentifiers":{"isRevoked(bytes32)":"4294857f","owner()":"8da5cb5b","revoke(bytes32)":"b75c7dc6","revoked(bytes32)":"328a93e8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"certificateId\",\"type\":\"bytes32\"}],\"name\":\"CertificateRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"certificateId\",\"type\":\"bytes32\"}],\"name\":\"isRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"certificateId\",\"type\":\"bytes32\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"revoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple, baseline smart contract for managing certificate revocations. This contract uses a basic mapping to store the revocation status of each certificate. It serves as a performance and cost baseline to compare against more advanced revocation mechanisms (e.g., those using cryptographic accumulators).\",\"kind\":\"dev\",\"methods\":{\"isRevoked(bytes32)\":{\"details\":\"Checks if a certificate is revoked.\",\"params\":{\"certificateId\":\"The unique identifier of the certificate to check.\"},\"returns\":{\"_0\":\"bool Returns true if the certificate is revoked, false otherwise.\"}},\"revoke(bytes32)\":{\"details\":\"Revokes a certificate. Only the owner of the contract can call this function.\",\"params\":{\"certificateId\":\"The unique identifier of the certificate to revoke.\"}}},\"title\":\"BaselineRevocation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaselineRevocation.sol\":\"BaselineRevocation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BaselineRevocation.sol\":{\"keccak256\":\"0x46852eee6741c2b3aef1338da4c726c99a1c9756faac32cdc84de4ed3fb27a0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e16c2e308ff3a0d81985699fd4f1c4347dc6b26d22d9caeee8626dbcbb1aaa\",\"dweb:/ipfs/QmcGhwpUHRF48F7iUKchgkmBxJQUqMw5GNaxNKGjMnT8m5\"]}},\"version\":1}"}},"contracts/Certificate.sol":{"Certificate":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"certificateHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"institution","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"CertificateIssued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"certificateHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"institution","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"CertificateRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"institution","type":"address"}],"name":"InstitutionAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"institution","type":"address"}],"name":"InstitutionRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"institutionAddress","type":"address"}],"name":"addInstitution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"certificateHash","type":"bytes32"}],"name":"getCertificateStatus","outputs":[{"internalType":"enum Certificate.Status","name":"","type":"uint8"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getInstitutionAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInstitutionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"institutionAddress","type":"address"}],"name":"isInstitution","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"certificateHash","type":"bytes32"}],"name":"issueCertificate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"institutionAddress","type":"address"}],"name":"removeInstitution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"certificateHash","type":"bytes32"}],"name":"revokeCertificate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_5623":{"entryPoint":null,"id":5623,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":110,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:514:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:13","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:13"},"nodeType":"YulFunctionCall","src":"143:12:13"},"nodeType":"YulExpressionStatement","src":"143:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:13"},"nodeType":"YulFunctionCall","src":"112:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:13"},"nodeType":"YulFunctionCall","src":"108:32:13"},"nodeType":"YulIf","src":"105:52:13"},{"nodeType":"YulVariableDeclaration","src":"166:29:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:13"},"nodeType":"YulFunctionCall","src":"179:16:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:13"},"nodeType":"YulFunctionCall","src":"260:12:13"},"nodeType":"YulExpressionStatement","src":"260:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:13"},"nodeType":"YulFunctionCall","src":"239:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:13"},"nodeType":"YulFunctionCall","src":"235:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:13"},"nodeType":"YulFunctionCall","src":"224:31:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:13"},"nodeType":"YulFunctionCall","src":"214:42:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:13"},"nodeType":"YulFunctionCall","src":"207:50:13"},"nodeType":"YulIf","src":"204:70:13"},{"nodeType":"YulAssignment","src":"283:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:13"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:13","type":""}],"src":"14:290:13"},{"body":{"nodeType":"YulBlock","src":"410:102:13","statements":[{"nodeType":"YulAssignment","src":"420:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"432:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"443:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:13"},"nodeType":"YulFunctionCall","src":"428:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"420:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"493:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"498:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"489:3:13"},"nodeType":"YulFunctionCall","src":"489:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"502:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"485:3:13"},"nodeType":"YulFunctionCall","src":"485:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"473:3:13"},"nodeType":"YulFunctionCall","src":"473:32:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"455:6:13"},"nodeType":"YulFunctionCall","src":"455:51:13"},"nodeType":"YulExpressionStatement","src":"455:51:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"379:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"390:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"401:4:13","type":""}],"src":"309:203:13"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610ac0380380610ac083398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b6109c3806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610134578063a1f8182414610145578063af5b229114610158578063c6cbc52a1461016b578063cab621d91461017e578063f2fde38b146101c857600080fd5b80630331df07146100ae578063579b6a4a146100d6578063715018a6146100ec5780638747d5ed146100f65780638a23e29414610109575b600080fd5b6100c16100bc366004610862565b6101db565b60405190151581526020015b60405180910390f35b6100de6101ee565b6040519081526020016100cd565b6100f46101ff565b005b6100f4610104366004610862565b610213565b61011c61011736600461088b565b6102ae565b6040516001600160a01b0390911681526020016100cd565b6000546001600160a01b031661011c565b6100f461015336600461088b565b6102bb565b6100f4610166366004610862565b610416565b6100f461017936600461088b565b6104f4565b6101b961018c36600461088b565b6000908152600160208190526040909120805491015460ff8216926101009092046001600160a01b031691565b6040516100cd939291906108ba565b6100f46101d6366004610862565b6105d6565b60006101e8600283610614565b92915050565b60006101fa6002610639565b905090565b610207610643565b6102116000610670565b565b61021b610643565b6102266002826106c0565b6102775760405162461bcd60e51b815260206004820152601a60248201527f496e737469747574696f6e20646f6573206e6f7420657869737400000000000060448201526064015b60405180910390fd5b6040516001600160a01b038216907f1b0b878d06167e60e076b932df41de2b519d804c80445961e705ffbc98091f8790600090a250565b60006101e86002836106d5565b6102c6600233610614565b6102e25760405162461bcd60e51b815260040161026e906108f9565b60008181526001602052604081205460ff166002811115610305576103056108a4565b146103525760405162461bcd60e51b815260206004820152601a60248201527f436572746966696361746520616c726561647920657869737473000000000000604482015260640161026e565b6040805160608101825260018082523360208084019190915242838501526000858152908290529290922081518154929391929091839160ff1916908360028111156103a0576103a06108a4565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b031990911617815560409182015160019091015551339082907f36b518fed88ed88d56e6197f8ca72f326d86ff0612dc364838d93c4d5daab5a99061040b9042815260200190565b60405180910390a350565b61041e610643565b6001600160a01b0381166104665760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161026e565b6104716002826106e1565b6104bd5760405162461bcd60e51b815260206004820152601a60248201527f496e737469747574696f6e20616c726561647920657869737473000000000000604482015260640161026e565b6040516001600160a01b038216907f0bfb62b1fbb00013554ed3ff21ca179a519aee08ccf015aed3482362436b6b3590600090a250565b6104ff600233610614565b61051b5760405162461bcd60e51b815260040161026e906108f9565b600081815260016020819052604090912090815460ff166002811115610543576105436108a4565b146105905760405162461bcd60e51b815260206004820152601f60248201527f4365727469666963617465206e6f7420696e2069737375656420737461746500604482015260640161026e565b805460ff19166002178155604051428152339083907f85fe6dd2dfc4757558754564c7ff020182ec3c918257c2ff3a217a63791ec24f9060200160405180910390a35050565b6105de610643565b6001600160a01b03811661060857604051631e4fbdf760e01b81526000600482015260240161026e565b61061181610670565b50565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b60006101e8825490565b6000546001600160a01b031633146102115760405163118cdaa760e01b815233600482015260240161026e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610632836001600160a01b0384166106f6565b600061063283836107e9565b6000610632836001600160a01b038416610813565b600081815260018301602052604081205480156107df57600061071a600183610940565b855490915060009061072e90600190610940565b905080821461079357600086600001828154811061074e5761074e610961565b906000526020600020015490508087600001848154811061077157610771610961565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806107a4576107a4610977565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506101e8565b60009150506101e8565b600082600001828154811061080057610800610961565b9060005260206000200154905092915050565b600081815260018301602052604081205461085a575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101e8565b5060006101e8565b60006020828403121561087457600080fd5b81356001600160a01b038116811461063257600080fd5b60006020828403121561089d57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60608101600385106108dc57634e487b7160e01b600052602160045260246000fd5b9381526001600160a01b0392909216602083015260409091015290565b60208082526027908201527f43616c6c6572206973206e6f7420616e20617574686f72697a656420696e737460408201526634ba3aba34b7b760c91b606082015260800190565b818103818111156101e857634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122076513da9f8515bc5efa35643930f9fc3d17eb6b697c9efd6f2bdd1e90ad9242064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAC0 CODESIZE SUB DUP1 PUSH2 0xAC0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x6E JUMP JUMPDEST POP POP PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x9C3 DUP1 PUSH2 0xFD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xA1F81824 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xAF5B2291 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xC6CBC52A EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xCAB621D9 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x331DF07 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x579B6A4A EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x8747D5ED EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x8A23E294 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x1FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11C JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x416 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x88B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8BA JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8 PUSH1 0x2 DUP4 PUSH2 0x614 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA PUSH1 0x2 PUSH2 0x639 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x211 PUSH1 0x0 PUSH2 0x670 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x21B PUSH2 0x643 JUMP JUMPDEST PUSH2 0x226 PUSH1 0x2 DUP3 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x277 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E737469747574696F6E20646F6573206E6F74206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x1B0B878D06167E60E076B932DF41DE2B519D804C80445961E705FFBC98091F87 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8 PUSH1 0x2 DUP4 PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0x2C6 PUSH1 0x2 CALLER PUSH2 0x614 JUMP JUMPDEST PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x305 JUMPI PUSH2 0x305 PUSH2 0x8A4 JUMP JUMPDEST EQ PUSH2 0x352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436572746966696361746520616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE CALLER PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP DUP4 DUP6 ADD MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP2 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x3A0 PUSH2 0x8A4 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE MLOAD CALLER SWAP1 DUP3 SWAP1 PUSH32 0x36B518FED88ED88D56E6197F8CA72F326D86FF0612DC364838D93C4D5DAAB5A9 SWAP1 PUSH2 0x40B SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x41E PUSH2 0x643 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x26E JUMP JUMPDEST PUSH2 0x471 PUSH1 0x2 DUP3 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x4BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E737469747574696F6E20616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBFB62B1FBB00013554ED3FF21CA179A519AEE08CCF015AED3482362436B6B35 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4FF PUSH1 0x2 CALLER PUSH2 0x614 JUMP JUMPDEST PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x8A4 JUMP JUMPDEST EQ PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4365727469666963617465206E6F7420696E2069737375656420737461746500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x26E JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR DUP2 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP1 DUP4 SWAP1 PUSH32 0x85FE6DD2DFC4757558754564C7FF020182EC3C918257C2FF3A217A63791EC24F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5DE PUSH2 0x643 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x26E JUMP JUMPDEST PUSH2 0x611 DUP2 PUSH2 0x670 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x26E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x632 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x632 DUP4 DUP4 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x632 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x813 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x7DF JUMPI PUSH1 0x0 PUSH2 0x71A PUSH1 0x1 DUP4 PUSH2 0x940 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x72E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x793 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x74E JUMPI PUSH2 0x74E PUSH2 0x961 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x771 JUMPI PUSH2 0x771 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x7A4 JUMPI PUSH2 0x7A4 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x800 JUMPI PUSH2 0x800 PUSH2 0x961 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x85A JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1E8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD PUSH1 0x3 DUP6 LT PUSH2 0x8DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420616E20617574686F72697A656420696E7374 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x34BA3ABA34B7B7 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1E8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x513DA9F8515BC5EFA35643930F9FC3D17EB6B697C9EFD6 CALLCODE 0xBD 0xD1 0xE9 EXP 0xD9 0x24 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"490:4812:11:-:0;;;1777:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1819:12;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:13;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;1777:58:11;490:4812;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:13:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:13;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:13:o;309:203::-;490:4812:11;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_add_4834":{"entryPoint":2067,"id":4834,"parameterSlots":2,"returnSlots":1},"@_at_5011":{"entryPoint":2025,"id":5011,"parameterSlots":2,"returnSlots":1},"@_checkOwner_84":{"entryPoint":1603,"id":84,"parameterSlots":0,"returnSlots":0},"@_contains_4980":{"entryPoint":null,"id":4980,"parameterSlots":2,"returnSlots":1},"@_length_4994":{"entryPoint":null,"id":4994,"parameterSlots":1,"returnSlots":1},"@_msgSender_1069":{"entryPoint":null,"id":1069,"parameterSlots":0,"returnSlots":1},"@_remove_4918":{"entryPoint":1782,"id":4918,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1648,"id":146,"parameterSlots":1,"returnSlots":0},"@addInstitution_5654":{"entryPoint":1046,"id":5654,"parameterSlots":1,"returnSlots":0},"@add_5190":{"entryPoint":1761,"id":5190,"parameterSlots":2,"returnSlots":1},"@at_5299":{"entryPoint":1749,"id":5299,"parameterSlots":2,"returnSlots":1},"@contains_5257":{"entryPoint":1556,"id":5257,"parameterSlots":2,"returnSlots":1},"@getCertificateStatus_5785":{"entryPoint":null,"id":5785,"parameterSlots":1,"returnSlots":3},"@getInstitutionAtIndex_5824":{"entryPoint":686,"id":5824,"parameterSlots":1,"returnSlots":1},"@getInstitutionCount_5810":{"entryPoint":494,"id":5810,"parameterSlots":0,"returnSlots":1},"@isInstitution_5799":{"entryPoint":475,"id":5799,"parameterSlots":1,"returnSlots":1},"@issueCertificate_5716":{"entryPoint":699,"id":5716,"parameterSlots":1,"returnSlots":0},"@length_5272":{"entryPoint":1593,"id":5272,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@removeInstitution_5675":{"entryPoint":531,"id":5675,"parameterSlots":1,"returnSlots":0},"@remove_5217":{"entryPoint":1728,"id":5217,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":511,"id":98,"parameterSlots":0,"returnSlots":0},"@revokeCertificate_5756":{"entryPoint":1268,"id":5756,"parameterSlots":1,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1494,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":2146,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2187,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_Status_$5584_t_address_t_uint256__to_t_uint8_t_address_t_uint256__fromStack_reversed":{"entryPoint":2234,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_796bc0105559c64faf9d51eda319ed0d9754bd31f17bdc3c5e1ee6dd5f1094db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b62068e094c5a2990223414f27f650c0f3e60cd7605e19034037bf9843317727__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2297,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_da3dad5b55ad950cea66b05e81ef2aabf41de1d576076144035ffc9372d21333__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e9691b1f375736bd141df959b646eeb717a61200a748298fa030020a17ca50fc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f6efd108e50d2393eaaee841cb8ef980f9930ed7c3e41ed9913e45453582c1b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2368,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":2212,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":2423,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2401,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4569:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:216:13","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:13"},"nodeType":"YulFunctionCall","src":"132:12:13"},"nodeType":"YulExpressionStatement","src":"132:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:13"},"nodeType":"YulFunctionCall","src":"101:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:13"},"nodeType":"YulFunctionCall","src":"97:32:13"},"nodeType":"YulIf","src":"94:52:13"},{"nodeType":"YulVariableDeclaration","src":"155:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"181:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"168:12:13"},"nodeType":"YulFunctionCall","src":"168:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"159:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:13"},"nodeType":"YulFunctionCall","src":"256:12:13"},"nodeType":"YulExpressionStatement","src":"256:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"213:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"224:5:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"239:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"244:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"235:3:13"},"nodeType":"YulFunctionCall","src":"235:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"231:3:13"},"nodeType":"YulFunctionCall","src":"231:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"220:3:13"},"nodeType":"YulFunctionCall","src":"220:31:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"210:2:13"},"nodeType":"YulFunctionCall","src":"210:42:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"203:6:13"},"nodeType":"YulFunctionCall","src":"203:50:13"},"nodeType":"YulIf","src":"200:70:13"},{"nodeType":"YulAssignment","src":"279:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:13"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:13","type":""}],"src":"14:286:13"},{"body":{"nodeType":"YulBlock","src":"400:92:13","statements":[{"nodeType":"YulAssignment","src":"410:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:13"},"nodeType":"YulFunctionCall","src":"418:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:13"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:13"},"nodeType":"YulFunctionCall","src":"470:14:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:13"},"nodeType":"YulFunctionCall","src":"463:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:13"},"nodeType":"YulFunctionCall","src":"445:41:13"},"nodeType":"YulExpressionStatement","src":"445:41:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:13","type":""}],"src":"305:187:13"},{"body":{"nodeType":"YulBlock","src":"598:76:13","statements":[{"nodeType":"YulAssignment","src":"608:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"620:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"631:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"616:3:13"},"nodeType":"YulFunctionCall","src":"616:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"608:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"650:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"661:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"643:6:13"},"nodeType":"YulFunctionCall","src":"643:25:13"},"nodeType":"YulExpressionStatement","src":"643:25:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"567:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"578:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"589:4:13","type":""}],"src":"497:177:13"},{"body":{"nodeType":"YulBlock","src":"749:110:13","statements":[{"body":{"nodeType":"YulBlock","src":"795:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"804:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"807:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"797:6:13"},"nodeType":"YulFunctionCall","src":"797:12:13"},"nodeType":"YulExpressionStatement","src":"797:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"770:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"779:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"766:3:13"},"nodeType":"YulFunctionCall","src":"766:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"791:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"762:3:13"},"nodeType":"YulFunctionCall","src":"762:32:13"},"nodeType":"YulIf","src":"759:52:13"},{"nodeType":"YulAssignment","src":"820:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"843:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"830:12:13"},"nodeType":"YulFunctionCall","src":"830:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"820:6:13"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"715:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"726:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"738:6:13","type":""}],"src":"679:180:13"},{"body":{"nodeType":"YulBlock","src":"965:102:13","statements":[{"nodeType":"YulAssignment","src":"975:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"987:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"998:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"983:3:13"},"nodeType":"YulFunctionCall","src":"983:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"975:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1017:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1032:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1048:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1053:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1044:3:13"},"nodeType":"YulFunctionCall","src":"1044:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"1057:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1040:3:13"},"nodeType":"YulFunctionCall","src":"1040:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1028:3:13"},"nodeType":"YulFunctionCall","src":"1028:32:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1010:6:13"},"nodeType":"YulFunctionCall","src":"1010:51:13"},"nodeType":"YulExpressionStatement","src":"1010:51:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"934:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"945:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"956:4:13","type":""}],"src":"864:203:13"},{"body":{"nodeType":"YulBlock","src":"1142:110:13","statements":[{"body":{"nodeType":"YulBlock","src":"1188:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1197:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1200:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1190:6:13"},"nodeType":"YulFunctionCall","src":"1190:12:13"},"nodeType":"YulExpressionStatement","src":"1190:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1163:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1172:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1159:3:13"},"nodeType":"YulFunctionCall","src":"1159:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"1184:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1155:3:13"},"nodeType":"YulFunctionCall","src":"1155:32:13"},"nodeType":"YulIf","src":"1152:52:13"},{"nodeType":"YulAssignment","src":"1213:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1236:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1223:12:13"},"nodeType":"YulFunctionCall","src":"1223:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1213:6:13"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1108:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1119:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1131:6:13","type":""}],"src":"1072:180:13"},{"body":{"nodeType":"YulBlock","src":"1289:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1306:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1313:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1318:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1309:3:13"},"nodeType":"YulFunctionCall","src":"1309:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1299:6:13"},"nodeType":"YulFunctionCall","src":"1299:31:13"},"nodeType":"YulExpressionStatement","src":"1299:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1346:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1349:4:13","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1339:6:13"},"nodeType":"YulFunctionCall","src":"1339:15:13"},"nodeType":"YulExpressionStatement","src":"1339:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1370:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1373:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1363:6:13"},"nodeType":"YulFunctionCall","src":"1363:15:13"},"nodeType":"YulExpressionStatement","src":"1363:15:13"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"1257:127:13"},{"body":{"nodeType":"YulBlock","src":"1555:341:13","statements":[{"nodeType":"YulAssignment","src":"1565:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1577:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1588:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1573:3:13"},"nodeType":"YulFunctionCall","src":"1573:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1565:4:13"}]},{"body":{"nodeType":"YulBlock","src":"1633:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1654:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1661:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1666:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1657:3:13"},"nodeType":"YulFunctionCall","src":"1657:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1647:6:13"},"nodeType":"YulFunctionCall","src":"1647:31:13"},"nodeType":"YulExpressionStatement","src":"1647:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1698:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1701:4:13","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1691:6:13"},"nodeType":"YulFunctionCall","src":"1691:15:13"},"nodeType":"YulExpressionStatement","src":"1691:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1726:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1729:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1719:6:13"},"nodeType":"YulFunctionCall","src":"1719:15:13"},"nodeType":"YulExpressionStatement","src":"1719:15:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1613:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1621:1:13","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1610:2:13"},"nodeType":"YulFunctionCall","src":"1610:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1603:6:13"},"nodeType":"YulFunctionCall","src":"1603:21:13"},"nodeType":"YulIf","src":"1600:144:13"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1760:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"1771:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1753:6:13"},"nodeType":"YulFunctionCall","src":"1753:25:13"},"nodeType":"YulExpressionStatement","src":"1753:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1798:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1809:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1794:3:13"},"nodeType":"YulFunctionCall","src":"1794:18:13"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1818:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1834:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1830:3:13"},"nodeType":"YulFunctionCall","src":"1830:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"1843:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1826:3:13"},"nodeType":"YulFunctionCall","src":"1826:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1814:3:13"},"nodeType":"YulFunctionCall","src":"1814:32:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1787:6:13"},"nodeType":"YulFunctionCall","src":"1787:60:13"},"nodeType":"YulExpressionStatement","src":"1787:60:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1867:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1878:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:13"},"nodeType":"YulFunctionCall","src":"1863:18:13"},{"name":"value2","nodeType":"YulIdentifier","src":"1883:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1856:6:13"},"nodeType":"YulFunctionCall","src":"1856:34:13"},"nodeType":"YulExpressionStatement","src":"1856:34:13"}]},"name":"abi_encode_tuple_t_enum$_Status_$5584_t_address_t_uint256__to_t_uint8_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1508:9:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1519:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1527:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1535:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1546:4:13","type":""}],"src":"1389:507:13"},{"body":{"nodeType":"YulBlock","src":"2075:176:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2092:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2103:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2085:6:13"},"nodeType":"YulFunctionCall","src":"2085:21:13"},"nodeType":"YulExpressionStatement","src":"2085:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2126:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2137:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:13"},"nodeType":"YulFunctionCall","src":"2122:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"2142:2:13","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2115:6:13"},"nodeType":"YulFunctionCall","src":"2115:30:13"},"nodeType":"YulExpressionStatement","src":"2115:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2165:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2176:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2161:3:13"},"nodeType":"YulFunctionCall","src":"2161:18:13"},{"hexValue":"496e737469747574696f6e20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"2181:28:13","type":"","value":"Institution does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2154:6:13"},"nodeType":"YulFunctionCall","src":"2154:56:13"},"nodeType":"YulExpressionStatement","src":"2154:56:13"},{"nodeType":"YulAssignment","src":"2219:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2231:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2242:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2227:3:13"},"nodeType":"YulFunctionCall","src":"2227:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2219:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_796bc0105559c64faf9d51eda319ed0d9754bd31f17bdc3c5e1ee6dd5f1094db__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2052:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2066:4:13","type":""}],"src":"1901:350:13"},{"body":{"nodeType":"YulBlock","src":"2430:229:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2447:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2458:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2440:6:13"},"nodeType":"YulFunctionCall","src":"2440:21:13"},"nodeType":"YulExpressionStatement","src":"2440:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2492:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2477:3:13"},"nodeType":"YulFunctionCall","src":"2477:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"2497:2:13","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2470:6:13"},"nodeType":"YulFunctionCall","src":"2470:30:13"},"nodeType":"YulExpressionStatement","src":"2470:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2520:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2531:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2516:3:13"},"nodeType":"YulFunctionCall","src":"2516:18:13"},{"hexValue":"43616c6c6572206973206e6f7420616e20617574686f72697a656420696e7374","kind":"string","nodeType":"YulLiteral","src":"2536:34:13","type":"","value":"Caller is not an authorized inst"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2509:6:13"},"nodeType":"YulFunctionCall","src":"2509:62:13"},"nodeType":"YulExpressionStatement","src":"2509:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2591:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2602:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2587:3:13"},"nodeType":"YulFunctionCall","src":"2587:18:13"},{"hexValue":"69747574696f6e","kind":"string","nodeType":"YulLiteral","src":"2607:9:13","type":"","value":"itution"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2580:6:13"},"nodeType":"YulFunctionCall","src":"2580:37:13"},"nodeType":"YulExpressionStatement","src":"2580:37:13"},{"nodeType":"YulAssignment","src":"2626:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2638:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2649:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:13"},"nodeType":"YulFunctionCall","src":"2634:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2626:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_b62068e094c5a2990223414f27f650c0f3e60cd7605e19034037bf9843317727__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2407:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2421:4:13","type":""}],"src":"2256:403:13"},{"body":{"nodeType":"YulBlock","src":"2838:176:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2855:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2866:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2848:6:13"},"nodeType":"YulFunctionCall","src":"2848:21:13"},"nodeType":"YulExpressionStatement","src":"2848:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2889:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2900:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2885:3:13"},"nodeType":"YulFunctionCall","src":"2885:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"2905:2:13","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2878:6:13"},"nodeType":"YulFunctionCall","src":"2878:30:13"},"nodeType":"YulExpressionStatement","src":"2878:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2928:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2939:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2924:3:13"},"nodeType":"YulFunctionCall","src":"2924:18:13"},{"hexValue":"436572746966696361746520616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"2944:28:13","type":"","value":"Certificate already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2917:6:13"},"nodeType":"YulFunctionCall","src":"2917:56:13"},"nodeType":"YulExpressionStatement","src":"2917:56:13"},{"nodeType":"YulAssignment","src":"2982:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2994:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3005:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2990:3:13"},"nodeType":"YulFunctionCall","src":"2990:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2982:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_e9691b1f375736bd141df959b646eeb717a61200a748298fa030020a17ca50fc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2815:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2829:4:13","type":""}],"src":"2664:350:13"},{"body":{"nodeType":"YulBlock","src":"3193:165:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3210:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3221:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3203:6:13"},"nodeType":"YulFunctionCall","src":"3203:21:13"},"nodeType":"YulExpressionStatement","src":"3203:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3244:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3255:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3240:3:13"},"nodeType":"YulFunctionCall","src":"3240:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"3260:2:13","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3233:6:13"},"nodeType":"YulFunctionCall","src":"3233:30:13"},"nodeType":"YulExpressionStatement","src":"3233:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3283:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3294:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3279:3:13"},"nodeType":"YulFunctionCall","src":"3279:18:13"},{"hexValue":"496e76616c69642061646472657373","kind":"string","nodeType":"YulLiteral","src":"3299:17:13","type":"","value":"Invalid address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3272:6:13"},"nodeType":"YulFunctionCall","src":"3272:45:13"},"nodeType":"YulExpressionStatement","src":"3272:45:13"},{"nodeType":"YulAssignment","src":"3326:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3338:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3349:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3334:3:13"},"nodeType":"YulFunctionCall","src":"3334:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3326:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3170:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3184:4:13","type":""}],"src":"3019:339:13"},{"body":{"nodeType":"YulBlock","src":"3537:176:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3554:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3565:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3547:6:13"},"nodeType":"YulFunctionCall","src":"3547:21:13"},"nodeType":"YulExpressionStatement","src":"3547:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3588:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3599:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3584:3:13"},"nodeType":"YulFunctionCall","src":"3584:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"3604:2:13","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3577:6:13"},"nodeType":"YulFunctionCall","src":"3577:30:13"},"nodeType":"YulExpressionStatement","src":"3577:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3627:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3638:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3623:3:13"},"nodeType":"YulFunctionCall","src":"3623:18:13"},{"hexValue":"496e737469747574696f6e20616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"3643:28:13","type":"","value":"Institution already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3616:6:13"},"nodeType":"YulFunctionCall","src":"3616:56:13"},"nodeType":"YulExpressionStatement","src":"3616:56:13"},{"nodeType":"YulAssignment","src":"3681:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3693:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3704:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3689:3:13"},"nodeType":"YulFunctionCall","src":"3689:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3681:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_f6efd108e50d2393eaaee841cb8ef980f9930ed7c3e41ed9913e45453582c1b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3514:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3528:4:13","type":""}],"src":"3363:350:13"},{"body":{"nodeType":"YulBlock","src":"3892:181:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3909:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3920:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3902:6:13"},"nodeType":"YulFunctionCall","src":"3902:21:13"},"nodeType":"YulExpressionStatement","src":"3902:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3943:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3954:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:13"},"nodeType":"YulFunctionCall","src":"3939:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"3959:2:13","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3932:6:13"},"nodeType":"YulFunctionCall","src":"3932:30:13"},"nodeType":"YulExpressionStatement","src":"3932:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3982:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3993:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3978:3:13"},"nodeType":"YulFunctionCall","src":"3978:18:13"},{"hexValue":"4365727469666963617465206e6f7420696e20697373756564207374617465","kind":"string","nodeType":"YulLiteral","src":"3998:33:13","type":"","value":"Certificate not in issued state"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3971:6:13"},"nodeType":"YulFunctionCall","src":"3971:61:13"},"nodeType":"YulExpressionStatement","src":"3971:61:13"},{"nodeType":"YulAssignment","src":"4041:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4053:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4064:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4049:3:13"},"nodeType":"YulFunctionCall","src":"4049:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4041:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_da3dad5b55ad950cea66b05e81ef2aabf41de1d576076144035ffc9372d21333__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3869:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3883:4:13","type":""}],"src":"3718:355:13"},{"body":{"nodeType":"YulBlock","src":"4127:176:13","statements":[{"nodeType":"YulAssignment","src":"4137:17:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4149:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"4152:1:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4145:3:13"},"nodeType":"YulFunctionCall","src":"4145:9:13"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4137:4:13"}]},{"body":{"nodeType":"YulBlock","src":"4186:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4207:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4214:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4219:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4210:3:13"},"nodeType":"YulFunctionCall","src":"4210:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4200:6:13"},"nodeType":"YulFunctionCall","src":"4200:31:13"},"nodeType":"YulExpressionStatement","src":"4200:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4251:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4254:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4244:6:13"},"nodeType":"YulFunctionCall","src":"4244:15:13"},"nodeType":"YulExpressionStatement","src":"4244:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4272:6:13"},"nodeType":"YulFunctionCall","src":"4272:15:13"},"nodeType":"YulExpressionStatement","src":"4272:15:13"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"4169:4:13"},{"name":"x","nodeType":"YulIdentifier","src":"4175:1:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4166:2:13"},"nodeType":"YulFunctionCall","src":"4166:11:13"},"nodeType":"YulIf","src":"4163:134:13"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4109:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"4112:1:13","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4118:4:13","type":""}],"src":"4078:225:13"},{"body":{"nodeType":"YulBlock","src":"4340:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4357:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4364:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4369:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4360:3:13"},"nodeType":"YulFunctionCall","src":"4360:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4350:6:13"},"nodeType":"YulFunctionCall","src":"4350:31:13"},"nodeType":"YulExpressionStatement","src":"4350:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4397:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4400:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4390:6:13"},"nodeType":"YulFunctionCall","src":"4390:15:13"},"nodeType":"YulExpressionStatement","src":"4390:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4421:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4424:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4414:6:13"},"nodeType":"YulFunctionCall","src":"4414:15:13"},"nodeType":"YulExpressionStatement","src":"4414:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4308:127:13"},{"body":{"nodeType":"YulBlock","src":"4472:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4489:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4496:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4501:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4492:3:13"},"nodeType":"YulFunctionCall","src":"4492:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4482:6:13"},"nodeType":"YulFunctionCall","src":"4482:31:13"},"nodeType":"YulExpressionStatement","src":"4482:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4529:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4532:4:13","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4522:6:13"},"nodeType":"YulFunctionCall","src":"4522:15:13"},"nodeType":"YulExpressionStatement","src":"4522:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4553:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4556:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4546:6:13"},"nodeType":"YulFunctionCall","src":"4546:15:13"},"nodeType":"YulExpressionStatement","src":"4546:15:13"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"4440:127:13"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_Status_$5584_t_address_t_uint256__to_t_uint8_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_796bc0105559c64faf9d51eda319ed0d9754bd31f17bdc3c5e1ee6dd5f1094db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Institution does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b62068e094c5a2990223414f27f650c0f3e60cd7605e19034037bf9843317727__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Caller is not an authorized inst\")\n        mstore(add(headStart, 96), \"itution\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e9691b1f375736bd141df959b646eeb717a61200a748298fa030020a17ca50fc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Certificate already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f6efd108e50d2393eaaee841cb8ef980f9930ed7c3e41ed9913e45453582c1b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Institution already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_da3dad5b55ad950cea66b05e81ef2aabf41de1d576076144035ffc9372d21333__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Certificate not in issued state\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610134578063a1f8182414610145578063af5b229114610158578063c6cbc52a1461016b578063cab621d91461017e578063f2fde38b146101c857600080fd5b80630331df07146100ae578063579b6a4a146100d6578063715018a6146100ec5780638747d5ed146100f65780638a23e29414610109575b600080fd5b6100c16100bc366004610862565b6101db565b60405190151581526020015b60405180910390f35b6100de6101ee565b6040519081526020016100cd565b6100f46101ff565b005b6100f4610104366004610862565b610213565b61011c61011736600461088b565b6102ae565b6040516001600160a01b0390911681526020016100cd565b6000546001600160a01b031661011c565b6100f461015336600461088b565b6102bb565b6100f4610166366004610862565b610416565b6100f461017936600461088b565b6104f4565b6101b961018c36600461088b565b6000908152600160208190526040909120805491015460ff8216926101009092046001600160a01b031691565b6040516100cd939291906108ba565b6100f46101d6366004610862565b6105d6565b60006101e8600283610614565b92915050565b60006101fa6002610639565b905090565b610207610643565b6102116000610670565b565b61021b610643565b6102266002826106c0565b6102775760405162461bcd60e51b815260206004820152601a60248201527f496e737469747574696f6e20646f6573206e6f7420657869737400000000000060448201526064015b60405180910390fd5b6040516001600160a01b038216907f1b0b878d06167e60e076b932df41de2b519d804c80445961e705ffbc98091f8790600090a250565b60006101e86002836106d5565b6102c6600233610614565b6102e25760405162461bcd60e51b815260040161026e906108f9565b60008181526001602052604081205460ff166002811115610305576103056108a4565b146103525760405162461bcd60e51b815260206004820152601a60248201527f436572746966696361746520616c726561647920657869737473000000000000604482015260640161026e565b6040805160608101825260018082523360208084019190915242838501526000858152908290529290922081518154929391929091839160ff1916908360028111156103a0576103a06108a4565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b031990911617815560409182015160019091015551339082907f36b518fed88ed88d56e6197f8ca72f326d86ff0612dc364838d93c4d5daab5a99061040b9042815260200190565b60405180910390a350565b61041e610643565b6001600160a01b0381166104665760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161026e565b6104716002826106e1565b6104bd5760405162461bcd60e51b815260206004820152601a60248201527f496e737469747574696f6e20616c726561647920657869737473000000000000604482015260640161026e565b6040516001600160a01b038216907f0bfb62b1fbb00013554ed3ff21ca179a519aee08ccf015aed3482362436b6b3590600090a250565b6104ff600233610614565b61051b5760405162461bcd60e51b815260040161026e906108f9565b600081815260016020819052604090912090815460ff166002811115610543576105436108a4565b146105905760405162461bcd60e51b815260206004820152601f60248201527f4365727469666963617465206e6f7420696e2069737375656420737461746500604482015260640161026e565b805460ff19166002178155604051428152339083907f85fe6dd2dfc4757558754564c7ff020182ec3c918257c2ff3a217a63791ec24f9060200160405180910390a35050565b6105de610643565b6001600160a01b03811661060857604051631e4fbdf760e01b81526000600482015260240161026e565b61061181610670565b50565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b60006101e8825490565b6000546001600160a01b031633146102115760405163118cdaa760e01b815233600482015260240161026e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610632836001600160a01b0384166106f6565b600061063283836107e9565b6000610632836001600160a01b038416610813565b600081815260018301602052604081205480156107df57600061071a600183610940565b855490915060009061072e90600190610940565b905080821461079357600086600001828154811061074e5761074e610961565b906000526020600020015490508087600001848154811061077157610771610961565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806107a4576107a4610977565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506101e8565b60009150506101e8565b600082600001828154811061080057610800610961565b9060005260206000200154905092915050565b600081815260018301602052604081205461085a575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101e8565b5060006101e8565b60006020828403121561087457600080fd5b81356001600160a01b038116811461063257600080fd5b60006020828403121561089d57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60608101600385106108dc57634e487b7160e01b600052602160045260246000fd5b9381526001600160a01b0392909216602083015260409091015290565b60208082526027908201527f43616c6c6572206973206e6f7420616e20617574686f72697a656420696e737460408201526634ba3aba34b7b760c91b606082015260800190565b818103818111156101e857634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122076513da9f8515bc5efa35643930f9fc3d17eb6b697c9efd6f2bdd1e90ad9242064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xA1F81824 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xAF5B2291 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xC6CBC52A EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xCAB621D9 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x331DF07 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x579B6A4A EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x8747D5ED EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x8A23E294 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x1FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11C JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x416 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x88B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8BA JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8 PUSH1 0x2 DUP4 PUSH2 0x614 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA PUSH1 0x2 PUSH2 0x639 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x211 PUSH1 0x0 PUSH2 0x670 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x21B PUSH2 0x643 JUMP JUMPDEST PUSH2 0x226 PUSH1 0x2 DUP3 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x277 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E737469747574696F6E20646F6573206E6F74206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x1B0B878D06167E60E076B932DF41DE2B519D804C80445961E705FFBC98091F87 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8 PUSH1 0x2 DUP4 PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0x2C6 PUSH1 0x2 CALLER PUSH2 0x614 JUMP JUMPDEST PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x305 JUMPI PUSH2 0x305 PUSH2 0x8A4 JUMP JUMPDEST EQ PUSH2 0x352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436572746966696361746520616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE CALLER PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP DUP4 DUP6 ADD MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP2 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x3A0 PUSH2 0x8A4 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE MLOAD CALLER SWAP1 DUP3 SWAP1 PUSH32 0x36B518FED88ED88D56E6197F8CA72F326D86FF0612DC364838D93C4D5DAAB5A9 SWAP1 PUSH2 0x40B SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x41E PUSH2 0x643 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x26E JUMP JUMPDEST PUSH2 0x471 PUSH1 0x2 DUP3 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x4BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E737469747574696F6E20616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBFB62B1FBB00013554ED3FF21CA179A519AEE08CCF015AED3482362436B6B35 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4FF PUSH1 0x2 CALLER PUSH2 0x614 JUMP JUMPDEST PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x8A4 JUMP JUMPDEST EQ PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4365727469666963617465206E6F7420696E2069737375656420737461746500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x26E JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR DUP2 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP1 DUP4 SWAP1 PUSH32 0x85FE6DD2DFC4757558754564C7FF020182EC3C918257C2FF3A217A63791EC24F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5DE PUSH2 0x643 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x26E JUMP JUMPDEST PUSH2 0x611 DUP2 PUSH2 0x670 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x26E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x632 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x632 DUP4 DUP4 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x632 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x813 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x7DF JUMPI PUSH1 0x0 PUSH2 0x71A PUSH1 0x1 DUP4 PUSH2 0x940 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x72E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x793 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x74E JUMPI PUSH2 0x74E PUSH2 0x961 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x771 JUMPI PUSH2 0x771 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x7A4 JUMPI PUSH2 0x7A4 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x800 JUMPI PUSH2 0x800 PUSH2 0x961 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x85A JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1E8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD PUSH1 0x3 DUP6 LT PUSH2 0x8DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420616E20617574686F72697A656420696E7374 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x34BA3ABA34B7B7 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1E8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x513DA9F8515BC5EFA35643930F9FC3D17EB6B697C9EFD6 CALLCODE 0xBD 0xD1 0xE9 EXP 0xD9 0x24 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"490:4812:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4761:146;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;4761:146:11;;;;;;;;4988:109;;;:::i;:::-;;;643:25:13;;;631:2;616:18;4988:109:11;497:177:13;2293:101:0;;;:::i;:::-;;2513:223:11;;;;;;:::i;:::-;;:::i;5175:125::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1028:32:13;;;1010:51;;998:2;983:18;5175:125:11;864:203:13;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;2967:460:11;;;;;;:::i;:::-;;:::i;2060:285::-;;;;;;:::i;:::-;;:::i;3563:470::-;;;;;;:::i;:::-;;:::i;4294:256::-;;;;;;:::i;:::-;4372:6;4442:30;;;:13;:30;;;;;;;;4490:11;;4528:14;;;4490:11;;;;;4503:23;;;-1:-1:-1;;;;;4503:23:11;;4294:256;;;;;;;;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;4761:146:11:-;4835:4;4858:42;:13;4881:18;4858:22;:42::i;:::-;4851:49;4761:146;-1:-1:-1;;4761:146:11:o;4988:109::-;5042:7;5068:22;:13;:20;:22::i;:::-;5061:29;;4988:109;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2513:223:11:-;1531:13:0;:11;:13::i;:::-;2605:40:11::1;:13;2626:18:::0;2605:20:::1;:40::i;:::-;2597:79;;;::::0;-1:-1:-1;;;2597:79:11;;2103:2:13;2597:79:11::1;::::0;::::1;2085:21:13::0;2142:2;2122:18;;;2115:30;2181:28;2161:18;;;2154:56;2227:18;;2597:79:11::1;;;;;;;;;2691:38;::::0;-1:-1:-1;;;;;2691:38:11;::::1;::::0;::::1;::::0;;;::::1;2513:223:::0;:::o;5175:125::-;5244:7;5270:23;:13;5287:5;5270:16;:23::i;2967:460::-;1647:34;:13;1670:10;1647:22;:34::i;:::-;1639:86;;;;-1:-1:-1;;;1639:86:11;;;;;;;:::i;:::-;3102:15:::1;3061:30:::0;;;:13:::1;:30;::::0;;;;:37;::::1;;:56;::::0;::::1;;;;;;:::i;:::-;;3053:95;;;::::0;-1:-1:-1;;;3053:95:11;;2866:2:13;3053:95:11::1;::::0;::::1;2848:21:13::0;2905:2;2885:18;;;2878:30;2944:28;2924:18;;;2917:56;2990:18;;3053:95:11::1;2664:350:13::0;3053:95:11::1;3192:149;::::0;;::::1;::::0;::::1;::::0;;3233:13:::1;3192:149:::0;;;3280:10:::1;3192:149;::::0;;::::1;::::0;;;;3315:15:::1;3192:149:::0;;;;-1:-1:-1;3159:30:11;;;;;;;;;;;:182;;;;3192:149;;3159:30;;:182;;:30;;-1:-1:-1;;3159:182:11::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;3159:182:11::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;3159:182:11;;::::1;;;-1:-1:-1::0;;;;;;3159:182:11;;::::1;;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;3357:63;3392:10:::1;::::0;3375:15;;3357:63:::1;::::0;::::1;::::0;3404:15:::1;643:25:13::0;;631:2;616:18;;497:177;3357:63:11::1;;;;;;;;2967:460:::0;:::o;2060:285::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2149:32:11;::::1;2141:60;;;::::0;-1:-1:-1;;;2141:60:11;;3221:2:13;2141:60:11::1;::::0;::::1;3203:21:13::0;3260:2;3240:18;;;3233:30;-1:-1:-1;;;3279:18:13;;;3272:45;3334:18;;2141:60:11::1;3019:339:13::0;2141:60:11::1;2219:37;:13;2237:18:::0;2219:17:::1;:37::i;:::-;2211:76;;;::::0;-1:-1:-1;;;2211:76:11;;3565:2:13;2211:76:11::1;::::0;::::1;3547:21:13::0;3604:2;3584:18;;;3577:30;3643:28;3623:18;;;3616:56;3689:18;;2211:76:11::1;3363:350:13::0;2211:76:11::1;2302:36;::::0;-1:-1:-1;;;;;2302:36:11;::::1;::::0;::::1;::::0;;;::::1;2060:285:::0;:::o;3563:470::-;1647:34;:13;1670:10;1647:22;:34::i;:::-;1639:86;;;;-1:-1:-1;;;1639:86:11;;;;;;;:::i;:::-;3650:31:::1;3684:30:::0;;;:13:::1;:30;::::0;;;;;;;;3732:11;;::::1;;:28;::::0;::::1;;;;;;:::i;:::-;;3724:72;;;::::0;-1:-1:-1;;;3724:72:11;;3920:2:13;3724:72:11::1;::::0;::::1;3902:21:13::0;3959:2;3939:18;;;3932:30;3998:33;3978:18;;;3971:61;4049:18;;3724:72:11::1;3718:355:13::0;3724:72:11::1;3919:28:::0;;-1:-1:-1;;3919:28:11::1;3933:14;3919:28;::::0;;3962:64:::1;::::0;4010:15:::1;643:25:13::0;;3998:10:11::1;::::0;3981:15;;3962:64:::1;::::0;631:2:13;616:18;3962:64:11::1;;;;;;;3640:393;3563:470:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1010:51:13::0;983:18;;2672:31:0::1;864:203:13::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;10284:165:9:-;-1:-1:-1;;;;;10417:23:9;;10364:4;5006:21;;;:14;;;:21;;;;;;:26;;10387:55;10380:62;10284:165;-1:-1:-1;;;10284:165:9:o;10530:115::-;10593:7;10619:19;10627:3;5202:18;;5120:107;1796:162:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:3;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:3;1901:40:0;;;1010:51:13;983:18;;1901:40:0;864:203:13;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;9650:156:9:-;9723:4;9746:53;9754:3;-1:-1:-1;;;;;9774:23:9;;9746:7;:53::i;10987:156::-;11061:7;11111:22;11115:3;11127:5;11111:3;:22::i;9332:150::-;9402:4;9425:50;9430:3;-1:-1:-1;;;;;9450:23:9;;9425:4;:50::i;2910:1368::-;2976:4;3105:21;;;:14;;;:21;;;;;;3141:13;;3137:1135;;3508:18;3529:12;3540:1;3529:8;:12;:::i;:::-;3575:18;;3508:33;;-1:-1:-1;3555:17:9;;3575:22;;3596:1;;3575:22;:::i;:::-;3555:42;;3630:9;3616:10;:23;3612:378;;3659:17;3679:3;:11;;3691:9;3679:22;;;;;;;;:::i;:::-;;;;;;;;;3659:42;;3826:9;3800:3;:11;;3812:10;3800:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;;;;3939:25;;;:14;;;:25;;;;;:36;;;3612:378;4068:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4171:3;:14;;:21;4186:5;4171:21;;;;;;;;;;;4164:28;;;4214:4;4207:11;;;;;;;3137:1135;4256:5;4249:12;;;;;5569:118;5636:7;5662:3;:11;;5674:5;5662:18;;;;;;;;:::i;:::-;;;;;;;;;5655:25;;5569:118;;;;:::o;2336:406::-;2399:4;5006:21;;;:14;;;:21;;;;;;2415:321;;-1:-1:-1;2457:23:9;;;;;;;;:11;:23;;;;;;;;;;;;;2639:18;;2615:21;;;:14;;;:21;;;;;;:42;;;;2671:11;;2415:321;-1:-1:-1;2720:5:9;2713:12;;14:286:13;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:13;;210:42;;200:70;;266:1;263;256:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:13;;679:180;-1:-1:-1;679:180:13:o;1257:127::-;1318:10;1313:3;1309:20;1306:1;1299:31;1349:4;1346:1;1339:15;1373:4;1370:1;1363:15;1389:507;1588:2;1573:18;;1621:1;1610:13;;1600:144;;1666:10;1661:3;1657:20;1654:1;1647:31;1701:4;1698:1;1691:15;1729:4;1726:1;1719:15;1600:144;1753:25;;;-1:-1:-1;;;;;1814:32:13;;;;1809:2;1794:18;;1787:60;1878:2;1863:18;;;1856:34;1389:507;:::o;2256:403::-;2458:2;2440:21;;;2497:2;2477:18;;;2470:30;2536:34;2531:2;2516:18;;2509:62;-1:-1:-1;;;2602:2:13;2587:18;;2580:37;2649:3;2634:19;;2256:403::o;4078:225::-;4145:9;;;4166:11;;;4163:134;;;4219:10;4214:3;4210:20;4207:1;4200:31;4254:4;4251:1;4244:15;4282:4;4279:1;4272:15;4308:127;4369:10;4364:3;4360:20;4357:1;4350:31;4400:4;4397:1;4390:15;4424:4;4421:1;4414:15;4440:127;4501:10;4496:3;4492:20;4489:1;4482:31;4532:4;4529:1;4522:15;4556:4;4553:1;4546:15"},"methodIdentifiers":{"addInstitution(address)":"af5b2291","getCertificateStatus(bytes32)":"cab621d9","getInstitutionAtIndex(uint256)":"8a23e294","getInstitutionCount()":"579b6a4a","isInstitution(address)":"0331df07","issueCertificate(bytes32)":"a1f81824","owner()":"8da5cb5b","removeInstitution(address)":"8747d5ed","renounceOwnership()":"715018a6","revokeCertificate(bytes32)":"c6cbc52a","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"certificateHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"institution\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CertificateIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"certificateHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"institution\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CertificateRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"institution\",\"type\":\"address\"}],\"name\":\"InstitutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"institution\",\"type\":\"address\"}],\"name\":\"InstitutionRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"institutionAddress\",\"type\":\"address\"}],\"name\":\"addInstitution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"certificateHash\",\"type\":\"bytes32\"}],\"name\":\"getCertificateStatus\",\"outputs\":[{\"internalType\":\"enum Certificate.Status\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getInstitutionAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInstitutionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"institutionAddress\",\"type\":\"address\"}],\"name\":\"isInstitution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"certificateHash\",\"type\":\"bytes32\"}],\"name\":\"issueCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"institutionAddress\",\"type\":\"address\"}],\"name\":\"removeInstitution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"certificateHash\",\"type\":\"bytes32\"}],\"name\":\"revokeCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract manages the lifecycle of academic certificates using a hybrid storage model. It stores a hash of the certificate data on-chain, while the full data is stored off-chain (e.g., IPFS). This approach significantly reduces gas costs and improves scalability.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addInstitution(address)\":{\"details\":\"Adds a new institution to the set of authorized issuers.\",\"params\":{\"institutionAddress\":\"The address of the institution to add.\"}},\"getCertificateStatus(bytes32)\":{\"details\":\"Verifies the status of a certificate.\",\"params\":{\"certificateHash\":\"The hash of the certificate to verify.\"},\"returns\":{\"_0\":\"The status, issuing institution, and timestamp of the certificate.\"}},\"getInstitutionAtIndex(uint256)\":{\"details\":\"Returns an institution at a specific index.\"},\"getInstitutionCount()\":{\"details\":\"Returns the number of authorized institutions.\"},\"isInstitution(address)\":{\"details\":\"Checks if an address is an authorized institution.\",\"params\":{\"institutionAddress\":\"The address to check.\"},\"returns\":{\"_0\":\"True if the address is an institution, false otherwise.\"}},\"issueCertificate(bytes32)\":{\"details\":\"Issues a new certificate by storing its hash.\",\"params\":{\"certificateHash\":\"The keccak256 hash of the off-chain certificate data.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeInstitution(address)\":{\"details\":\"Removes an institution from the set of authorized issuers.\",\"params\":{\"institutionAddress\":\"The address of the institution to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeCertificate(bytes32)\":{\"details\":\"Revokes an existing certificate.\",\"params\":{\"certificateHash\":\"The hash of the certificate to revoke.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Certificate\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Certificate.sol\":\"Certificate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"contracts/Certificate.sol\":{\"keccak256\":\"0x01666f148b6962050411c5ec8f864b0aecf1247383a80483eb0f428387f523cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eede14587c58e52056eb1d21adf0986336346fb3d7bc4f4b71a8515ce3b12a67\",\"dweb:/ipfs/QmcXo6SV61wfGSuwSMq1b1kCU1gvKf6h8Z2o57UeHmKMMe\"]}},\"version\":1}"}},"contracts/CertificateOnChain.sol":{"CertificateOnChain":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"certificateId","type":"uint256"},{"indexed":true,"internalType":"address","name":"institution","type":"address"},{"indexed":false,"internalType":"string","name":"studentName","type":"string"}],"name":"CertificateIssued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"certificates","outputs":[{"internalType":"string","name":"studentName","type":"string"},{"internalType":"string","name":"degreeType","type":"string"},{"internalType":"string","name":"institutionName","type":"string"},{"internalType":"uint256","name":"issueTimestamp","type":"uint256"},{"internalType":"address","name":"issuingInstitution","type":"address"},{"internalType":"bool","name":"isIssued","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCertificateCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"certificateId","type":"uint256"}],"name":"getCertificateData","outputs":[{"components":[{"internalType":"string","name":"studentName","type":"string"},{"internalType":"string","name":"degreeType","type":"string"},{"internalType":"string","name":"institutionName","type":"string"},{"internalType":"uint256","name":"issueTimestamp","type":"uint256"},{"internalType":"address","name":"issuingInstitution","type":"address"},{"internalType":"bool","name":"isIssued","type":"bool"}],"internalType":"struct CertificateOnChain.CertificateData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"studentName","type":"string"},{"internalType":"string","name":"degreeType","type":"string"},{"internalType":"string","name":"institutionName","type":"string"}],"name":"issueCertificate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_5869":{"entryPoint":null,"id":5869,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":110,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:514:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:13","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:13"},"nodeType":"YulFunctionCall","src":"143:12:13"},"nodeType":"YulExpressionStatement","src":"143:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:13"},"nodeType":"YulFunctionCall","src":"112:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:13"},"nodeType":"YulFunctionCall","src":"108:32:13"},"nodeType":"YulIf","src":"105:52:13"},{"nodeType":"YulVariableDeclaration","src":"166:29:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:13"},"nodeType":"YulFunctionCall","src":"179:16:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:13"},"nodeType":"YulFunctionCall","src":"260:12:13"},"nodeType":"YulExpressionStatement","src":"260:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:13"},"nodeType":"YulFunctionCall","src":"239:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:13"},"nodeType":"YulFunctionCall","src":"235:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:13"},"nodeType":"YulFunctionCall","src":"224:31:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:13"},"nodeType":"YulFunctionCall","src":"214:42:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:13"},"nodeType":"YulFunctionCall","src":"207:50:13"},"nodeType":"YulIf","src":"204:70:13"},{"nodeType":"YulAssignment","src":"283:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:13"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:13","type":""}],"src":"14:290:13"},{"body":{"nodeType":"YulBlock","src":"410:102:13","statements":[{"nodeType":"YulAssignment","src":"420:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"432:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"443:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:13"},"nodeType":"YulFunctionCall","src":"428:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"420:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"493:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"498:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"489:3:13"},"nodeType":"YulFunctionCall","src":"489:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"502:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"485:3:13"},"nodeType":"YulFunctionCall","src":"485:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"473:3:13"},"nodeType":"YulFunctionCall","src":"473:32:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"455:6:13"},"nodeType":"YulFunctionCall","src":"455:51:13"},"nodeType":"YulExpressionStatement","src":"455:51:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"379:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"390:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"401:4:13","type":""}],"src":"309:203:13"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610da2380380610da283398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610ca5806100fd6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638809f7271161005b5780638809f727146100da5780638da5cb5b146100eb578063beec1caa14610106578063f2fde38b1461011957600080fd5b806331494bbb14610082578063663b3e22146100ab578063715018a6146100d0575b600080fd5b610095610090366004610869565b61012c565b6040516100a291906108c8565b60405180910390f35b6100be6100b9366004610869565b6103de565b6040516100a296959493929190610955565b6100d86105d1565b005b6001546040519081526020016100a2565b6000546040516001600160a01b0390911681526020016100a2565b6100d8610114366004610a01565b6105e5565b6100d8610127366004610a9b565b6107ae565b6101706040518060c001604052806060815260200160608152602001606081526020016000815260200160006001600160a01b031681526020016000151581525090565b60015482106101c65760405162461bcd60e51b815260206004820152601c60248201527f4365727469666963617465204944206f7574206f6620626f756e64730000000060448201526064015b60405180910390fd5b600182815481106101d9576101d9610acb565b90600052602060002090600502016040518060c001604052908160008201805461020290610ae1565b80601f016020809104026020016040519081016040528092919081815260200182805461022e90610ae1565b801561027b5780601f106102505761010080835404028352916020019161027b565b820191906000526020600020905b81548152906001019060200180831161025e57829003601f168201915b5050505050815260200160018201805461029490610ae1565b80601f01602080910402602001604051908101604052809291908181526020018280546102c090610ae1565b801561030d5780601f106102e25761010080835404028352916020019161030d565b820191906000526020600020905b8154815290600101906020018083116102f057829003601f168201915b5050505050815260200160028201805461032690610ae1565b80601f016020809104026020016040519081016040528092919081815260200182805461035290610ae1565b801561039f5780601f106103745761010080835404028352916020019161039f565b820191906000526020600020905b81548152906001019060200180831161038257829003601f168201915b5050509183525050600382015460208201526004909101546001600160a01b0381166040830152600160a01b900460ff16151560609091015292915050565b600181815481106103ee57600080fd5b906000526020600020906005020160009150905080600001805461041190610ae1565b80601f016020809104026020016040519081016040528092919081815260200182805461043d90610ae1565b801561048a5780601f1061045f5761010080835404028352916020019161048a565b820191906000526020600020905b81548152906001019060200180831161046d57829003601f168201915b50505050509080600101805461049f90610ae1565b80601f01602080910402602001604051908101604052809291908181526020018280546104cb90610ae1565b80156105185780601f106104ed57610100808354040283529160200191610518565b820191906000526020600020905b8154815290600101906020018083116104fb57829003601f168201915b50505050509080600201805461052d90610ae1565b80601f016020809104026020016040519081016040528092919081815260200182805461055990610ae1565b80156105a65780601f1061057b576101008083540402835291602001916105a6565b820191906000526020600020905b81548152906001019060200180831161058957829003601f168201915b5050505060038301546004909301549192916001600160a01b0381169150600160a01b900460ff1686565b6105d96107ec565b6105e36000610819565b565b6105ed6107ec565b600180546040805160e06020601f8b01819004028201810190925260c0810189815292939290918291908b908b9081908501838280828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815291810191908990899081908401838280828437600092019190915250505090825250604080516020601f88018190048102820181019092528681529181019190879087908190840183828082843760009201829052509385525050426020808501919091523360408501526001606090940184905285549384018655948252509290922081519192600502019081906106e69082610b80565b50602082015160018201906106fb9082610b80565b50604082015160028201906107109082610b80565b506060820151600382015560808201516004909101805460a0909301511515600160a01b026001600160a81b03199093166001600160a01b03909216919091179190911790556000818152600260205260409081902082905551339082907fb7ff6cbe8f0282bf405f9ce3210be62c5620d39139a49186436e3f0fcc6a315a9061079d908b908b90610c40565b60405180910390a350505050505050565b6107b66107ec565b6001600160a01b0381166107e057604051631e4fbdf760e01b8152600060048201526024016101bd565b6107e981610819565b50565b6000546001600160a01b031633146105e35760405163118cdaa760e01b81523360048201526024016101bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561087b57600080fd5b5035919050565b6000815180845260005b818110156108a85760208185018101518683018201520161088c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000825160c060208401526108e460e0840182610882565b90506020840151601f19808584030160408601526109028383610882565b92506040860151915080858403016060860152506109208282610882565b9150506060840151608084015260018060a01b0360808501511660a084015260a0840151151560c08401528091505092915050565b60c08152600061096860c0830189610882565b828103602084015261097a8189610882565b9050828103604084015261098e8188610882565b606084019690965250506001600160a01b03929092166080830152151560a0909101529392505050565b60008083601f8401126109ca57600080fd5b50813567ffffffffffffffff8111156109e257600080fd5b6020830191508360208285010111156109fa57600080fd5b9250929050565b60008060008060008060608789031215610a1a57600080fd5b863567ffffffffffffffff80821115610a3257600080fd5b610a3e8a838b016109b8565b90985096506020890135915080821115610a5757600080fd5b610a638a838b016109b8565b90965094506040890135915080821115610a7c57600080fd5b50610a8989828a016109b8565b979a9699509497509295939492505050565b600060208284031215610aad57600080fd5b81356001600160a01b0381168114610ac457600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610af557607f821691505b602082108103610b1557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610b7b57600081815260208120601f850160051c81016020861015610b585750805b601f850160051c820191505b81811015610b7757828155600101610b64565b5050505b505050565b815167ffffffffffffffff811115610b9a57610b9a610b1b565b610bae81610ba88454610ae1565b84610b31565b602080601f831160018114610be35760008415610bcb5750858301515b600019600386901b1c1916600185901b178555610b77565b600085815260208120601f198616915b82811015610c1257888601518255948401946001909101908401610bf3565b5085821015610c305787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea26469706673582212201d9239b5fd1f50696fd40471e64a5e986fcb8b639f610055a563cc53c5c667b864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDA2 CODESIZE SUB DUP1 PUSH2 0xDA2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x6E JUMP JUMPDEST POP POP PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCA5 DUP1 PUSH2 0xFD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8809F727 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8809F727 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xBEEC1CAA EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31494BBB EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x663B3E22 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x955 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x5D1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA2 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0xA01 JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x170 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4365727469666963617465204944206F7574206F6620626F756E647300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D9 JUMPI PUSH2 0x1D9 PUSH2 0xACB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x202 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22E SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x250 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x294 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C0 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x326 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x352 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x39F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x374 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x39F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x382 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x411 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43D SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x48A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4CB SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x518 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x518 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x52D SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x559 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x57B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x589 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH2 0x5D9 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x5E3 PUSH1 0x0 PUSH2 0x819 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5ED PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 PUSH1 0x20 PUSH1 0x1F DUP12 ADD DUP2 SWAP1 DIV MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP2 ADD DUP10 DUP2 MSTORE SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP6 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP9 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP7 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP TIMESTAMP PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SWAP1 SWAP5 ADD DUP5 SWAP1 MSTORE DUP6 SLOAD SWAP4 DUP5 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE POP SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD SWAP2 SWAP3 PUSH1 0x5 MUL ADD SWAP1 DUP2 SWAP1 PUSH2 0x6E6 SWAP1 DUP3 PUSH2 0xB80 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x6FB SWAP1 DUP3 PUSH2 0xB80 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x710 SWAP1 DUP3 PUSH2 0xB80 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xA0 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD CALLER SWAP1 DUP3 SWAP1 PUSH32 0xB7FF6CBE8F0282BF405F9CE3210BE62C5620D39139A49186436E3F0FCC6A315A SWAP1 PUSH2 0x79D SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7B6 PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x7E9 DUP2 PUSH2 0x819 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x88C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0xC0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x8E4 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x882 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP1 DUP6 DUP5 SUB ADD PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x902 DUP4 DUP4 PUSH2 0x882 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP6 DUP5 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE POP PUSH2 0x920 DUP3 DUP3 PUSH2 0x882 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP6 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x968 PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x882 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x97A DUP2 DUP10 PUSH2 0x882 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x98E DUP2 DUP9 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA3E DUP11 DUP4 DUP12 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA63 DUP11 DUP4 DUP12 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xA7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA89 DUP10 DUP3 DUP11 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAF5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB15 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xB58 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB77 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB64 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB9A PUSH2 0xB1B JUMP JUMPDEST PUSH2 0xBAE DUP2 PUSH2 0xBA8 DUP5 SLOAD PUSH2 0xAE1 JUMP JUMPDEST DUP5 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBE3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xBCB JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC12 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xBF3 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xC30 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR SWAP3 CODECOPY 0xB5 REVERT 0x1F POP PUSH10 0x6FD40471E64A5E986FCB DUP12 PUSH4 0x9F610055 0xA5 PUSH4 0xCC53C5C6 PUSH8 0xB864736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"398:2535:12:-:0;;;1147:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1189:12;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:13;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;1147:58:12;398:2535;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:13:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:13;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:13:o;309:203::-;398:2535:12;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":2028,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1069":{"entryPoint":null,"id":1069,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":2073,"id":146,"parameterSlots":1,"returnSlots":0},"@certificates_5856":{"entryPoint":990,"id":5856,"parameterSlots":0,"returnSlots":0},"@getCertificateCount_5947":{"entryPoint":null,"id":5947,"parameterSlots":0,"returnSlots":1},"@getCertificateData_5937":{"entryPoint":300,"id":5937,"parameterSlots":1,"returnSlots":1},"@issueCertificate_5915":{"entryPoint":1509,"id":5915,"parameterSlots":6,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1489,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1966,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_string_calldata":{"entryPoint":2488,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":2715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptr":{"entryPoint":2561,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256":{"entryPoint":2153,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":2178,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3136,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bool__fromStack_reversed":{"entryPoint":2389,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4b9266f8971ca3932150cfe5b3864f2dc96ea6105c4da1d850e76c998ea9c821__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_CertificateData_$5852_memory_ptr__to_t_struct$_CertificateData_$5852_memory_ptr__fromStack_reversed":{"entryPoint":2248,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":2865,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2944,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2785,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":2763,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2843,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8093:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:13","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:13"},"nodeType":"YulFunctionCall","src":"132:12:13"},"nodeType":"YulExpressionStatement","src":"132:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:13"},"nodeType":"YulFunctionCall","src":"101:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:13"},"nodeType":"YulFunctionCall","src":"97:32:13"},"nodeType":"YulIf","src":"94:52:13"},{"nodeType":"YulAssignment","src":"155:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:13"},"nodeType":"YulFunctionCall","src":"165:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:13"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:13","type":""}],"src":"14:180:13"},{"body":{"nodeType":"YulBlock","src":"249:373:13","statements":[{"nodeType":"YulVariableDeclaration","src":"259:26:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"273:5:13"},"nodeType":"YulFunctionCall","src":"273:12:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"263:6:13","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"301:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"306:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"294:6:13"},"nodeType":"YulFunctionCall","src":"294:19:13"},"nodeType":"YulExpressionStatement","src":"294:19:13"},{"nodeType":"YulVariableDeclaration","src":"322:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"331:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"326:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"393:110:13","statements":[{"nodeType":"YulVariableDeclaration","src":"407:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"417:4:13","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"411:2:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"449:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"454:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"445:3:13"},"nodeType":"YulFunctionCall","src":"445:11:13"},{"name":"_1","nodeType":"YulIdentifier","src":"458:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"441:3:13"},"nodeType":"YulFunctionCall","src":"441:20:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"477:5:13"},{"name":"i","nodeType":"YulIdentifier","src":"484:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"473:3:13"},"nodeType":"YulFunctionCall","src":"473:13:13"},{"name":"_1","nodeType":"YulIdentifier","src":"488:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"469:3:13"},"nodeType":"YulFunctionCall","src":"469:22:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"463:5:13"},"nodeType":"YulFunctionCall","src":"463:29:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"434:6:13"},"nodeType":"YulFunctionCall","src":"434:59:13"},"nodeType":"YulExpressionStatement","src":"434:59:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"352:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"355:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"349:2:13"},"nodeType":"YulFunctionCall","src":"349:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"363:21:13","statements":[{"nodeType":"YulAssignment","src":"365:17:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"374:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"370:3:13"},"nodeType":"YulFunctionCall","src":"370:12:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"365:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"345:3:13","statements":[]},"src":"341:162:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"527:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"532:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"523:3:13"},"nodeType":"YulFunctionCall","src":"523:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"541:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"519:3:13"},"nodeType":"YulFunctionCall","src":"519:27:13"},{"kind":"number","nodeType":"YulLiteral","src":"548:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"512:6:13"},"nodeType":"YulFunctionCall","src":"512:38:13"},"nodeType":"YulExpressionStatement","src":"512:38:13"},{"nodeType":"YulAssignment","src":"559:57:13","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"574:3:13"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"587:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"595:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"583:3:13"},"nodeType":"YulFunctionCall","src":"583:15:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"600:3:13"},"nodeType":"YulFunctionCall","src":"600:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"579:3:13"},"nodeType":"YulFunctionCall","src":"579:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:13"},"nodeType":"YulFunctionCall","src":"570:39:13"},{"kind":"number","nodeType":"YulLiteral","src":"611:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"566:3:13"},"nodeType":"YulFunctionCall","src":"566:50:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"559:3:13"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"226:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"233:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"241:3:13","type":""}],"src":"199:423:13"},{"body":{"nodeType":"YulBlock","src":"794:839:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"811:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"822:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"804:6:13"},"nodeType":"YulFunctionCall","src":"804:21:13"},"nodeType":"YulExpressionStatement","src":"804:21:13"},{"nodeType":"YulVariableDeclaration","src":"834:33:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"860:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"854:5:13"},"nodeType":"YulFunctionCall","src":"854:13:13"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"838:12:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"887:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"898:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"883:3:13"},"nodeType":"YulFunctionCall","src":"883:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"903:4:13","type":"","value":"0xc0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"876:6:13"},"nodeType":"YulFunctionCall","src":"876:32:13"},"nodeType":"YulExpressionStatement","src":"876:32:13"},{"nodeType":"YulVariableDeclaration","src":"917:66:13","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"949:12:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"967:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"978:3:13","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:13"},"nodeType":"YulFunctionCall","src":"963:19:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"931:17:13"},"nodeType":"YulFunctionCall","src":"931:52:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"921:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"992:44:13","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1024:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1032:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1020:3:13"},"nodeType":"YulFunctionCall","src":"1020:15:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1014:5:13"},"nodeType":"YulFunctionCall","src":"1014:22:13"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"996:14:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1045:17:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1059:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1055:3:13"},"nodeType":"YulFunctionCall","src":"1055:7:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1049:2:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1082:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1093:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1078:3:13"},"nodeType":"YulFunctionCall","src":"1078:18:13"},{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1106:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1114:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1102:3:13"},"nodeType":"YulFunctionCall","src":"1102:22:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1126:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1098:3:13"},"nodeType":"YulFunctionCall","src":"1098:31:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1071:6:13"},"nodeType":"YulFunctionCall","src":"1071:59:13"},"nodeType":"YulExpressionStatement","src":"1071:59:13"},{"nodeType":"YulVariableDeclaration","src":"1139:55:13","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"1171:14:13"},{"name":"tail_1","nodeType":"YulIdentifier","src":"1187:6:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1153:17:13"},"nodeType":"YulFunctionCall","src":"1153:41:13"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"1143:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1203:44:13","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1235:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1243:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1231:3:13"},"nodeType":"YulFunctionCall","src":"1231:15:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1225:5:13"},"nodeType":"YulFunctionCall","src":"1225:22:13"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"1207:14:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1267:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1278:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1263:3:13"},"nodeType":"YulFunctionCall","src":"1263:18:13"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"1291:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1299:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1287:3:13"},"nodeType":"YulFunctionCall","src":"1287:22:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1311:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1283:3:13"},"nodeType":"YulFunctionCall","src":"1283:31:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:13"},"nodeType":"YulFunctionCall","src":"1256:59:13"},"nodeType":"YulExpressionStatement","src":"1256:59:13"},{"nodeType":"YulVariableDeclaration","src":"1324:55:13","value":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"1356:14:13"},{"name":"tail_2","nodeType":"YulIdentifier","src":"1372:6:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1338:17:13"},"nodeType":"YulFunctionCall","src":"1338:41:13"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"1328:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1399:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1410:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1395:3:13"},"nodeType":"YulFunctionCall","src":"1395:19:13"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1426:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1434:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1422:3:13"},"nodeType":"YulFunctionCall","src":"1422:15:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1416:5:13"},"nodeType":"YulFunctionCall","src":"1416:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:13"},"nodeType":"YulFunctionCall","src":"1388:51:13"},"nodeType":"YulExpressionStatement","src":"1388:51:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1459:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1470:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1455:3:13"},"nodeType":"YulFunctionCall","src":"1455:19:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1490:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1498:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1486:3:13"},"nodeType":"YulFunctionCall","src":"1486:16:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1480:5:13"},"nodeType":"YulFunctionCall","src":"1480:23:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1513:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1518:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1509:3:13"},"nodeType":"YulFunctionCall","src":"1509:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"1522:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1505:3:13"},"nodeType":"YulFunctionCall","src":"1505:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1476:3:13"},"nodeType":"YulFunctionCall","src":"1476:49:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1448:6:13"},"nodeType":"YulFunctionCall","src":"1448:78:13"},"nodeType":"YulExpressionStatement","src":"1448:78:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1546:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1557:4:13","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1542:3:13"},"nodeType":"YulFunctionCall","src":"1542:20:13"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1588:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1596:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1584:3:13"},"nodeType":"YulFunctionCall","src":"1584:16:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1578:5:13"},"nodeType":"YulFunctionCall","src":"1578:23:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1571:6:13"},"nodeType":"YulFunctionCall","src":"1571:31:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1564:6:13"},"nodeType":"YulFunctionCall","src":"1564:39:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1535:6:13"},"nodeType":"YulFunctionCall","src":"1535:69:13"},"nodeType":"YulExpressionStatement","src":"1535:69:13"},{"nodeType":"YulAssignment","src":"1613:14:13","value":{"name":"tail_3","nodeType":"YulIdentifier","src":"1621:6:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1613:4:13"}]}]},"name":"abi_encode_tuple_t_struct$_CertificateData_$5852_memory_ptr__to_t_struct$_CertificateData_$5852_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"763:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"774:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"785:4:13","type":""}],"src":"627:1006:13"},{"body":{"nodeType":"YulBlock","src":"1933:504:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1950:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1961:3:13","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1943:6:13"},"nodeType":"YulFunctionCall","src":"1943:22:13"},"nodeType":"YulExpressionStatement","src":"1943:22:13"},{"nodeType":"YulVariableDeclaration","src":"1974:60:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2006:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2018:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2029:3:13","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2014:3:13"},"nodeType":"YulFunctionCall","src":"2014:19:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1988:17:13"},"nodeType":"YulFunctionCall","src":"1988:46:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1978:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2054:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2065:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2050:3:13"},"nodeType":"YulFunctionCall","src":"2050:18:13"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2074:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2082:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2070:3:13"},"nodeType":"YulFunctionCall","src":"2070:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2043:6:13"},"nodeType":"YulFunctionCall","src":"2043:50:13"},"nodeType":"YulExpressionStatement","src":"2043:50:13"},{"nodeType":"YulVariableDeclaration","src":"2102:47:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2134:6:13"},{"name":"tail_1","nodeType":"YulIdentifier","src":"2142:6:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2116:17:13"},"nodeType":"YulFunctionCall","src":"2116:33:13"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"2106:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2169:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2180:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2165:3:13"},"nodeType":"YulFunctionCall","src":"2165:18:13"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2189:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2197:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2185:3:13"},"nodeType":"YulFunctionCall","src":"2185:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2158:6:13"},"nodeType":"YulFunctionCall","src":"2158:50:13"},"nodeType":"YulExpressionStatement","src":"2158:50:13"},{"nodeType":"YulAssignment","src":"2217:41:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2243:6:13"},{"name":"tail_2","nodeType":"YulIdentifier","src":"2251:6:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2225:17:13"},"nodeType":"YulFunctionCall","src":"2225:33:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2217:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2289:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2274:3:13"},"nodeType":"YulFunctionCall","src":"2274:18:13"},{"name":"value3","nodeType":"YulIdentifier","src":"2294:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2267:6:13"},"nodeType":"YulFunctionCall","src":"2267:34:13"},"nodeType":"YulExpressionStatement","src":"2267:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2321:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2332:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2317:3:13"},"nodeType":"YulFunctionCall","src":"2317:19:13"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2342:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2358:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2363:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2354:3:13"},"nodeType":"YulFunctionCall","src":"2354:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"2367:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2350:3:13"},"nodeType":"YulFunctionCall","src":"2350:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2338:3:13"},"nodeType":"YulFunctionCall","src":"2338:32:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2310:6:13"},"nodeType":"YulFunctionCall","src":"2310:61:13"},"nodeType":"YulExpressionStatement","src":"2310:61:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2391:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2402:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2387:3:13"},"nodeType":"YulFunctionCall","src":"2387:19:13"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"2422:6:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2415:6:13"},"nodeType":"YulFunctionCall","src":"2415:14:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2408:6:13"},"nodeType":"YulFunctionCall","src":"2408:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2380:6:13"},"nodeType":"YulFunctionCall","src":"2380:51:13"},"nodeType":"YulExpressionStatement","src":"2380:51:13"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1862:9:13","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1873:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1881:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1889:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1897:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1905:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1913:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1924:4:13","type":""}],"src":"1638:799:13"},{"body":{"nodeType":"YulBlock","src":"2543:76:13","statements":[{"nodeType":"YulAssignment","src":"2553:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2565:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2576:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2561:3:13"},"nodeType":"YulFunctionCall","src":"2561:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2553:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2595:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"2606:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2588:6:13"},"nodeType":"YulFunctionCall","src":"2588:25:13"},"nodeType":"YulExpressionStatement","src":"2588:25:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2512:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2523:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2534:4:13","type":""}],"src":"2442:177:13"},{"body":{"nodeType":"YulBlock","src":"2725:102:13","statements":[{"nodeType":"YulAssignment","src":"2735:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2747:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2758:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2743:3:13"},"nodeType":"YulFunctionCall","src":"2743:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2777:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2792:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2808:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2813:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2804:3:13"},"nodeType":"YulFunctionCall","src":"2804:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"2817:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2800:3:13"},"nodeType":"YulFunctionCall","src":"2800:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2788:3:13"},"nodeType":"YulFunctionCall","src":"2788:32:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2770:6:13"},"nodeType":"YulFunctionCall","src":"2770:51:13"},"nodeType":"YulExpressionStatement","src":"2770:51:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2694:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2705:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2716:4:13","type":""}],"src":"2624:203:13"},{"body":{"nodeType":"YulBlock","src":"2905:275:13","statements":[{"body":{"nodeType":"YulBlock","src":"2954:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2963:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2966:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2956:6:13"},"nodeType":"YulFunctionCall","src":"2956:12:13"},"nodeType":"YulExpressionStatement","src":"2956:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2933:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2941:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2929:3:13"},"nodeType":"YulFunctionCall","src":"2929:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"2948:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2925:3:13"},"nodeType":"YulFunctionCall","src":"2925:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2918:6:13"},"nodeType":"YulFunctionCall","src":"2918:35:13"},"nodeType":"YulIf","src":"2915:55:13"},{"nodeType":"YulAssignment","src":"2979:30:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2989:12:13"},"nodeType":"YulFunctionCall","src":"2989:20:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2979:6:13"}]},{"body":{"nodeType":"YulBlock","src":"3052:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3061:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3064:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3054:6:13"},"nodeType":"YulFunctionCall","src":"3054:12:13"},"nodeType":"YulExpressionStatement","src":"3054:12:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3024:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3032:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3021:2:13"},"nodeType":"YulFunctionCall","src":"3021:30:13"},"nodeType":"YulIf","src":"3018:50:13"},{"nodeType":"YulAssignment","src":"3077:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3093:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3101:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3089:3:13"},"nodeType":"YulFunctionCall","src":"3089:17:13"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3077:8:13"}]},{"body":{"nodeType":"YulBlock","src":"3158:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3167:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3170:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3160:6:13"},"nodeType":"YulFunctionCall","src":"3160:12:13"},"nodeType":"YulExpressionStatement","src":"3160:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3129:6:13"},{"name":"length","nodeType":"YulIdentifier","src":"3137:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3125:3:13"},"nodeType":"YulFunctionCall","src":"3125:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"3146:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3121:3:13"},"nodeType":"YulFunctionCall","src":"3121:30:13"},{"name":"end","nodeType":"YulIdentifier","src":"3153:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3118:2:13"},"nodeType":"YulFunctionCall","src":"3118:39:13"},"nodeType":"YulIf","src":"3115:59:13"}]},"name":"abi_decode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2868:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2876:3:13","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2884:8:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"2894:6:13","type":""}],"src":"2832:348:13"},{"body":{"nodeType":"YulBlock","src":"3349:846:13","statements":[{"body":{"nodeType":"YulBlock","src":"3395:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3404:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3407:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3397:6:13"},"nodeType":"YulFunctionCall","src":"3397:12:13"},"nodeType":"YulExpressionStatement","src":"3397:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3370:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"3379:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3366:3:13"},"nodeType":"YulFunctionCall","src":"3366:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"3391:2:13","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3362:3:13"},"nodeType":"YulFunctionCall","src":"3362:32:13"},"nodeType":"YulIf","src":"3359:52:13"},{"nodeType":"YulVariableDeclaration","src":"3420:37:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3447:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3434:12:13"},"nodeType":"YulFunctionCall","src":"3434:23:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3424:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3466:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3476:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3470:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3521:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3530:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3533:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3523:6:13"},"nodeType":"YulFunctionCall","src":"3523:12:13"},"nodeType":"YulExpressionStatement","src":"3523:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3509:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3517:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3506:2:13"},"nodeType":"YulFunctionCall","src":"3506:14:13"},"nodeType":"YulIf","src":"3503:34:13"},{"nodeType":"YulVariableDeclaration","src":"3546:85:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3603:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3614:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3599:3:13"},"nodeType":"YulFunctionCall","src":"3599:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3623:7:13"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"3572:26:13"},"nodeType":"YulFunctionCall","src":"3572:59:13"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"3550:8:13","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"3560:8:13","type":""}]},{"nodeType":"YulAssignment","src":"3640:18:13","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"3650:8:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3640:6:13"}]},{"nodeType":"YulAssignment","src":"3667:18:13","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"3677:8:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3667:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"3694:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3727:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3738:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3723:3:13"},"nodeType":"YulFunctionCall","src":"3723:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3710:12:13"},"nodeType":"YulFunctionCall","src":"3710:32:13"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"3698:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3771:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3780:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3783:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3773:6:13"},"nodeType":"YulFunctionCall","src":"3773:12:13"},"nodeType":"YulExpressionStatement","src":"3773:12:13"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"3757:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3767:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3754:2:13"},"nodeType":"YulFunctionCall","src":"3754:16:13"},"nodeType":"YulIf","src":"3751:36:13"},{"nodeType":"YulVariableDeclaration","src":"3796:87:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3853:9:13"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3864:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3849:3:13"},"nodeType":"YulFunctionCall","src":"3849:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3875:7:13"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"3822:26:13"},"nodeType":"YulFunctionCall","src":"3822:61:13"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"3800:8:13","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"3810:8:13","type":""}]},{"nodeType":"YulAssignment","src":"3892:18:13","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"3902:8:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3892:6:13"}]},{"nodeType":"YulAssignment","src":"3919:18:13","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"3929:8:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3919:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"3946:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3979:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3990:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3975:3:13"},"nodeType":"YulFunctionCall","src":"3975:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3962:12:13"},"nodeType":"YulFunctionCall","src":"3962:32:13"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"3950:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4023:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4032:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4035:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4025:6:13"},"nodeType":"YulFunctionCall","src":"4025:12:13"},"nodeType":"YulExpressionStatement","src":"4025:12:13"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4009:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4019:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4006:2:13"},"nodeType":"YulFunctionCall","src":"4006:16:13"},"nodeType":"YulIf","src":"4003:36:13"},{"nodeType":"YulVariableDeclaration","src":"4048:87:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4105:9:13"},{"name":"offset_2","nodeType":"YulIdentifier","src":"4116:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4101:3:13"},"nodeType":"YulFunctionCall","src":"4101:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4127:7:13"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"4074:26:13"},"nodeType":"YulFunctionCall","src":"4074:61:13"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"4052:8:13","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"4062:8:13","type":""}]},{"nodeType":"YulAssignment","src":"4144:18:13","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"4154:8:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4144:6:13"}]},{"nodeType":"YulAssignment","src":"4171:18:13","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"4181:8:13"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4171:6:13"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3275:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3286:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3298:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3306:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3314:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3322:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3330:6:13","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3338:6:13","type":""}],"src":"3185:1010:13"},{"body":{"nodeType":"YulBlock","src":"4270:216:13","statements":[{"body":{"nodeType":"YulBlock","src":"4316:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4325:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4328:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4318:6:13"},"nodeType":"YulFunctionCall","src":"4318:12:13"},"nodeType":"YulExpressionStatement","src":"4318:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4291:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4300:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4287:3:13"},"nodeType":"YulFunctionCall","src":"4287:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4312:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4283:3:13"},"nodeType":"YulFunctionCall","src":"4283:32:13"},"nodeType":"YulIf","src":"4280:52:13"},{"nodeType":"YulVariableDeclaration","src":"4341:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4367:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4354:12:13"},"nodeType":"YulFunctionCall","src":"4354:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4345:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4440:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4449:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4452:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4442:6:13"},"nodeType":"YulFunctionCall","src":"4442:12:13"},"nodeType":"YulExpressionStatement","src":"4442:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4399:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4410:5:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4425:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4430:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4421:3:13"},"nodeType":"YulFunctionCall","src":"4421:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"4434:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4417:3:13"},"nodeType":"YulFunctionCall","src":"4417:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4406:3:13"},"nodeType":"YulFunctionCall","src":"4406:31:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4396:2:13"},"nodeType":"YulFunctionCall","src":"4396:42:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4389:6:13"},"nodeType":"YulFunctionCall","src":"4389:50:13"},"nodeType":"YulIf","src":"4386:70:13"},{"nodeType":"YulAssignment","src":"4465:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"4475:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4465:6:13"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4236:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4247:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4259:6:13","type":""}],"src":"4200:286:13"},{"body":{"nodeType":"YulBlock","src":"4665:178:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4682:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4693:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4675:6:13"},"nodeType":"YulFunctionCall","src":"4675:21:13"},"nodeType":"YulExpressionStatement","src":"4675:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4716:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4727:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4712:3:13"},"nodeType":"YulFunctionCall","src":"4712:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"4732:2:13","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4705:6:13"},"nodeType":"YulFunctionCall","src":"4705:30:13"},"nodeType":"YulExpressionStatement","src":"4705:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4755:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4766:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4751:3:13"},"nodeType":"YulFunctionCall","src":"4751:18:13"},{"hexValue":"4365727469666963617465204944206f7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"4771:30:13","type":"","value":"Certificate ID out of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4744:6:13"},"nodeType":"YulFunctionCall","src":"4744:58:13"},"nodeType":"YulExpressionStatement","src":"4744:58:13"},{"nodeType":"YulAssignment","src":"4811:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4823:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4834:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4819:3:13"},"nodeType":"YulFunctionCall","src":"4819:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4811:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_4b9266f8971ca3932150cfe5b3864f2dc96ea6105c4da1d850e76c998ea9c821__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4642:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4656:4:13","type":""}],"src":"4491:352:13"},{"body":{"nodeType":"YulBlock","src":"4880:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4897:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4904:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4909:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4900:3:13"},"nodeType":"YulFunctionCall","src":"4900:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4890:6:13"},"nodeType":"YulFunctionCall","src":"4890:31:13"},"nodeType":"YulExpressionStatement","src":"4890:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4937:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4940:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4930:6:13"},"nodeType":"YulFunctionCall","src":"4930:15:13"},"nodeType":"YulExpressionStatement","src":"4930:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4961:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4964:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4954:6:13"},"nodeType":"YulFunctionCall","src":"4954:15:13"},"nodeType":"YulExpressionStatement","src":"4954:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4848:127:13"},{"body":{"nodeType":"YulBlock","src":"5035:325:13","statements":[{"nodeType":"YulAssignment","src":"5045:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5059:1:13","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5062:4:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5055:3:13"},"nodeType":"YulFunctionCall","src":"5055:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5045:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"5076:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5106:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"5112:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5102:3:13"},"nodeType":"YulFunctionCall","src":"5102:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5080:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5153:31:13","statements":[{"nodeType":"YulAssignment","src":"5155:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5169:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"5177:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5165:3:13"},"nodeType":"YulFunctionCall","src":"5165:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5155:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5133:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5126:6:13"},"nodeType":"YulFunctionCall","src":"5126:26:13"},"nodeType":"YulIf","src":"5123:61:13"},{"body":{"nodeType":"YulBlock","src":"5243:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5264:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5271:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5276:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5267:3:13"},"nodeType":"YulFunctionCall","src":"5267:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5257:6:13"},"nodeType":"YulFunctionCall","src":"5257:31:13"},"nodeType":"YulExpressionStatement","src":"5257:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5308:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5311:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5301:6:13"},"nodeType":"YulFunctionCall","src":"5301:15:13"},"nodeType":"YulExpressionStatement","src":"5301:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5336:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5339:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5329:6:13"},"nodeType":"YulFunctionCall","src":"5329:15:13"},"nodeType":"YulExpressionStatement","src":"5329:15:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5199:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5222:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"5230:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5219:2:13"},"nodeType":"YulFunctionCall","src":"5219:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5196:2:13"},"nodeType":"YulFunctionCall","src":"5196:38:13"},"nodeType":"YulIf","src":"5193:161:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5015:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5024:6:13","type":""}],"src":"4980:380:13"},{"body":{"nodeType":"YulBlock","src":"5397:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5414:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5421:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5426:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5417:3:13"},"nodeType":"YulFunctionCall","src":"5417:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5407:6:13"},"nodeType":"YulFunctionCall","src":"5407:31:13"},"nodeType":"YulExpressionStatement","src":"5407:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5454:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5457:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5447:6:13"},"nodeType":"YulFunctionCall","src":"5447:15:13"},"nodeType":"YulExpressionStatement","src":"5447:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5478:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5481:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5471:6:13"},"nodeType":"YulFunctionCall","src":"5471:15:13"},"nodeType":"YulExpressionStatement","src":"5471:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5365:127:13"},{"body":{"nodeType":"YulBlock","src":"5553:65:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5570:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"5573:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5563:6:13"},"nodeType":"YulFunctionCall","src":"5563:14:13"},"nodeType":"YulExpressionStatement","src":"5563:14:13"},{"nodeType":"YulAssignment","src":"5586:26:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5604:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5607:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5594:9:13"},"nodeType":"YulFunctionCall","src":"5594:18:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5586:4:13"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5536:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5544:4:13","type":""}],"src":"5497:121:13"},{"body":{"nodeType":"YulBlock","src":"5704:464:13","statements":[{"body":{"nodeType":"YulBlock","src":"5737:425:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5751:11:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5761:1:13","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5755:2:13","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5782:2:13"},{"name":"array","nodeType":"YulIdentifier","src":"5786:5:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5775:6:13"},"nodeType":"YulFunctionCall","src":"5775:17:13"},"nodeType":"YulExpressionStatement","src":"5775:17:13"},{"nodeType":"YulVariableDeclaration","src":"5805:31:13","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5827:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"5831:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5817:9:13"},"nodeType":"YulFunctionCall","src":"5817:19:13"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"5809:4:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5849:57:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5872:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5882:1:13","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"5889:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"5901:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5885:3:13"},"nodeType":"YulFunctionCall","src":"5885:19:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5878:3:13"},"nodeType":"YulFunctionCall","src":"5878:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5868:3:13"},"nodeType":"YulFunctionCall","src":"5868:38:13"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"5853:11:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5943:23:13","statements":[{"nodeType":"YulAssignment","src":"5945:19:13","value":{"name":"data","nodeType":"YulIdentifier","src":"5960:4:13"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"5945:11:13"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"5925:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"5937:4:13","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5922:2:13"},"nodeType":"YulFunctionCall","src":"5922:20:13"},"nodeType":"YulIf","src":"5919:47:13"},{"nodeType":"YulVariableDeclaration","src":"5979:41:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5993:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6003:1:13","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6010:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"6015:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6006:3:13"},"nodeType":"YulFunctionCall","src":"6006:12:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5999:3:13"},"nodeType":"YulFunctionCall","src":"5999:20:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5989:3:13"},"nodeType":"YulFunctionCall","src":"5989:31:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5983:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6033:24:13","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"6046:11:13"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"6037:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6131:21:13","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6140:5:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6147:2:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6133:6:13"},"nodeType":"YulFunctionCall","src":"6133:17:13"},"nodeType":"YulExpressionStatement","src":"6133:17:13"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6081:5:13"},{"name":"_2","nodeType":"YulIdentifier","src":"6088:2:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6078:2:13"},"nodeType":"YulFunctionCall","src":"6078:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6092:26:13","statements":[{"nodeType":"YulAssignment","src":"6094:22:13","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6107:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"6114:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6103:3:13"},"nodeType":"YulFunctionCall","src":"6103:13:13"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6094:5:13"}]}]},"pre":{"nodeType":"YulBlock","src":"6074:3:13","statements":[]},"src":"6070:82:13"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"5720:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"5725:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5717:2:13"},"nodeType":"YulFunctionCall","src":"5717:11:13"},"nodeType":"YulIf","src":"5714:448:13"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"5676:5:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"5683:3:13","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"5688:10:13","type":""}],"src":"5623:545:13"},{"body":{"nodeType":"YulBlock","src":"6258:81:13","statements":[{"nodeType":"YulAssignment","src":"6268:65:13","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6283:4:13"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6301:1:13","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"6304:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6297:3:13"},"nodeType":"YulFunctionCall","src":"6297:11:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6314:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6310:3:13"},"nodeType":"YulFunctionCall","src":"6310:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6293:3:13"},"nodeType":"YulFunctionCall","src":"6293:24:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6289:3:13"},"nodeType":"YulFunctionCall","src":"6289:29:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6279:3:13"},"nodeType":"YulFunctionCall","src":"6279:40:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6325:1:13","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"6328:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6321:3:13"},"nodeType":"YulFunctionCall","src":"6321:11:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6276:2:13"},"nodeType":"YulFunctionCall","src":"6276:57:13"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"6268:4:13"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6235:4:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"6241:3:13","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6249:4:13","type":""}],"src":"6173:166:13"},{"body":{"nodeType":"YulBlock","src":"6440:1256:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6450:24:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6470:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6464:5:13"},"nodeType":"YulFunctionCall","src":"6464:10:13"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"6454:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6517:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6519:16:13"},"nodeType":"YulFunctionCall","src":"6519:18:13"},"nodeType":"YulExpressionStatement","src":"6519:18:13"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6489:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6497:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6486:2:13"},"nodeType":"YulFunctionCall","src":"6486:30:13"},"nodeType":"YulIf","src":"6483:56:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6592:4:13"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6630:4:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6624:5:13"},"nodeType":"YulFunctionCall","src":"6624:11:13"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"6598:25:13"},"nodeType":"YulFunctionCall","src":"6598:38:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"6638:6:13"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"6548:43:13"},"nodeType":"YulFunctionCall","src":"6548:97:13"},"nodeType":"YulExpressionStatement","src":"6548:97:13"},{"nodeType":"YulVariableDeclaration","src":"6654:18:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6671:1:13","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"6658:9:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6681:23:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6700:4:13","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"6685:11:13","type":""}]},{"nodeType":"YulAssignment","src":"6713:24:13","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"6726:11:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6713:9:13"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"6783:656:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6797:35:13","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6816:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6828:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6824:3:13"},"nodeType":"YulFunctionCall","src":"6824:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6812:3:13"},"nodeType":"YulFunctionCall","src":"6812:20:13"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"6801:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6845:49:13","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6889:4:13"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"6859:29:13"},"nodeType":"YulFunctionCall","src":"6859:35:13"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"6849:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6907:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6916:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6911:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6994:172:13","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7019:6:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7037:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7042:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7033:3:13"},"nodeType":"YulFunctionCall","src":"7033:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7027:5:13"},"nodeType":"YulFunctionCall","src":"7027:26:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7012:6:13"},"nodeType":"YulFunctionCall","src":"7012:42:13"},"nodeType":"YulExpressionStatement","src":"7012:42:13"},{"nodeType":"YulAssignment","src":"7071:24:13","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7085:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7093:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7081:3:13"},"nodeType":"YulFunctionCall","src":"7081:14:13"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7071:6:13"}]},{"nodeType":"YulAssignment","src":"7112:40:13","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7129:9:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"7140:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7125:3:13"},"nodeType":"YulFunctionCall","src":"7125:27:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7112:9:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6941:1:13"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"6944:7:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6938:2:13"},"nodeType":"YulFunctionCall","src":"6938:14:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6953:28:13","statements":[{"nodeType":"YulAssignment","src":"6955:24:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6964:1:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"6967:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6960:3:13"},"nodeType":"YulFunctionCall","src":"6960:19:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6955:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"6934:3:13","statements":[]},"src":"6930:236:13"},{"body":{"nodeType":"YulBlock","src":"7214:166:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7232:43:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7259:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7264:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7255:3:13"},"nodeType":"YulFunctionCall","src":"7255:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7249:5:13"},"nodeType":"YulFunctionCall","src":"7249:26:13"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"7236:9:13","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7299:6:13"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"7311:9:13"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7338:1:13","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"7341:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7334:3:13"},"nodeType":"YulFunctionCall","src":"7334:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"7350:3:13","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7330:3:13"},"nodeType":"YulFunctionCall","src":"7330:24:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7360:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7356:3:13"},"nodeType":"YulFunctionCall","src":"7356:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7326:3:13"},"nodeType":"YulFunctionCall","src":"7326:37:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7322:3:13"},"nodeType":"YulFunctionCall","src":"7322:42:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7307:3:13"},"nodeType":"YulFunctionCall","src":"7307:58:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7292:6:13"},"nodeType":"YulFunctionCall","src":"7292:74:13"},"nodeType":"YulExpressionStatement","src":"7292:74:13"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"7185:7:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"7194:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7182:2:13"},"nodeType":"YulFunctionCall","src":"7182:19:13"},"nodeType":"YulIf","src":"7179:201:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7400:4:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7414:1:13","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"7417:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7410:3:13"},"nodeType":"YulFunctionCall","src":"7410:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"7426:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7406:3:13"},"nodeType":"YulFunctionCall","src":"7406:22:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7393:6:13"},"nodeType":"YulFunctionCall","src":"7393:36:13"},"nodeType":"YulExpressionStatement","src":"7393:36:13"}]},"nodeType":"YulCase","src":"6776:663:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6781:1:13","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7456:234:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7483:1:13","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7474:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7519:67:13","statements":[{"nodeType":"YulAssignment","src":"7537:35:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7556:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7561:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7552:3:13"},"nodeType":"YulFunctionCall","src":"7552:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7546:5:13"},"nodeType":"YulFunctionCall","src":"7546:26:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7537:5:13"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"7500:6:13"},"nodeType":"YulIf","src":"7497:89:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7606:4:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7665:5:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"7672:6:13"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"7612:52:13"},"nodeType":"YulFunctionCall","src":"7612:67:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7599:6:13"},"nodeType":"YulFunctionCall","src":"7599:81:13"},"nodeType":"YulExpressionStatement","src":"7599:81:13"}]},"nodeType":"YulCase","src":"7448:242:13","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6756:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6764:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6753:2:13"},"nodeType":"YulFunctionCall","src":"6753:14:13"},"nodeType":"YulSwitch","src":"6746:944:13"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6425:4:13","type":""},{"name":"src","nodeType":"YulTypedName","src":"6431:3:13","type":""}],"src":"6344:1352:13"},{"body":{"nodeType":"YulBlock","src":"7832:259:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7849:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7860:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7842:6:13"},"nodeType":"YulFunctionCall","src":"7842:21:13"},"nodeType":"YulExpressionStatement","src":"7842:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7883:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7894:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7879:3:13"},"nodeType":"YulFunctionCall","src":"7879:18:13"},{"name":"value1","nodeType":"YulIdentifier","src":"7899:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7872:6:13"},"nodeType":"YulFunctionCall","src":"7872:34:13"},"nodeType":"YulExpressionStatement","src":"7872:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7932:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7943:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7928:3:13"},"nodeType":"YulFunctionCall","src":"7928:18:13"},{"name":"value0","nodeType":"YulIdentifier","src":"7948:6:13"},{"name":"value1","nodeType":"YulIdentifier","src":"7956:6:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7915:12:13"},"nodeType":"YulFunctionCall","src":"7915:48:13"},"nodeType":"YulExpressionStatement","src":"7915:48:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7987:9:13"},{"name":"value1","nodeType":"YulIdentifier","src":"7998:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7983:3:13"},"nodeType":"YulFunctionCall","src":"7983:22:13"},{"kind":"number","nodeType":"YulLiteral","src":"8007:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7979:3:13"},"nodeType":"YulFunctionCall","src":"7979:31:13"},{"kind":"number","nodeType":"YulLiteral","src":"8012:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7972:6:13"},"nodeType":"YulFunctionCall","src":"7972:42:13"},"nodeType":"YulExpressionStatement","src":"7972:42:13"},{"nodeType":"YulAssignment","src":"8023:62:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8039:9:13"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8058:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8066:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8054:3:13"},"nodeType":"YulFunctionCall","src":"8054:15:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8075:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8071:3:13"},"nodeType":"YulFunctionCall","src":"8071:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8050:3:13"},"nodeType":"YulFunctionCall","src":"8050:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8035:3:13"},"nodeType":"YulFunctionCall","src":"8035:45:13"},{"kind":"number","nodeType":"YulLiteral","src":"8082:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8031:3:13"},"nodeType":"YulFunctionCall","src":"8031:54:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8023:4:13"}]}]},"name":"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7793:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7804:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7812:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7823:4:13","type":""}],"src":"7701:390:13"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_struct$_CertificateData_$5852_memory_ptr__to_t_struct$_CertificateData_$5852_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, 32), 0xc0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 224))\n        let memberValue0_1 := mload(add(value0, 32))\n        let _1 := not(31)\n        mstore(add(headStart, 64), add(sub(tail_1, headStart), _1))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        let memberValue0_2 := mload(add(value0, 64))\n        mstore(add(headStart, 96), add(sub(tail_2, headStart), _1))\n        let tail_3 := abi_encode_string(memberValue0_2, tail_2)\n        mstore(add(headStart, 128), mload(add(value0, 96)))\n        mstore(add(headStart, 160), and(mload(add(value0, 128)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0xc0), iszero(iszero(mload(add(value0, 160)))))\n        tail := tail_3\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 192)\n        let tail_1 := abi_encode_string(value0, add(headStart, 192))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_string(value2, tail_2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_string_calldata(add(headStart, offset_2), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_4b9266f8971ca3932150cfe5b3864f2dc96ea6105c4da1d850e76c998ea9c821__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Certificate ID out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), 0)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 64)\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c80638809f7271161005b5780638809f727146100da5780638da5cb5b146100eb578063beec1caa14610106578063f2fde38b1461011957600080fd5b806331494bbb14610082578063663b3e22146100ab578063715018a6146100d0575b600080fd5b610095610090366004610869565b61012c565b6040516100a291906108c8565b60405180910390f35b6100be6100b9366004610869565b6103de565b6040516100a296959493929190610955565b6100d86105d1565b005b6001546040519081526020016100a2565b6000546040516001600160a01b0390911681526020016100a2565b6100d8610114366004610a01565b6105e5565b6100d8610127366004610a9b565b6107ae565b6101706040518060c001604052806060815260200160608152602001606081526020016000815260200160006001600160a01b031681526020016000151581525090565b60015482106101c65760405162461bcd60e51b815260206004820152601c60248201527f4365727469666963617465204944206f7574206f6620626f756e64730000000060448201526064015b60405180910390fd5b600182815481106101d9576101d9610acb565b90600052602060002090600502016040518060c001604052908160008201805461020290610ae1565b80601f016020809104026020016040519081016040528092919081815260200182805461022e90610ae1565b801561027b5780601f106102505761010080835404028352916020019161027b565b820191906000526020600020905b81548152906001019060200180831161025e57829003601f168201915b5050505050815260200160018201805461029490610ae1565b80601f01602080910402602001604051908101604052809291908181526020018280546102c090610ae1565b801561030d5780601f106102e25761010080835404028352916020019161030d565b820191906000526020600020905b8154815290600101906020018083116102f057829003601f168201915b5050505050815260200160028201805461032690610ae1565b80601f016020809104026020016040519081016040528092919081815260200182805461035290610ae1565b801561039f5780601f106103745761010080835404028352916020019161039f565b820191906000526020600020905b81548152906001019060200180831161038257829003601f168201915b5050509183525050600382015460208201526004909101546001600160a01b0381166040830152600160a01b900460ff16151560609091015292915050565b600181815481106103ee57600080fd5b906000526020600020906005020160009150905080600001805461041190610ae1565b80601f016020809104026020016040519081016040528092919081815260200182805461043d90610ae1565b801561048a5780601f1061045f5761010080835404028352916020019161048a565b820191906000526020600020905b81548152906001019060200180831161046d57829003601f168201915b50505050509080600101805461049f90610ae1565b80601f01602080910402602001604051908101604052809291908181526020018280546104cb90610ae1565b80156105185780601f106104ed57610100808354040283529160200191610518565b820191906000526020600020905b8154815290600101906020018083116104fb57829003601f168201915b50505050509080600201805461052d90610ae1565b80601f016020809104026020016040519081016040528092919081815260200182805461055990610ae1565b80156105a65780601f1061057b576101008083540402835291602001916105a6565b820191906000526020600020905b81548152906001019060200180831161058957829003601f168201915b5050505060038301546004909301549192916001600160a01b0381169150600160a01b900460ff1686565b6105d96107ec565b6105e36000610819565b565b6105ed6107ec565b600180546040805160e06020601f8b01819004028201810190925260c0810189815292939290918291908b908b9081908501838280828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815291810191908990899081908401838280828437600092019190915250505090825250604080516020601f88018190048102820181019092528681529181019190879087908190840183828082843760009201829052509385525050426020808501919091523360408501526001606090940184905285549384018655948252509290922081519192600502019081906106e69082610b80565b50602082015160018201906106fb9082610b80565b50604082015160028201906107109082610b80565b506060820151600382015560808201516004909101805460a0909301511515600160a01b026001600160a81b03199093166001600160a01b03909216919091179190911790556000818152600260205260409081902082905551339082907fb7ff6cbe8f0282bf405f9ce3210be62c5620d39139a49186436e3f0fcc6a315a9061079d908b908b90610c40565b60405180910390a350505050505050565b6107b66107ec565b6001600160a01b0381166107e057604051631e4fbdf760e01b8152600060048201526024016101bd565b6107e981610819565b50565b6000546001600160a01b031633146105e35760405163118cdaa760e01b81523360048201526024016101bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561087b57600080fd5b5035919050565b6000815180845260005b818110156108a85760208185018101518683018201520161088c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000825160c060208401526108e460e0840182610882565b90506020840151601f19808584030160408601526109028383610882565b92506040860151915080858403016060860152506109208282610882565b9150506060840151608084015260018060a01b0360808501511660a084015260a0840151151560c08401528091505092915050565b60c08152600061096860c0830189610882565b828103602084015261097a8189610882565b9050828103604084015261098e8188610882565b606084019690965250506001600160a01b03929092166080830152151560a0909101529392505050565b60008083601f8401126109ca57600080fd5b50813567ffffffffffffffff8111156109e257600080fd5b6020830191508360208285010111156109fa57600080fd5b9250929050565b60008060008060008060608789031215610a1a57600080fd5b863567ffffffffffffffff80821115610a3257600080fd5b610a3e8a838b016109b8565b90985096506020890135915080821115610a5757600080fd5b610a638a838b016109b8565b90965094506040890135915080821115610a7c57600080fd5b50610a8989828a016109b8565b979a9699509497509295939492505050565b600060208284031215610aad57600080fd5b81356001600160a01b0381168114610ac457600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610af557607f821691505b602082108103610b1557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610b7b57600081815260208120601f850160051c81016020861015610b585750805b601f850160051c820191505b81811015610b7757828155600101610b64565b5050505b505050565b815167ffffffffffffffff811115610b9a57610b9a610b1b565b610bae81610ba88454610ae1565b84610b31565b602080601f831160018114610be35760008415610bcb5750858301515b600019600386901b1c1916600185901b178555610b77565b600085815260208120601f198616915b82811015610c1257888601518255948401946001909101908401610bf3565b5085821015610c305787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea26469706673582212201d9239b5fd1f50696fd40471e64a5e986fcb8b639f610055a563cc53c5c667b864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8809F727 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8809F727 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xBEEC1CAA EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31494BBB EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x663B3E22 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x955 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x5D1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA2 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0xA01 JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x170 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4365727469666963617465204944206F7574206F6620626F756E647300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D9 JUMPI PUSH2 0x1D9 PUSH2 0xACB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x202 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22E SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x250 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x294 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C0 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x326 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x352 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x39F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x374 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x39F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x382 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x411 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43D SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x48A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4CB SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x518 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x518 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x52D SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x559 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x57B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x589 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH2 0x5D9 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x5E3 PUSH1 0x0 PUSH2 0x819 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5ED PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 PUSH1 0x20 PUSH1 0x1F DUP12 ADD DUP2 SWAP1 DIV MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP2 ADD DUP10 DUP2 MSTORE SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP6 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP9 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP7 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP TIMESTAMP PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SWAP1 SWAP5 ADD DUP5 SWAP1 MSTORE DUP6 SLOAD SWAP4 DUP5 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE POP SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD SWAP2 SWAP3 PUSH1 0x5 MUL ADD SWAP1 DUP2 SWAP1 PUSH2 0x6E6 SWAP1 DUP3 PUSH2 0xB80 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x6FB SWAP1 DUP3 PUSH2 0xB80 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x710 SWAP1 DUP3 PUSH2 0xB80 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xA0 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD CALLER SWAP1 DUP3 SWAP1 PUSH32 0xB7FF6CBE8F0282BF405F9CE3210BE62C5620D39139A49186436E3F0FCC6A315A SWAP1 PUSH2 0x79D SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7B6 PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x7E9 DUP2 PUSH2 0x819 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x88C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0xC0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x8E4 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x882 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP1 DUP6 DUP5 SUB ADD PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x902 DUP4 DUP4 PUSH2 0x882 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP6 DUP5 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE POP PUSH2 0x920 DUP3 DUP3 PUSH2 0x882 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP6 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x968 PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x882 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x97A DUP2 DUP10 PUSH2 0x882 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x98E DUP2 DUP9 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA3E DUP11 DUP4 DUP12 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA63 DUP11 DUP4 DUP12 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xA7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA89 DUP10 DUP3 DUP11 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAF5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB15 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xB58 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB77 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB64 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB9A PUSH2 0xB1B JUMP JUMPDEST PUSH2 0xBAE DUP2 PUSH2 0xBA8 DUP5 SLOAD PUSH2 0xAE1 JUMP JUMPDEST DUP5 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBE3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xBCB JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC12 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xBF3 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xC30 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR SWAP3 CODECOPY 0xB5 REVERT 0x1F POP PUSH10 0x6FD40471E64A5E986FCB DUP12 PUSH4 0x9F610055 0xA5 PUSH4 0xCC53C5C6 PUSH8 0xB864736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"398:2535:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2507:235;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;906:37;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;2293:101:0:-;;;:::i;:::-;;2825:106:12;2905:12;:19;2825:106;;2588:25:13;;;2576:2;2561:18;2825:106:12;2442:177:13;1638:85:0;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2770:51:13;;2758:2;2743:18;1638:85:0;2624:203:13;1610:674:12;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2507:235:12:-;2581:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2581:22:12;2639:12;:19;2623:35;;2615:76;;;;-1:-1:-1;;;2615:76:12;;4693:2:13;2615:76:12;;;4675:21:13;4732:2;4712:18;;;4705:30;4771;4751:18;;;4744:58;4819:18;;2615:76:12;;;;;;;;;2708:12;2721:13;2708:27;;;;;;;;:::i;:::-;;;;;;;;;;;2701:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2701:34:12;;;-1:-1:-1;;2701:34:12;;;;;;;;;;;;;-1:-1:-1;;;;;2701:34:12;;;;;;-1:-1:-1;;;2701:34:12;;;;;;;;;;;;;-1:-1:-1;;2507:235:12:o;906:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;906:37:12;;;;;;;;;;;;-1:-1:-1;;;;;906:37:12;;;-1:-1:-1;;;;906:37:12;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1610:674:12:-;1531:13:0;:11;:13::i;:::-;1809:12:12::1;:19:::0;;1857:264:::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;;::::0;;;;;;;::::1;::::0;::::1;::::0;;;1809:19;;:12;1857:264;;;;;1900:11;;;;;;1857:264;;1900:11;;;;1857:264;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;;1857:264:12;;;-1:-1:-1;1857:264:12::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;1937:10;;;;;;1857:264;::::1;1937:10:::0;;;;1857:264;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;;1857:264:12;;;-1:-1:-1;1857:264:12::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;1978:15;;;;;;1857:264;::::1;1978:15:::0;;;;1857:264;::::1;;::::0;::::1;::::0;;;-1:-1:-1;1857:264:12;;;-1:-1:-1;;2023:15:12::1;1857:264;::::0;;::::1;::::0;;;;2072:10:::1;1857:264:::0;;;;2106:4:::1;1857:264:::0;;;;;;;1839:283;;;;::::1;::::0;;;;;-1:-1:-1;1839:283:12;;;;;;;;::::1;;;::::0;;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;1839:283:12::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;1839:283:12::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;1839:283:12::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;-1:-1:-1::0;;;1839:283:12::1;-1:-1:-1::0;;;;;;1839:283:12;;;-1:-1:-1;;;;;1839:283:12;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2133:31:::0;;;:16:::1;:31;::::0;;;;;;:47;;;2220:57;2253:10:::1;::::0;2167:13;;2220:57:::1;::::0;::::1;::::0;2265:11;;;;2220:57:::1;:::i;:::-;;;;;;;;1775:509;1610:674:::0;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2770:51:13::0;2743:18;;2672:31:0::1;2624:203:13::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:3;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:3;1901:40:0;;;2770:51:13;2743:18;;1901:40:0;2624:203:13;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:180:13:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:13;;14:180;-1:-1:-1;14:180:13:o;199:423::-;241:3;279:5;273:12;306:6;301:3;294:19;331:1;341:162;355:6;352:1;349:13;341:162;;;417:4;473:13;;;469:22;;463:29;445:11;;;441:20;;434:59;370:12;341:162;;;345:3;548:1;541:4;532:6;527:3;523:16;519:27;512:38;611:4;604:2;600:7;595:2;587:6;583:15;579:29;574:3;570:39;566:50;559:57;;;199:423;;;;:::o;627:1006::-;822:2;811:9;804:21;785:4;860:6;854:13;903:4;898:2;887:9;883:18;876:32;931:52;978:3;967:9;963:19;949:12;931:52;:::i;:::-;917:66;;1032:2;1024:6;1020:15;1014:22;1059:2;1055:7;1126:2;1114:9;1106:6;1102:22;1098:31;1093:2;1082:9;1078:18;1071:59;1153:41;1187:6;1171:14;1153:41;:::i;:::-;1139:55;;1243:2;1235:6;1231:15;1225:22;1203:44;;1311:2;1299:9;1291:6;1287:22;1283:31;1278:2;1267:9;1263:18;1256:59;;1338:41;1372:6;1356:14;1338:41;:::i;:::-;1324:55;;;1434:2;1426:6;1422:15;1416:22;1410:3;1399:9;1395:19;1388:51;1522:1;1518;1513:3;1509:11;1505:19;1498:3;1490:6;1486:16;1480:23;1476:49;1470:3;1459:9;1455:19;1448:78;1596:3;1588:6;1584:16;1578:23;1571:31;1564:39;1557:4;1546:9;1542:20;1535:69;1621:6;1613:14;;;627:1006;;;;:::o;1638:799::-;1961:3;1950:9;1943:22;1924:4;1988:46;2029:3;2018:9;2014:19;2006:6;1988:46;:::i;:::-;2082:9;2074:6;2070:22;2065:2;2054:9;2050:18;2043:50;2116:33;2142:6;2134;2116:33;:::i;:::-;2102:47;;2197:9;2189:6;2185:22;2180:2;2169:9;2165:18;2158:50;2225:33;2251:6;2243;2225:33;:::i;:::-;2289:2;2274:18;;2267:34;;;;-1:-1:-1;;;;;;;2338:32:13;;;;2332:3;2317:19;;2310:61;2415:14;2408:22;2358:3;2387:19;;;2380:51;2217:41;1638:799;-1:-1:-1;;;1638:799:13:o;2832:348::-;2884:8;2894:6;2948:3;2941:4;2933:6;2929:17;2925:27;2915:55;;2966:1;2963;2956:12;2915:55;-1:-1:-1;2989:20:13;;3032:18;3021:30;;3018:50;;;3064:1;3061;3054:12;3018:50;3101:4;3093:6;3089:17;3077:29;;3153:3;3146:4;3137:6;3129;3125:19;3121:30;3118:39;3115:59;;;3170:1;3167;3160:12;3115:59;2832:348;;;;;:::o;3185:1010::-;3298:6;3306;3314;3322;3330;3338;3391:2;3379:9;3370:7;3366:23;3362:32;3359:52;;;3407:1;3404;3397:12;3359:52;3447:9;3434:23;3476:18;3517:2;3509:6;3506:14;3503:34;;;3533:1;3530;3523:12;3503:34;3572:59;3623:7;3614:6;3603:9;3599:22;3572:59;:::i;:::-;3650:8;;-1:-1:-1;3546:85:13;-1:-1:-1;3738:2:13;3723:18;;3710:32;;-1:-1:-1;3754:16:13;;;3751:36;;;3783:1;3780;3773:12;3751:36;3822:61;3875:7;3864:8;3853:9;3849:24;3822:61;:::i;:::-;3902:8;;-1:-1:-1;3796:87:13;-1:-1:-1;3990:2:13;3975:18;;3962:32;;-1:-1:-1;4006:16:13;;;4003:36;;;4035:1;4032;4025:12;4003:36;;4074:61;4127:7;4116:8;4105:9;4101:24;4074:61;:::i;:::-;3185:1010;;;;-1:-1:-1;3185:1010:13;;-1:-1:-1;3185:1010:13;;4154:8;;3185:1010;-1:-1:-1;;;3185:1010:13:o;4200:286::-;4259:6;4312:2;4300:9;4291:7;4287:23;4283:32;4280:52;;;4328:1;4325;4318:12;4280:52;4354:23;;-1:-1:-1;;;;;4406:31:13;;4396:42;;4386:70;;4452:1;4449;4442:12;4386:70;4475:5;4200:286;-1:-1:-1;;;4200:286:13:o;4848:127::-;4909:10;4904:3;4900:20;4897:1;4890:31;4940:4;4937:1;4930:15;4964:4;4961:1;4954:15;4980:380;5059:1;5055:12;;;;5102;;;5123:61;;5177:4;5169:6;5165:17;5155:27;;5123:61;5230:2;5222:6;5219:14;5199:18;5196:38;5193:161;;5276:10;5271:3;5267:20;5264:1;5257:31;5311:4;5308:1;5301:15;5339:4;5336:1;5329:15;5193:161;;4980:380;;;:::o;5365:127::-;5426:10;5421:3;5417:20;5414:1;5407:31;5457:4;5454:1;5447:15;5481:4;5478:1;5471:15;5623:545;5725:2;5720:3;5717:11;5714:448;;;5761:1;5786:5;5782:2;5775:17;5831:4;5827:2;5817:19;5901:2;5889:10;5885:19;5882:1;5878:27;5872:4;5868:38;5937:4;5925:10;5922:20;5919:47;;;-1:-1:-1;5960:4:13;5919:47;6015:2;6010:3;6006:12;6003:1;5999:20;5993:4;5989:31;5979:41;;6070:82;6088:2;6081:5;6078:13;6070:82;;;6133:17;;;6114:1;6103:13;6070:82;;;6074:3;;;5714:448;5623:545;;;:::o;6344:1352::-;6470:3;6464:10;6497:18;6489:6;6486:30;6483:56;;;6519:18;;:::i;:::-;6548:97;6638:6;6598:38;6630:4;6624:11;6598:38;:::i;:::-;6592:4;6548:97;:::i;:::-;6700:4;;6764:2;6753:14;;6781:1;6776:663;;;;7483:1;7500:6;7497:89;;;-1:-1:-1;7552:19:13;;;7546:26;7497:89;-1:-1:-1;;6301:1:13;6297:11;;;6293:24;6289:29;6279:40;6325:1;6321:11;;;6276:57;7599:81;;6746:944;;6776:663;5570:1;5563:14;;;5607:4;5594:18;;-1:-1:-1;;6812:20:13;;;6930:236;6944:7;6941:1;6938:14;6930:236;;;7033:19;;;7027:26;7012:42;;7125:27;;;;7093:1;7081:14;;;;6960:19;;6930:236;;;6934:3;7194:6;7185:7;7182:19;7179:201;;;7255:19;;;7249:26;-1:-1:-1;;7338:1:13;7334:14;;;7350:3;7330:24;7326:37;7322:42;7307:58;7292:74;;7179:201;-1:-1:-1;;;;;7426:1:13;7410:14;;;7406:22;7393:36;;-1:-1:-1;6344:1352:13:o;7701:390::-;7860:2;7849:9;7842:21;7899:6;7894:2;7883:9;7879:18;7872:34;7956:6;7948;7943:2;7932:9;7928:18;7915:48;8012:1;7983:22;;;8007:2;7979:31;;;7972:42;;;;8075:2;8054:15;;;-1:-1:-1;;8050:29:13;8035:45;8031:54;;7701:390;-1:-1:-1;7701:390:13:o"},"methodIdentifiers":{"certificates(uint256)":"663b3e22","getCertificateCount()":"8809f727","getCertificateData(uint256)":"31494bbb","issueCertificate(string,string,string)":"beec1caa","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"certificateId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"institution\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"studentName\",\"type\":\"string\"}],\"name\":\"CertificateIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"certificates\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"studentName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"degreeType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"institutionName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issueTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuingInstitution\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isIssued\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCertificateCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"certificateId\",\"type\":\"uint256\"}],\"name\":\"getCertificateData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"studentName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"degreeType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"institutionName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issueTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuingInstitution\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isIssued\",\"type\":\"bool\"}],\"internalType\":\"struct CertificateOnChain.CertificateData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"studentName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"degreeType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"institutionName\",\"type\":\"string\"}],\"name\":\"issueCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A baseline contract for comparison, storing all certificate data directly on-chain. This contract is intentionally designed to be less efficient to highlight the benefits of the hybrid storage model in the main `Certificate` contract.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"getCertificateCount()\":{\"details\":\"Returns the total number of certificates issued.\"},\"getCertificateData(uint256)\":{\"details\":\"Retrieves the full data of a certificate.\",\"params\":{\"certificateId\":\"The ID of the certificate to retrieve.\"},\"returns\":{\"_0\":\"The full certificate data.\"}},\"issueCertificate(string,string,string)\":{\"details\":\"Issues a new certificate by storing all its data on-chain. This function will consume a significant amount of gas, especially with longer strings.\",\"params\":{\"degreeType\":\"The type of degree awarded.\",\"institutionName\":\"The name of the issuing institution.\",\"studentName\":\"The name of the student.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"CertificateOnChain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CertificateOnChain.sol\":\"CertificateOnChain\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CertificateOnChain.sol\":{\"keccak256\":\"0x29872c9b1fc815803f782bbb5cca3ad85902cb372275061fd9148c2dfd3f1e5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d704d35a15ebdd710fb46f699696ece3ad14b5b199269359a4e4f71ce00b2a4\",\"dweb:/ipfs/QmfQAWCEyJeqQRWkzTCeZ2XMyBEUYDr8UUfJMAUnxRj2Hi\"]}},\"version\":1}"}}}}}